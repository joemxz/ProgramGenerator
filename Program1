ï»¿<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="33.00" TargetName="PLC01" TargetType="Controller" ContainsContext="false" Owner="Windows User" ExportDate="Thu Feb 03 19:39:59 2022" ExportOptions="NoRawData L5KData DecoratedData ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Target" Name="PLC01" ProcessorType="Emulate 5570" MajorRev="33" MinorRev="11" TimeSlice="20" ShareUnusedTimeSlice="1" ProjectCreationDate="Tue Dec 28 16:04:31 2021" LastModifiedDate="Tue Dec 28 16:04:34 2021" SFCExecutionControl="CurrentActive" SFCRestartPosition="MostRecent"
 SFCLastScan="DontScan" ProjectSN="16#0000_0000" MatchProjectToController="false" CanUseRPIFromProducer="false" InhibitAutomaticFirmwareUpdate="0" PassThroughConfiguration="EnabledWithAppend" DownloadProjectDocumentationAndExtendedProperties="true" DownloadProjectCustomProperties="true" ReportMinorOverflow="false">
<RedundancyInfo Enabled="false" KeepTestEditsOnSwitchOver="false" IOMemoryPadPercentage="90" DataTablePadPercentage="50"/>
<Security Code="0" ChangesToDetect="16#ffff_ffff_ffff_ffff"/>
<SafetyInfo/>
<DataTypes>
<DataType Name="P_DescList" Family="NoFamily" Class="User">
<Description>
<![CDATA[Code / Description List Entry]]>
</Description>
<Members>
<Member Name="Code" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Code for which to look up Description]]>
</Description>
</Member>
<Member Name="Desc" DataType="STRING_40" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for given Code]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="STRING_12" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="12" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_20" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="20" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_40" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="40" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_8" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="8" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_Area" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="8" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_Cond" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="20" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STRING_NavTag" Family="StringFamily" Class="User">
<Description>
<![CDATA[Navigation Tag]]>
</Description>
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="20" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
</DataTypes>
<Modules>
<Module Name="Local" CatalogNumber="Emulate 5570" Vendor="1" ProductType="14" ProductCode="53" Major="33" Minor="11" ParentModule="Local" ParentModPortId="1" Inhibited="false" MajorFault="true"
>
<EKey State="ExactMatch"/>
<Ports>
<Port Id="1" Address="0" Type="ICP" Upstream="false">
<Bus Size="4"/>
</Port>
</Ports>
</Module>
</Modules>
<AddOnInstructionDefinitions>
<AddOnInstructionDefinition Name="P_Alarm" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-02-29T20:40:04.200Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:10:09.936Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Alarm]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This instruction monitors one input condition and provides one Alarm with:
  * configurable latching (reset required) and acknowledgement requirement
  * configurable alarm severity
      1 to 250       = Low  (blue, typ. informational)
      251 to 500   = Medium  (yelllow, typ. warning)
      501 to 750   = High  (red, typ. process exception)
      751 to 1000 = Urgent  (magenta, typ. equip. fault)
  * configurable minimum ON time (e.g., to ensure it is seen by the HMI)
  * commands to suppress/unsuppress (Prog), shelve/unshelve (Oper)
        and disable/enable (Maint) the alarm.
  * configurable amount of time shelved to automatically unshelve an alarm
  * FTA&E support for suppressed, shelved and disabled states (V7.0)
  * a Maintenance "Test" command, which triggers the alarm for the minimum
     alarm time for testing purposes.

NOTE regarding parameter naming:
  FTAE names (same as ALMD instruction) are used instead
  of the ANSI/ISA 18.2-2009 names, as follows:
   "Disabled" is the equivalent of "Out of Service" in ISA 18.2.
      (The Disabled state is owned by Maintenance.)
   "Suppressed" is the equivalent of "Suppressed by Design" in
      ISA 18.2. (The Suppressed state is owned by Program logic.)
   "Shelved" is the same as in ISA 18.2.
      (The Shelved state is owned by Operator, but may be cleared
      by Program logic based on time, shift change, etc.)

This instruction is usually nested within other instructions, with one instance
used for each Alarm generated by the containing instruction.  It may also be
used as a standalone instruction for Alarm conditions generated by custom logic.

FTAE Alarm Setup:
  (object).(alarm).Com_AE.0:  Alarm to FTAE
    .Com_AE.1:   Ack to/from FTAE
    .Com_AE.3:   Shelved from FTAE Status
    .Com_AE.4:   Shelve/Reshelve to FTAE Control (auto reset)
    .Com_AE.5:   Unshelve to FTAE Control (auto reset)
    .Com_AE.6:   Suppressed from FTAE Status
    .Com_AE.7:   Suppress to FTAE Control (auto reset)
    .Com_AE.8:   Unsuppress to FTAE Control (auto reset)
    .Com_AE.9:   Disabled from FTAE Status
    .Com_AE.10: Disable to FTAE Control (auto reset)
    .Com_AE.11: Enable to FTAE Control (auto reset)
   all other bits unused
    .Cfg_MaxShelfT is also used in FTAE config.
    .Cfg_Severity is used in FTAE for FTView 8.x and later.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Unmodified, up-rev only for Library 4.10.00

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-07 Patch01)
See 4.00 Release Notes for details.
* Changed Inf_Lib and Inf_Type to HMI_Lib and HMI_Type.
* Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by containing objects.
* Modified to remove Suppressed from the conditions which show the
    "Inhibited" breadcrumb.
* Added Inp_OoS for Out of Service from parent object's P_CmdSrc.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm Condition Input 1=Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_OoS" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Com_AE.2" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Out of Service (from object's P_CmdSrc)]]>
</Description>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset Alarm requiring reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_Exists" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm configured to exist, 0=Does not exist, don't scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ResetReqd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Latched Alarm, a Reset is required to clear this Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AckReqd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for this Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AllowShelve" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Allow Operator to Shelve this Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AllowDisable" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Allow Maintenance to Disable this Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_Severity" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[750]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="750"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaxShelfT" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Auto unshelve after shelved this long (1..32767 minutes)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[480]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="480"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AlmMinOnT" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time Alm output stays on (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[5]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="5"/>
</DefaultData>
</Parameter>
<Parameter Name="PCfg_AllowExist" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm can be configured to exist, 0=other configs make alarm meaningless]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset latched alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Ack" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Suppress" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress by Design (inhibits new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Unsuppress" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress (allows new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Unshelve" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve (e.g., on shift change)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Notify" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Severity and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SecToUnshelve" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Number of Seconds until this alarm unshelves itself (mmm:ss)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_MinToUnshelve" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Number of minutes until this alarm unshelves itself (mmm:ss)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Alm" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Com_AE.0" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm output 1=In Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Com_AE.1" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm acknowledged status: 1=Ack rcvd]]>
</Description>
</Parameter>
<Parameter Name="Shelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Com_AE.3" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm has been Shelved by Operator (inhibits new alarm)]]>
</Description>
</Parameter>
<Parameter Name="Suppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Com_AE.6" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm has been Suppressed by Program (inhibits new alarm)]]>
</Description>
</Parameter>
<Parameter Name="Disabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Com_AE.9" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm has been Disabled by Maintanance (inhibits new alarm)]]>
</Description>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Alarm has been suppressed, shelved or disabled, display "I" icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Ack" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: see detail Err_ bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Severity" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Invalid Severity (use 1 to 4)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="P_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_Alm" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Alarm Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Suppressed" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Alarm Suppressed Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_AlmMinOnT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Alarm output minimum ON time to be seen by alarm server]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,5000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="5000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_AutoAckT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time to clear Ack bit when Ack not required]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,5000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="5000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ShelfT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Time to auto Unshelve a Shelved Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Com_AE" DataType="INT" Radix="Binary" ExternalAccess="Read/Write">
<Description>
<![CDATA[Communication with HMI / Alarm/Event Server (see bit descriptions)]]>
</Description>
<Comments>
<Comment Operand=".0">
<![CDATA[Alarm to AE]]>
</Comment>
<Comment Operand=".1">
<![CDATA[Acked from AE Status, Ack to AE Control]]>
</Comment>
<Comment Operand=".2">
<![CDATA[Out of Service (from parent object's P_CmdSrc)]]>
</Comment>
<Comment Operand=".3">
<![CDATA[Shelved from AE Status]]>
</Comment>
<Comment Operand=".4">
<![CDATA[Shelve to AE Control]]>
</Comment>
<Comment Operand=".5">
<![CDATA[Unshelve to AE Control]]>
</Comment>
<Comment Operand=".6">
<![CDATA[Suppressed from AE Status]]>
</Comment>
<Comment Operand=".7">
<![CDATA[Suppress to AE Control]]>
</Comment>
<Comment Operand=".8">
<![CDATA[Unsuppress to AE Control]]>
</Comment>
<Comment Operand=".9">
<![CDATA[Disabled from AE Status]]>
</Comment>
<Comment Operand=".10">
<![CDATA[Disable to AE Control]]>
</Comment>
<Comment Operand=".11">
<![CDATA[Enable to AE Control]]>
</Comment>
<Comment Operand=".12">
<![CDATA[(not used)]]>
</Comment>
<Comment Operand=".13">
<![CDATA[(not used)]]>
</Comment>
<Comment Operand=".14">
<![CDATA[(not used)]]>
</Comment>
<Comment Operand=".15">
<![CDATA[(not used)]]>
</Comment>
</Comments>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0010"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm Tag Text (e.g., "LAHH-101")]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Alarm']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Cond" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Alarm Condition Text (e.g., "High-High PV")]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[15,'Alarm Condition$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="15">
<![CDATA['Alarm Condition']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SecToUnshelve" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Number of seconds until this alarm unshelves itself]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Alarm$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Alarm']]>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Unshelve" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Unshelve (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Shelve" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Shelve (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Test" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Test (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Enable" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Enable (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Disable" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Disable (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Unshelve" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Unshelve alarm (allows new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Shelve" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Shelve Alarm (inhibits new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Ack" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Acknowledge alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset latched alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Test" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Test alarm (issued for minimum alarm time)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Enable" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Enable alarm (allows new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Disable" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Disable alarm (inhibits new alarm)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Ack" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Ack (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Perform Alarm processing, but Invert Alarm Input ("Inp") for use on LD rung (EnableIn False)]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
P_Alarm: EnableInFalse (False Rung) Handling
============================================================
When EnableIn is FALSE (False Rung), the Input
("Inp") is inverted.  This allows the P_Alarm instruction
to be used on a simple Ladder Diagram rung:

XIC  (condition)   P_Alarm (Alarm)

All processing is identical to the normal Logic
routine, except references to Inp are inverted!
============================================================
CONFIGURATION
============================================================
In the object containing this alarm, other configuration (such as not having
any limit switches) may make this particular alarm meaningless.
The Program Configuration "Allow Exist" is used to hide this alarm
on the object's faceplate and other graphics, and forces the Cfg_Exist to 0.]]>
</Comment>
<Text>
<![CDATA[XIO(PCfg_AllowExist)OTU(Cfg_Exists);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[
This rung gets the Alarm Minimum ON Time Configuration
and the Auto Unshelve Time Configuration
values and sets the corresponding timer presets.
If the Minimum ON Time Configuration results in a timer preset
less than 5 seconds, the preset is set to 5 seconds.
If the Auto Unshelve Time Configuration results in a negative
timer preset, the preset is set to 28800 seconds (8 hours).
Either bad Config is flagged (Err_Timer).
Bad Config is also flagged if the Cfg_Severity is out of range (valid = 1..1000) (Err_Severity).]]>
</Comment>
<Text>
<![CDATA[XIC(Cfg_Exists)[[MUL(Cfg_AlmMinOnT,1000,Wrk_AlmMinOnT.PRE) LES(Wrk_AlmMinOnT.PRE,5000) MOV(5,Cfg_AlmMinOnT) MOV(5000,Wrk_AlmMinOnT.PRE) ,MUL(Cfg_MaxShelfT,60000,Wrk_ShelfT.PRE) XIC(Wrk_ShelfT.PRE.31) MOV(480,Cfg_MaxShelfT) MOV(28800000,Wrk_ShelfT.PRE) ] OTE(Err_Timer) ,LIM(1001,Cfg_Severity,0) MOV(1000,Cfg_Severity) OTE(Err_Severity) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[The Auto Ack time is ALWAYS five seconds.]]>
</Comment>
<Text>
<![CDATA[MOV(5000,Wrk_AutoAckT.PRE);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[When the Alarm initially occurs, the Auto Ack timer is started.
If this Alarm is set for "Ack Not Required", it is automatically 
Acknowledged after the AutoAck time expires.

This pulsing of the Ack bit OFF then ON allows the "Ack Not Required"
configuration to be used with View 32, View ME and other legacy
alarm systems that don't support optional ack.]]>
</Comment>
<Text>
<![CDATA[XIO(Ack)TON(Wrk_AutoAckT,?,?);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[If this alarm does not exist, set it to its default state (no alarm, acknowleded,
uninhibited, unsuppressed, enabled) and clear any received commands.
Then jump over the remainder of the Logic and return.]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_Exists)[XIC(Wrk_AutoAckT.DN) OTL(Ack) ,OTU(Wrk_Alm) OTU(Shelved) OTU(Wrk_Suppressed) OTU(Disabled) OTU(Sts_AlmInh) ,OTU(PCmd_Reset) OTU(PCmd_Ack) OTU(PCmd_Unshelve) OTU(PCmd_Suppress) OTU(PCmd_Unsuppress) ,OTU(OCmd_Reset) OTU(OCmd_Ack) OTU(OCmd_Shelve) OTU(OCmd_Unshelve) ,OTU(MCmd_Disable) OTU(MCmd_Enable) RES(Wrk_AlmMinOnT) RES(Wrk_ShelfT) ]JMP(End);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands:
Operator Commands (OCmd_xx) and Maintenance Commands
(MCmd_xx) from the HMI and
Program Command (PCmd_xx) from other objects.

NOTE:  ALARM COMMANDS ARE ACCEPTED REGARDLESS OF MODE.

This rung receives the Program Alarm Inhibit Command.
If configured for EDGE, the Command is cleared.

#####  V4.00.00  2018-06-07:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Suppress)OTU(PCmd_Suppress)OTL(Wrk_Suppressed)OTL(Com_AE.7)OTU(Com_AE.8);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[This rung receives the Program Alarm Unsuppress Command (Unsuppress wins over Suppress).
If configured for LEVEL, Suppressed is cleared if PCmd_Suppress is cleared.

#####  V4.00.00  2018-06-07:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Unsuppress)OTU(PCmd_Unsuppress)OTU(Wrk_Suppressed)OTU(Com_AE.7)OTL(Com_AE.8);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[This rung receives the Operator Shelve Command.
If the command is received while shelved, the shelf timer starts over (reset).]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Shelve)OTU(OCmd_Shelve)XIC(Cfg_AllowShelve)OTL(Shelved)OTL(Com_AE.4)OTU(Com_AE.5)RES(Wrk_ShelfT);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[This rung times how long the alarm has been shelved.
If the Shelf Timer expires (and its preset > 0), automatically unshelve the alarm.]]>
</Comment>
<Text>
<![CDATA[XIC(Shelved)TON(Wrk_ShelfT,?,?);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[This rung receives the Operator Unshelve Command (Unshelve wins over Shelve)
and the Program Unshelve Command
Also Unshelve the alarm if the Shelf Timer expires (if preset > 0).

NOTE: Shelved can also be set/cleared directly by the HMI (FTA&E support).]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Unshelve) OTU(OCmd_Unshelve) ,XIC(PCmd_Unshelve) OTU(PCmd_Unshelve) ,XIC(Wrk_ShelfT.DN) NEQ(Wrk_ShelfT.PRE,0) ,XIO(Cfg_AllowShelve) ]OTU(Shelved)OTU(Com_AE.4)OTL(Com_AE.5);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[This rung receives the Maintenance Alarm Disable Command.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Disable)OTU(MCmd_Disable)XIC(Cfg_AllowDisable)OTL(Disabled)OTL(Com_AE.10)OTU(Com_AE.11);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[This rung receives the Maintenance Alarm Enable Command (Enable wins over Disable)

NOTE: Disabled can also be set/cleared directly by the HMI (FTA&E support).]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_Enable) ,XIO(Cfg_AllowDisable) ]OTU(MCmd_Enable)OTU(Disabled)OTU(Com_AE.10)OTL(Com_AE.11);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[If the Alarm is Disabled (Maint), or Shelved (Oper),
then post the "alarm inhibited" breadcrumb and do not
allow a new alarm to be issued.

NOTE:  If the Alarm is Suppressed (Prog), this is assumed to be "Suppressed by Design"
(ANSI/ISA-18.2-2016) and NOT shown to the operator with an "inhibited"
breadcrumb!  He just never sees the point as being In Alarm!

@@@@@  Unlatch and Latch are used to avoid a verification  @@@@@
@@@@@  warning in combination with Rung 2's OTU (above)!  @@@@@

#####  V4.00.00  2018-06-07:  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(Sts_AlmInh)[XIC(Disabled) ,XIC(Shelved) ]OTL(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[This rung receives the Alarm Acknowledge Commands

NOTE: Acknowledge can also be set/cleared directly by the HMI.]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_Ack) OTU(PCmd_Ack) ,XIC(OCmd_Ack) OTU(OCmd_Ack) ,XIO(Wrk_AutoAckT.TT) XIO(Cfg_AckReqd) ]OTL(Ack);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[This rung receives the Alarm Reset Commands.

If the Alarm Reset Command is received and, either, the Input condition has returned
to normal, or the alarm is out of service, disabled, suppressed or shelved,
the Alarm is CLEARED and ACKNOWLEDGED (to match ALMD behavior!!!).

@@@@@  "Inp" is Inverted in the EnableInFalse Routine!  @@@@@

#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_AutoAckT.TT)[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ][XIC(Inp) ,XIC(Sts_AlmInh) ,XIC(Wrk_Suppressed) ,XIC(Inp_OoS) ]OTL(Ack)OTU(Wrk_Alm);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[============================================================
ALARM GENERATION
============================================================
This rung CLEARS the Alarm when the alarm condition clears and its
Minimum On Time has expired, IF Reset is NOT Required.

@@@@@  "Inp" is Inverted in the EnableInFalse Routine!  @@@@@

#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Inp) ,XIC(Inp_OoS) ] XIO(Cfg_ResetReqd) XIO(Wrk_AlmMinOnT.TT) ,XIC(Disabled) XIO(Wrk_AutoAckT.TT) ]OTU(Wrk_Alm);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[If the Alarm Input (Inp) is true (inverted in EnableInFalse) and the alarm is (or becomes)
In Service, Enabled, Unsuppressed and Unshelved, this rung sets the Alarm (Alm) bit.
The Acknowledge (Ack) bit is cleared when the Alarm initially occurs.

@@@@@  "Inp" is Inverted in the EnableInFalse Routine!  @@@@@

#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp) XIO(Sts_AlmInh) XIO(Wrk_Suppressed) XIO(Inp_OoS) ,XIC(MCmd_Test) OTU(MCmd_Test) ][XIO(Wrk_Alm) OTU(Ack) ,OTL(Wrk_Alm) ];]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[============================================================
OPERATOR COMMAND READIES
============================================================
This Alarm is ready for (requires) an Acknowledgement if the Alarm
is not Acknowledged (an Acknowledge was Required when the alarm occurred).

This Alarm is ready for (requires) a Reset if there is an Alarm, Reset is Required,
and either the alarm condition has CLEARED or the alarm is
Out of Service, Shelved, Suppressed or Disabled.
.
If the Alarm is NOT Shelved, it is ready for Shelve.

If the Alarm IS Shelved, it is ready for Unshelve.

If the Alarm is NOT Disabled, it is ready for Disable.

If the Alarm IS Disabled, it is ready for Enable.

NOTE: This rung appears before the Values/Status rung because the Rdy_Reset
condition is used to eliminate redundant logic in the rung below for Val_Notify.0.

@@@@@  "Inp" is Inverted in the EnableInFalse Routine!  @@@@@

#####  V4.00.00  2018-06-07:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by containing objects.  #####
#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(End)XIC(Cfg_Exists)[XIO(Wrk_AutoAckT.TT) [XIO(Ack) OTE(ORdy_Ack) ,XIC(Wrk_Alm) XIC(Cfg_ResetReqd) [XIC(Inp) ,XIC(Sts_AlmInh) ,XIC(Wrk_Suppressed) ,XIC(Inp_OoS) ] OTE(ORdy_Reset) ] ,XIC(Cfg_AllowShelve) OTE(ORdy_Shelve) ,XIC(Shelved) OTE(ORdy_Unshelve) ,XIO(Disabled) XIC(Cfg_AllowDisable) OTE(MRdy_Disable) ,XIC(Disabled) OTE(MRdy_Enable) ,XIO(Wrk_Alm) OTE(MRdy_Test) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[============================================================
VALUE / STATUS GENERATION
============================================================
This rung copies the internal working status (Suppressed, In Alarm)
to public Status bits.  Note that internal working bits are used so that
outside objects cannot manipulate the state of this object
by setting/clearing its Status and Alarm bits.

Public Status is generated for:
Alarm (with minimum ON time to be seen by polling)
Alarm Suppressed
Unsuppressed, Unshelved and Enabled are generated for HMI (FTVSE 7).

(Ack, Shelved and Disabled can be set/cleared by the HMI directly.
Note that these bits are "read/write" outputs in the parameter definition.)]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Alm) OTE(Alm) TON(Wrk_AlmMinOnT,?,?) ,XIC(Wrk_Suppressed) OTE(Suppressed) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[Notify Level (color, blink) is determined here.
@@@@@  Note how the bottom 3 bits of the Severity are shifted left 1 for Val_Notify.  @@@@@

0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

NOTE that the alarm bell icon will blink, even though the alarm is Acknowledged,
if an Alarm Reset is required (to get the Operator's attention).]]>
</Comment>
<Text>
<![CDATA[[[XIO(Ack) ,XIC(ORdy_Reset) ] OTE(Val_Notify.0) ,XIC(Wrk_Alm) [[LIM(1,Cfg_Severity,250) ,LIM(501,Cfg_Severity,750) ] OTE(Val_Notify.1) ,LIM(251,Cfg_Severity,750) OTE(Val_Notify.2) ,LIM(751,Cfg_Severity,1000) OTE(Val_Notify.3) ] ,OTU(Val_Notify.4) OTU(Val_Notify.5) OTU(Val_Notify.6) OTU(Val_Notify.7) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[This rung calculates the number of seconds until this alarm "unshelves" itself.
If the alarm is already unshelved, clear this number.

#####  V4.00.00  2018-06-07:  Modified to optimize scan time.  ####]]>
</Comment>
<Text>
<![CDATA[XIO(Shelved)CLR(Val_MinToUnshelve)CLR(Val_SecToUnshelve);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[This rung takes the time remaining until the alarm will be automatically unshelved (milliseconds),
converts it to seconds, then reports it in  minutes : seconds format for display on the HMI.

#####  V4.00.00  2018-06-07:  Modified to optimize scan time.  ####]]>
</Comment>
<Text>
<![CDATA[XIC(Shelved)CPT(Wrk_SecToUnshelve,(Wrk_ShelfT.PRE-Wrk_ShelfT.ACC)/1000)DIV(Wrk_SecToUnshelve,60,Val_MinToUnshelve)MOD(Wrk_SecToUnshelve,60,Val_SecToUnshelve);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Perform Alarm processing: delay, latch/reset, acknowledge, enable/disable, inhibit/uninhibit, suppress/unsuppress]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_Alarm:  PROCESS -- ALARM (sub-block)
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x: Revision History archived.
V4.00.00  2018-06-07:  Changed Inf_ items to HMI_. Deleted Cfg_PCmdClear.
Aligned ready bit naming with command bit names.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_RdyReset for use by containing objects.
Modified to remove Suppressed from the conditions which show
the "Inhibited" breadcrumb.
Added Inp_OoS for Out of Service from parent object's P_CmdSrc.
V4.10.00  2019-03-08:  Unmodified, up-rev only for Library 4.10.00
============================================================
This instruction monitors one input condition and provides one Alarm with:
  * configurable latching (reset required) and acknowledgement requirement
  * configurable alarm severity
1..250 = Low  (blue, typ. informational)
251-500 = Medium  (yelllow, typ. warning)
501-750 = High  (red, typ. process exception)
751-1000 = Urgent  (magenta, typ. equip. fault)
* configurable minimum ON time (e.g., to ensure it is seen by the HMI)
* commands to suppress/unsuppress (Prog), shelve/unshelve (Oper)
and disable/enable (Maint) the alarm.
* configurable amount of time shelved to automatically unshelve an alarm
* FTA&E support for suppressed, shelved and disabled states (V7.0)

NOTE regarding parameter naming:
FTA&E names (same as ALMD instruction) are used instead
of the ANSI/ISA 18.2-2016 names, as follows:
"Disabled" is the equivalent of "Out of Service" in ISA 18.2.
(the Disabled state is owned by Maintenance)
"Suppressed" is the equivalent of "Suppressed by Design" in ISA 18.2.
(the Suppressed state is owned by Program logic)
"Shelved" is the same as in ISA 18.2.
(the Shelved state is owned by Operator, but may be cleared
by Program logic based on time, shift change, etc.)

This instruction is usually nested within other instructions, with one instance
used for each Alarm generated by the containing instruction.  It may also be
used as a standalone instruction for Alarm conditions generated by custom logic.
________________________________________

FTAE Alarm Setup:
________________________________________

(object).(alarm).Com_AE.0:  Alarm to FTAE
.Com_AE.1:   Ack to/from FTAE
.Com_AE.2:  Out of Service (from object's P_CmdSrc)
.Com_AE.3:   Shelved from FTAE Status
.Com_AE.4:   Shelve/Reshelve to FTAE Control (auto reset)
.Com_AE.5:   Unshelve to FTAE Control (auto reset)
.Com_AE.6:   Suppressed from FTAE Status
.Com_AE.7:   Suppress to FTAE Control (auto reset)
.Com_AE.8:   Unsuppress to FTAE Control (auto reset)
.Com_AE.9:   Disabled from FTAE Status
.Com_AE.10: Disable to FTAE Control (auto reset)
.Com_AE.11: Enable to FTAE Control (auto reset)
all other bits unused
    .Cfg_MaxShelfT is also used in FTAE config.
.Cfg_Severity is used by FTAE in FTView 8.x.
============================================================
POWERUP / INVALID STATE HANDLING
============================================================
All internal Work (state) bits maintain states through a power cycle and are
independent.  No first-scan logic is required.  See the Prescan routine for
powerup / prescan code.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_Tag,Cfg_Cond)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION
============================================================
In the object containing this alarm, other configuration (such as not having
any limit switches) may make this particular alarm meaningless.
The Program Configuration "Allow Exist" is used to hide this alarm
on the object's faceplate and other graphics, and forces the Cfg_Exist to 0.]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)XIO(PCfg_AllowExist)OTU(Cfg_Exists);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[
This rung gets the Alarm Minimum ON Time Configuration
and the Auto Unshelve Time Configuration
values and sets the corresponding timer presets.
If the Minimum ON Time Configuration results in a timer preset
less than 5 seconds, the preset is set to 5 seconds.
If the Auto Unshelve Time Configuration results in a negative
timer preset, the preset is set to 28800 seconds (8 hours).
Either bad Config is flagged (Err_Timer).
Bad Config is also flagged if the Cfg_Severity is out of range (valid = 1..1000) (Err_Severity).]]>
</Comment>
<Text>
<![CDATA[XIC(Cfg_Exists)[[MUL(Cfg_AlmMinOnT,1000,Wrk_AlmMinOnT.PRE) LES(Wrk_AlmMinOnT.PRE,5000) MOV(5,Cfg_AlmMinOnT) MOV(5000,Wrk_AlmMinOnT.PRE) ,MUL(Cfg_MaxShelfT,60000,Wrk_ShelfT.PRE) XIC(Wrk_ShelfT.PRE.31) MOV(480,Cfg_MaxShelfT) MOV(28800000,Wrk_ShelfT.PRE) ] OTE(Err_Timer) ,LIM(1001,Cfg_Severity,0) MOV(1000,Cfg_Severity) OTE(Err_Severity) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[The Auto Ack time is ALWAYS five seconds.]]>
</Comment>
<Text>
<![CDATA[MOV(5000,Wrk_AutoAckT.PRE);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[When the Alarm initially occurs, the Auto Ack timer is started.
If this Alarm is set for "Ack Not Required", it is automatically 
Acknowledged after the AutoAck time expires.

This pulsing of the Ack bit OFF then ON allows the "Ack Not Required"
configuration to be used with View 32, View ME and other legacy
alarm systems that don't support optional ack.]]>
</Comment>
<Text>
<![CDATA[XIO(Ack)TON(Wrk_AutoAckT,?,?);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[If this alarm does not exist, set it to its default state (no alarm, acknowleded,
uninhibited, unsuppressed, enabled) and clear any received commands.
Then jump over the remainder of the Logic and return.]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_Exists)[XIC(Wrk_AutoAckT.DN) OTL(Ack) ,OTU(Wrk_Alm) OTU(Shelved) OTU(Wrk_Suppressed) OTU(Disabled) OTU(Sts_AlmInh) ,OTU(PCmd_Reset) OTU(PCmd_Ack) OTU(PCmd_Unshelve) OTU(PCmd_Suppress) OTU(PCmd_Unsuppress) ,OTU(OCmd_Reset) OTU(OCmd_Ack) OTU(OCmd_Shelve) OTU(OCmd_Unshelve) ,OTU(MCmd_Disable) OTU(MCmd_Enable) RES(Wrk_AlmMinOnT) RES(Wrk_ShelfT) ]JMP(End);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands:
Operator Commands (OCmd_xx) and Maintenance Commands
(MCmd_xx) from the HMI and
Program Command (PCmd_xx) from other objects.

NOTE:  ALARM COMMANDS ARE ACCEPTED REGARDLESS OF MODE.

This rung receives the Program Alarm Inhibit Command.
If configured for EDGE, the Command is cleared.

#####  V4.00.00  2018-06-07:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Suppress)OTU(PCmd_Suppress)OTL(Wrk_Suppressed)OTL(Com_AE.7)OTU(Com_AE.8);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[This rung receives the Program Alarm Unsuppress Command (Unsuppress wins over Suppress).
If configured for LEVEL, Suppressed is cleared if PCmd_Suppress is cleared.

#####  V4.00.00  2018-06-07:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Unsuppress)OTU(PCmd_Unsuppress)OTU(Wrk_Suppressed)OTU(Com_AE.7)OTL(Com_AE.8);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[This rung receives the Operator Shelve Command.
If the command is received while shelved, the shelf timer starts over (reset).]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Shelve)OTU(OCmd_Shelve)XIC(Cfg_AllowShelve)OTL(Shelved)OTL(Com_AE.4)OTU(Com_AE.5)RES(Wrk_ShelfT);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[This rung times how long the alarm has been shelved.
If the Shelf Timer expires (and its preset > 0), automatically unshelve the alarm.]]>
</Comment>
<Text>
<![CDATA[XIC(Shelved)TON(Wrk_ShelfT,?,?);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[This rung receives the Operator Unshelve Command (Unshelve wins over Shelve)
and the Program Unshelve Command
Also Unshelve the alarm if the Shelf Timer expires (if preset > 0).

NOTE: Shelved can also be set/cleared directly by the HMI (FTA&E support).]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Unshelve) OTU(OCmd_Unshelve) ,XIC(PCmd_Unshelve) OTU(PCmd_Unshelve) ,XIC(Wrk_ShelfT.DN) NEQ(Wrk_ShelfT.PRE,0) ,XIO(Cfg_AllowShelve) ]OTU(Shelved)OTU(Com_AE.4)OTL(Com_AE.5);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[This rung receives the Maintenance Alarm Disable Command.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Disable)OTU(MCmd_Disable)XIC(Cfg_AllowDisable)OTL(Disabled)OTL(Com_AE.10)OTU(Com_AE.11);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[This rung receives the Maintenance Alarm Enable Command (Enable wins over Disable)

NOTE: Disabled can also be set/cleared directly by the HMI (FTA&E support).]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_Enable) ,XIO(Cfg_AllowDisable) ]OTU(MCmd_Enable)OTU(Disabled)OTU(Com_AE.10)OTL(Com_AE.11);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[If the Alarm is Disabled (Maint), or Shelved (Oper),
then post the "alarm inhibited" breadcrumb and do not
allow a new alarm to be issued.

NOTE:  If the Alarm is Suppressed (Prog), this is assumed to be "Suppressed by Design"
(ANSI/ISA-18.2-2016) and NOT shown to the operator with an "inhibited"
breadcrumb!  He just never sees the point as being In Alarm!

@@@@@  Unlatch and Latch are used to avoid a verification  @@@@@
@@@@@  warning in combination with Rung 2's OTU (above)!  @@@@@

#####  V4.00.00  2018-06-07:  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(Sts_AlmInh)[XIC(Disabled) ,XIC(Shelved) ]OTL(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[This rung receives the Alarm Acknowledge Commands

NOTE: Acknowledge can also be set/cleared directly by the HMI.]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_Ack) OTU(PCmd_Ack) ,XIC(OCmd_Ack) OTU(OCmd_Ack) ,XIO(Wrk_AutoAckT.TT) XIO(Cfg_AckReqd) ]OTL(Ack);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[This rung receives the Alarm Reset Commands.

If the Alarm Reset Command is received and, either, the Input condition has returned
to normal, or the alarm is out of service, disabled, suppressed or shelved,
the Alarm is CLEARED and ACKNOWLEDGED (to match ALMD behavior!!!).

#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_AutoAckT.TT)[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ][XIO(Inp) ,XIC(Sts_AlmInh) ,XIC(Wrk_Suppressed) ,XIC(Inp_OoS) ]OTL(Ack)OTU(Wrk_Alm);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[============================================================
ALARM GENERATION
============================================================
This rung CLEARS the Alarm when the alarm condition clears and its
Minimum On Time has expired, IF Reset is NOT Required.

#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIO(Inp) ,XIC(Inp_OoS) ] XIO(Cfg_ResetReqd) XIO(Wrk_AlmMinOnT.TT) ,XIC(Disabled) XIO(Wrk_AutoAckT.TT) ]OTU(Wrk_Alm);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[If the Alarm Input (Inp) is true (inverted in EnableInFalse) and the alarm is (or becomes)
In Service, Enabled, Unsuppressed and Unshelved, this rung sets the Alarm (Alm) bit.
The Acknowledge (Ack) bit is cleared when the Alarm initially occurs.

#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp) XIO(Sts_AlmInh) XIO(Wrk_Suppressed) XIO(Inp_OoS) ,XIC(MCmd_Test) OTU(MCmd_Test) ][XIO(Wrk_Alm) OTU(Ack) ,OTL(Wrk_Alm) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[============================================================
OPERATOR COMMAND READIES
============================================================
This Alarm is ready for (requires) an Acknowledgement if the Alarm
is not Acknowledged (an Acknowledge was Required when the alarm occurred).

This Alarm is ready for (requires) a Reset if there is an Alarm, Reset is Required,
and either the alarm condition has CLEARED or the alarm is 
Out of Service, Shelved, Suppressed or Disabled.
.
If the Alarm is NOT Shelved, it is ready for Shelve.

If the Alarm IS Shelved, it is ready for Unshelve.

If the Alarm is NOT Disabled, it is ready for Disable.

If the Alarm IS Disabled, it is ready for Enable.

NOTE: This rung appears before the Values/Status rung because the Rdy_Reset
condition is used to eliminate redundant logic in the rung below for Val_Notify.0.

#####  V4.00.00  2018-06-07:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by containing objects.  #####
#####  Modified to remove Suppressed from the conditions to show the "Inhibited" breadcrumb.  #####
#####  Added Inp_OoS for Out of Service from parent object's P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(End)XIC(Cfg_Exists)[XIO(Wrk_AutoAckT.TT) [XIO(Ack) OTE(ORdy_Ack) ,XIC(Wrk_Alm) XIC(Cfg_ResetReqd) [XIO(Inp) ,XIC(Sts_AlmInh) ,XIC(Wrk_Suppressed) ,XIC(Inp_OoS) ] OTE(ORdy_Reset) ] ,XIC(Cfg_AllowShelve) OTE(ORdy_Shelve) ,XIC(Shelved) OTE(ORdy_Unshelve) ,XIO(Disabled) XIC(Cfg_AllowDisable) OTE(MRdy_Disable) ,XIC(Disabled) OTE(MRdy_Enable) ,XIO(Wrk_Alm) OTE(MRdy_Test) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[============================================================
VALUE / STATUS GENERATION
============================================================
This rung copies the internal working status (Suppressed, In Alarm)
to public Status bits.  Note that internal working bits are used so that
outside objects cannot manipulate the state of this object
by setting/clearing its Status and Alarm bits.

Public Status is generated for:
Alarm (with minimum ON time to be seen by polling)
Alarm Suppressed
Unsuppressed, Unshelved and Enabled are generated for HMI (FTVSE 7).

(Ack, Shelved and Disabled can be set/cleared by the HMI directly.
Note that these bits are "read/write" outputs in the parameter definition.)]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Alm) OTE(Alm) TON(Wrk_AlmMinOnT,?,?) ,XIC(Wrk_Suppressed) OTE(Suppressed) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[Notify Level (color, blink) is determined here.
@@@@@  Note how the bottom 3 bits of the Severity are shifted left 1 for Val_Notify.  @@@@@

0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

NOTE that the alarm bell icon will blink, even though the alarm is Acknowledged,
if an Alarm Reset is required (to get the Operator's attention).]]>
</Comment>
<Text>
<![CDATA[[[XIO(Ack) ,XIC(ORdy_Reset) ] OTE(Val_Notify.0) ,XIC(Wrk_Alm) [[LIM(1,Cfg_Severity,250) ,LIM(501,Cfg_Severity,750) ] OTE(Val_Notify.1) ,LIM(251,Cfg_Severity,750) OTE(Val_Notify.2) ,LIM(751,Cfg_Severity,1000) OTE(Val_Notify.3) ] ,OTU(Val_Notify.4) OTU(Val_Notify.5) OTU(Val_Notify.6) OTU(Val_Notify.7) ];]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[This rung calculates the number of seconds until this alarm "unshelves" itself.
If the alarm is already unshelved, clear this number.

#####  V4.00.00  2018-06-07:  Modified to optimize scan time.  ####]]>
</Comment>
<Text>
<![CDATA[XIO(Shelved)CLR(Val_MinToUnshelve)CLR(Val_SecToUnshelve);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[This rung takes the time remaining until the alarm will be automatically unshelved (milliseconds),
converts it to seconds, then reports it in  minutes : seconds format for display on the HMI.

#####  V4.00.00  2018-06-07:  Modified to optimize scan time.  ####]]>
</Comment>
<Text>
<![CDATA[XIC(Shelved)CPT(Wrk_SecToUnshelve,(Wrk_ShelfT.PRE-Wrk_ShelfT.ACC)/1000)DIV(Wrk_SecToUnshelve,60,Val_MinToUnshelve)MOD(Wrk_SecToUnshelve,60,Val_SecToUnshelve);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, clear any "lurking" Commands.
Unshelve and Unsuppress all alarms, but
only Enable alarms for which Disable is not allowed.
(Let Maintenance Disable persist through a power cycle...)

#####  V4.00.00  2018-06-07:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(PCmd_Reset) OTU(PCmd_Ack) OTU(PCmd_Suppress) OTU(PCmd_Unsuppress) OTU(PCmd_Unshelve) ,OTU(OCmd_Reset) OTU(OCmd_Ack) OTU(OCmd_Shelve) OTU(OCmd_Unshelve) ,OTU(MCmd_Disable) OTU(MCmd_Enable) ,OTU(Shelved) OTU(Com_AE.4) OTL(Com_AE.5) ,OTU(Wrk_Suppressed) OTU(Suppressed) OTU(Com_AE.7) OTL(Com_AE.8) ,XIO(Cfg_AllowDisable) OTU(Disabled) OTU(Com_AE.10) OTL(Com_AE.11) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_AIChan" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-03-13T19:51:06.608Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:08:17.787Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Analog Input Channel]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors an Analog Input Channel and provides:

*  Scaling, from Input (Raw) to PV (Engineering) Units
*  Monitoring for diagnostic conditions, including:
   - Input Out of Range (high or low)
      (Out of Range thresholds, deadband, and on-delay
      and off-delay times are configurable)
   - Input Value Stuck (unchanging)
   - Input Floating Point Exception (NaN)
   - Input Module Fault
   - Input Channel Fault
   - Input based on Out of Specification conditions
   - Input Function Check (forced or substituted at sensor)
   - Sensor Maintenance Required
* On each of the above conditions, the Input PV can be (configurable):
   - Passed thru as is
   - Held at last good (previous scan's) value
   - Replaced with a configured value
* On each of the above conditions, the PV Status can be (configurable):
   - PV Good
   - PV Uncertain
   - PV Bad
* On Bad PV (as determined above), or on Uncertain PV if so configured,
an Analog Input Failure Status / Alarm can be raised.

Alarm is provided by a P_Alarm Add-On Instruction instance.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Added Snap-To Band.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-03)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added notify and unack count rollup for Channel object.
* Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* Added configurable decimal places for display on HMI.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by external objects.
* Changed delay / time configuration items to REAL seconds.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Raw" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal from Transmitter or Sensor (RU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ModFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Module Failure or Module Comms Status Bad, 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ChanFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Channel Fault or Failure, 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_OutOfSpec" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Out of Specification (PV uncertain, from instrument), 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FuncCheck" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Function Check (PV substituted, from instrument), 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_MaintReqd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Maintenance Required (from instrument)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset all Alarms requiring reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailOnUncertain" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Raise Sts_Fail (and alarm) if Bad or Uncertain quality, 0=only if Bad quality]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVDecPlcs" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of decimal places for PV display (0..6)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasFailAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Analog InputFailure Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Failure Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_InpRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input (unscaled) Minimum for Scaling (RU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input (unscaled) Maximum for Scaling (RU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="20.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV (Output) Minimum for Scaling (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV (Output) Maximum for Scaling (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVHiLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV High Clamping Limit (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVLoLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Low Clamping Limit (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="-1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOORHiLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) High Limit (Raw Units!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2.07333336e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="20.733334"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOORLoLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) Low Limit (Raw Units!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3.66666675e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="3.6666667"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOORDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) High/Low Deadband (Raw Units!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[6.66666700e-002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.06666667"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOOROnDly" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time Out of Range to raise Status (s)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOOROffDly" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time In Range to clear Out of Range Status (s)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOORAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpOORQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_StuckT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time with no change in Input to raise Stuck Status (s)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[6.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="60.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpStuckAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Stuck (unchanging) PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpStuckQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Stuck (unchanging) Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpNaNAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Not a Number PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpNaNQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Not a Number Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ModFaultAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Module Fault PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ModFaultQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Module Fault Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ChanFaultAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Channel Fault PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ChanFaultQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Channel Fault Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutOfSpecAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Inp_PVUncertain PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutOfSpecQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Inp_PVUncertain Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FuncCheckAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Function Check PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FuncCheckQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Function Check Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaintReqdAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Required PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaintReqdQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Required Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_CfgErrAction" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[AOI Configuration Error PV Action: 1=Use Input, 2=Hold Last Good, 3=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_CfgErrQual" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[AOI Configuration Error Flag as: 1=Good, 2=Uncertain, 3=Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="3"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVReplaceVal" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Value (EU) to use to replace PV when Action=Replace]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ClampSB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Clamping Snap-To Band to Clamp when PV gets near to Limit (% SPAN)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_FailAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowldege Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset all Alarms requiring Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_InpRaw" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Analog Input Value (RU) (before scaling or checking)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Process Variable Value (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVEUMin" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Minimum of scaled range = MIN (Cfg_PVEUMin, Cfg_PVEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVEUMax" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Maximum of scaled range = MAX (Cfg_PVEUMin, Cfg_PVEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Sts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Confirmed Sts 0=PV Good, 5=PV Uncertain, 6=PV Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=none, 32=Fail, 34=CfgErr]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Level and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVGood" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=PV Quality is Good (not flagged as Bad or Uncertain)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVUncertain" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=PV Quality is flagged as Uncertain]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVBad" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=PV Quality is flagged as Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_UseInp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Using Input to calculate PV (not replaced or held)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_HoldLast" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Analog PV being held at last good value]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Clamped" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Analog PV being clamped at Low or High Limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Replaced" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Analog PV being replaced with configured value]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpOORHiCmp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Input PV exceeds Out-of-Range High Limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpOORLoCmp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Input PV exceeds Out-of-Range Low limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpOutOfRange" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Input is Out of Range (includes On-Delay, Deadband, Off-Delay)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpStuck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Input is "stuck" (unchanging)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpNaN" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Input is Not a Number (floating point exception)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ModFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=I/O Module Fault condition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ChanFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=I/O Channel Fault condition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_OutOfSpec" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Working outside specifications (from instrument)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_FuncCheck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Function Check (PV simulated/replaced at instrument)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintReqd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Maintenance is Required (from instrument)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An Alarm is Shelved, Disabled or Suppressed: display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config (see detail Err_ bits for reason), display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Raw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Raw Input Scaling Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_EU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Scaled EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Timer Preset (must be 0 to]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_DB" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: a Status Deadband is < 0.0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure (Bad, Uncertain)]]>
</Description>
</Parameter>
<Parameter Name="Alm_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm (Bad, Uncertain)]]>
</Description>
</Parameter>
<Parameter Name="Ack_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog input Failure Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="P_AIChan" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Cfg_EU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[1,'%$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="1">
<![CDATA['%']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'P_AIChan$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['P_AIChan']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[17,'Analog In Channel$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="17">
<![CDATA['Analog In Channel']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[22,'Analog Channel Quality$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="22">
<![CDATA['Analog Channel Quality']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Fail" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Analog Input Failure Alarm (bad quality or out of range)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[13,'Input Failure$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Sts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpDINT" DataType="DINT" Radix="Hex" ExternalAccess="None">
<Description>
<![CDATA[Input REAL bit pattern as a DINT (check for Inf/NaN)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Hex" Value="16#0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpInfNaN" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Input is Infinite or Not a Number
(+ or -)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutOfRangeOnDlyT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Out of Range Status On-Delay Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'P_AIChan$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['P_AIChan']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutOfRangeOffDlyT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Out of Range Status Off-Delay Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FlagBad" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=At least one Condition has requested PV be flagged Bad]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FlagUncertain" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=At least one Condition has requested PV be flagged Uncertain]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpInf" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Input is Infinite (+ or -)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpNaN" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Input is Not a Number (+ or -)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_RU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Raw Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'mA DC$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['mA DC']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutOfRangeHi" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Input PV exceeded Out of Range High Limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutOfRangeLo" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Input PV exceeded Out of Range Low Limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HoldLast" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=At least one Condition has requested PV be held at last good value]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Replace" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=At least one Condition has requested PV be replaced with configured value]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Val" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PrevInp" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Value of Input last scan (for stuck input checking)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StuckT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer for checking for stuck value]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object only (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset and Acknowledge all Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset all Alarms requiring Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=At least one Alarm requires Reset or Acknowledgement]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=At least one Alarm requires Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Err" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Sts_Err]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Off-Scan: clear "lurking" Commands; reset internal timers; clear Fail Alarm, flag PV as Bad quality]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
If this device is OFF-SCAN (rung is false or EnableIn is false in FBD), then:

This rung publishes the Values for the scaled range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the AIn and PID ranges are in lockstep.]]>
</Comment>
<Text>
<![CDATA[[GEQ(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMin) MOV(Cfg_PVEUMax,Val_PVEUMax) ,LES(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMax) MOV(Cfg_PVEUMax,Val_PVEUMin) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if the raw input range or scaled PV range
max and min are set the same (invalid range).

Since this Analog Input is disabled, indicate that the PV is bad
(Val is not being updated.)
Indicate that this Analog Input is UNCERTAIN (Val_Sts = 5).
if there is a Configuration Error, indicate that as well (Val_Fault=34).]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Fault) ,[EQU(Cfg_InpRawMax,Cfg_InpRawMin) OTE(Err_Raw) ,EQU(Cfg_PVEUMax,Cfg_PVEUMin) OTE(Err_EU) ,LES(Cfg_InpOORDB,0.0) OTE(Err_DB) ] OTE(Sts_Err) MOV(34,Wrk_Fault) ,MOV(5,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Sets Snap-To Band to Zero when not realistic: less than 0 or greater than 1/2 the range of PV.

#####  V4.10.00  2019-03-08:  Added Snap-To Band  #####]]>
</Comment>
<Text>
<![CDATA[[LES(Cfg_ClampSB,0.0) ,CMP(Cfg_ClampSB>((Cfg_PVHiLim-Cfg_PVLoLim)*0.5)) ]CLR(Cfg_ClampSB);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[The Process Variable Input Value (Val_InpPV) shows the scaled input,
regardless of the settings of Mode, Substitute PV, etc., EVEN WHEN EnableIn IS FALSE!

If NOT in simulation, if the scaling configuration is valid, the Raw Input is scaled to Engineering Units.
In Simulation the Simulated Input must be provided in Engineering Units.]]>
</Comment>
<Text>
<![CDATA[COP(Inp_Raw,Val_InpRaw,1);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA["Lurking" Operator Commands are cleared, as well as the Program Reset.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Reset)OTU(OCmd_ResetAckAll)OTU(PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-06-25:  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(ORdy_Reset)OTU(ORdy_ResetAckAll)OTU(Sts_RdyAck);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Reset the Threshold Status On-Delay, Off-Delay and Gate Timers.]]>
</Comment>
<Text>
<![CDATA[RES(Wrk_OutOfRangeOnDlyT)RES(Wrk_OutOfRangeOffDlyT)RES(Wrk_StuckT);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Show input status as BAD / HOLD LAST.

#####  V4.00.00  2018-06-25:  Corrected state of Sts_Replaced on this rung.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Sts_PVGood) OTU(Sts_PVUncertain) OTL(Sts_PVBad) ,OTU(Sts_UseInp) OTL(Sts_HoldLast) OTU(Sts_Replaced) ,OTU(Sts_FuncCheck) OTU(Sts_MaintReqd) OTU(Sts_InpStuck) ,OTU(Sts_InpOutOfRange) OTU(Sts_InpOORHiCmp) OTU(Sts_InpOORLoCmp) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[Clear the threshold Status and Alarms.
Clear the Alarm Notify Value, and show the Alarms Inhibited breadcrumb.]]>
</Comment>
<Text>
<![CDATA[OTU(Alm_Fail)OTU(Sts_Fail)OTL(Sts_AlmInh)CLR(Val_NotifyAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan - PV is scaled and signal quality checked]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_AIChan:  PROCESS -- ANALOG INPUT CHANNEL
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, V3.x Revision History archived.
V4.00.00  2018-06-25:  Changed Inf_ items to HMI_, and added Cfg_Area for security.
Added notify and unack count rollup. Changed Out-of-Range limit
checks to use raw Input (Inp_PV) instead of scaled PV (Val).
Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
Aligned ready bit naming with command bit names.
Added configurable decimal places for display on HMI.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_ResetReqd for use by external objects.
Changed delay / time configuration items to REAL seconds.
V4.10.00  2019-03-08:  Added Snap-To Band. Added Cfg_HasMoreObj.
============================================================
This Instruction monitors an Analog Input Channel and provides:

*  Scaling, from Input (Raw) to PV (Engineering) Units
*  Monitoring for diagnostic conditions, including:
- Input Out of Range (high or low)
(Out of Range thresholds, deadband, 
and on-delay and off-delay times are configurable)
- Input Value Stuck (unchanging)
(time with no change seen is configurable)
- Input Floating Point Exception (NaN)
- Input Module Fault
- Input Channel Fault
- Input based on Out of Specification conditions
- Input Function Check (forced or substituted at sensor)
- Sensor Maintenance Required

* On each of the above conditions, the Input PV can be (configurable):
- Passed thru as is
- Held at last good (previous scan's) value
- Replaced with a configured value

* On each of the above conditions, the PV Quality status can be (configurable):
- PV Good
- PV Uncertain
- PV Bad

* On Bad PV (as determined above), or on Uncertain PV if so configured,
an Analog Input Failure Status / Alarm will be raised.

Alarm is provided by a P_Alarm Add-On Instruction instance.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-06-25:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####
]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_Desc,Cfg_Label)LOWER(Cfg_Tag,Cfg_Area)LOWER(Cfg_EU,Cfg_RU)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
This rung publishes the Values for the scaled range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the AIn and PID ranges are in lockstep.

#####  V4.00.00  2018-06-25:  Added configurable decimal places for display on HMI.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)[GEQ(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMin) MOV(Cfg_PVEUMax,Val_PVEUMax) ,LES(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMax) MOV(Cfg_PVEUMax,Val_PVEUMin) ,LIM(7,Cfg_PVDecPlcs,-1) MOV(2,Cfg_PVDecPlcs) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if the raw input range or scaled PV range
max and min are set the same (invalid range), or if the
Analog Input Filter Time Constant is set to a negative value.]]>
</Comment>
<Text>
<![CDATA[[EQU(Cfg_InpRawMax,Cfg_InpRawMin) OTE(Err_Raw) ,EQU(Cfg_PVEUMax,Cfg_PVEUMin) OTE(Err_EU) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if any Status On-Delay, Off-Delay
or Gate Delay timer preset is invalid
(and set timer to a default, non-faulting value).

#####  V4.00.00  2018-06-25:  Changed delay / time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[MUL(Cfg_InpOOROnDly,1000.0,Wrk_OutOfRangeOnDlyT.PRE) XIC(Wrk_OutOfRangeOnDlyT.PRE.31) CLR(Wrk_OutOfRangeOnDlyT.PRE) ,MUL(Cfg_InpOOROffDly,1000.0,Wrk_OutOfRangeOffDlyT.PRE) XIC(Wrk_OutOfRangeOffDlyT.PRE.31) CLR(Wrk_OutOfRangeOffDlyT.PRE) ,MUL(Cfg_StuckT,1000.0,Wrk_StuckT.PRE) XIC(Wrk_StuckT.PRE.31) MOV(2147483647,Wrk_StuckT.PRE) ]OTE(Err_Timer);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad Raw Scaling configs
Bad Engineering Units Scaling configs
Bad 1st-Order Filter configs
Bad Alarm Deadband configs
Bad Alarm Minimum Duration configs

Then a summary Bad Config status is provided, simply an OR of the individual bits.
]]>
</Comment>
<Text>
<![CDATA[[XIC(Err_Raw) ,XIC(Err_EU) ,XIC(Err_Timer) ,LES(Cfg_InpOORDB,0.0) OTE(Err_DB) ]OTE(Wrk_Err);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Sets Snap-To Band to Zero when not realistic: less than 0 or greater than 1/2 the range of PV.

#####  V4.10.00  2019-03-08:  Added Snap-To Band  #####]]>
</Comment>
<Text>
<![CDATA[[LES(Cfg_ClampSB,0.0) ,CMP(Cfg_ClampSB>((Cfg_PVHiLim-Cfg_PVLoLim)*0.5)) ]CLR(Cfg_ClampSB);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) OTL(Fail.PCmd_Ack) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ]OTL(Fail.PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG INPUT PROCESSING
============================================================
This rung checks the bit pattern of the REAL input (by copying to a DINT) to see if
the input is +Infinity, -Infinity or Not a Number.  Per ANSI 32-bit Float
format, in these cases the Exponent bits (.30 thru .23) will all be 1s:
0111 1111 1000 0000 0000 0000 0000 0000 = +Infinity
1111 1111 1000 0000 0000 0000 0000 0000 = -Infinity
x111 1111 1xxx xxxx xxxx xxxx xxxx xxxx = Not a Number]]>
</Comment>
<Text>
<![CDATA[COP(Inp_Raw,Val_InpRaw,1)COP(Inp_Raw,Wrk_InpDINT,1)[MEQ(Wrk_InpDINT,16#7fff_ffff,16#7F80_0000) OTE(Wrk_InpInf) ,MEQ(Wrk_InpDINT,16#7F80_0000,16#7F80_0000) OTE(Wrk_InpInfNaN) XIO(Wrk_InpInf) OTE(Wrk_InpNaN) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[The Process Variable Input Value (Val_InpPV) shows the scaled input,
regardless of the settings of Mode, Substitute PV, etc., EVEN WHEN EnableIn IS FALSE!

If NOT in simulation, if the scaling configuration is valid, the Raw Input is scaled to Engineering Units.
In Simulation the Simulated Input must be provided in Engineering Units.]]>
</Comment>
<Text>
<![CDATA[[XIO(Err_Raw) XIO(Err_EU) XIO(Wrk_InpInfNaN) CPT(Wrk_Val,(Inp_Raw-Cfg_InpRawMin)*(Cfg_PVEUMax-Cfg_PVEUMin)/(Cfg_InpRawMax-Cfg_InpRawMin)+Cfg_PVEUMin) ,[XIC(Err_Raw) ,XIC(Err_EU) ] MOV(Cfg_PVEUMin,Wrk_Val) ,XIC(Wrk_InpInfNaN) COP(Inp_Raw,Wrk_Val,1) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG QUALITY / STATUS PROCESSING
============================================================
The rungs that follow detect and set up handling for the following conditions:
* Input out of range
* Stuck input value
* Input value infinite or not a number
* Module communication fault
* Channel fault reported by I/O module
* Input out of specification
* Function check (substituted at field device)
* Maintenance required
* Configuration error in this object.

This rung clears the Action and Quality accumulation bits
in preparation for the condition handlers below.]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_HoldLast)OTU(Wrk_Replace)OTU(Wrk_FlagBad)OTU(Wrk_FlagUncertain);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If the Analog Value rises above the Out-of-Range High Limit for the On-
Delay time, raise a PV Out of Range status.

If the Analog Value is back in range, that is, it is below the Out-of-Range
High Limit (minus deadband) for the Off-Delay Time,
clear the PV Out of Range status.

@@@@@  NOTE:  The GEQ takes care of +/- Inf and +/- NaN for us automatically!  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_InpNaN)[[GEQ(Val_InpRaw,Cfg_InpOORHiLim) ,CMP(Val_InpRaw>(Cfg_InpOORHiLim-Cfg_InpOORDB)) XIC(Sts_InpOutOfRange) ] OTE(Wrk_OutOfRangeHi) ,XIC(Wrk_OutOfRangeHi) OTE(Sts_InpOORHiCmp) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[If the Analog Value falls below the Out-of-Range Low Limit for the On-
Delay time, raise a PV Out of Range status.

If the Analog Value is back in range, that is, it is above the Out-of-Range
Low Limit (plus deadband) for the Off-Delay Time,
clear the PV Out of Range status.

@@@@@  NOTE:  The LEQ takes care of +/- Inf and +/- NaN for us automatically!  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_InpNaN)[[LEQ(Val_InpRaw,Cfg_InpOORLoLim) ,CMP(Val_InpRaw<(Cfg_InpOORLoLim+Cfg_InpOORDB)) XIC(Sts_InpOutOfRange) ] OTE(Wrk_OutOfRangeLo) ,XIC(Wrk_OutOfRangeLo) OTE(Sts_InpOORLoCmp) ];]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[This rung handles the On-Delay and Off-Delay timing for the
out-of-range threshold detection.

@@@@@  NOTE: Doubled TONs are used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[[XIC(Wrk_OutOfRangeHi) ,XIC(Wrk_OutOfRangeLo) ] TON(Wrk_OutOfRangeOnDlyT,?,?) TON(Wrk_OutOfRangeOnDlyT,?,?) ,XIO(Wrk_OutOfRangeHi) XIO(Wrk_OutOfRangeLo) TON(Wrk_OutOfRangeOffDlyT,?,?) TON(Wrk_OutOfRangeOffDlyT,?,?) ,XIC(Wrk_OutOfRangeOnDlyT.DN) OTL(Sts_InpOutOfRange) ,XIC(Wrk_OutOfRangeOffDlyT.DN) OTU(Sts_InpOutOfRange) ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Out of Range condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_InpOutOfRange)[EQU(Cfg_InpOORAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_InpOORAction,3) OTL(Wrk_Replace) ,EQU(Cfg_InpOORQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_InpOORQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[This rung detects when the input is unchanging (stuck).]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_InpInfNaN)[EQU(Val_InpRaw,Wrk_PrevInp) TON(Wrk_StuckT,?,?) ,MOV(Val_InpRaw,Wrk_PrevInp) ];]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Stuck Input condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StuckT.DN)OTE(Sts_InpStuck)[EQU(Cfg_InpStuckAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_InpStuckAction,3) OTL(Wrk_Replace) ,EQU(Cfg_InpStuckQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_InpStuckQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Input = Infinite or Not a Number condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_InpNaN)OTE(Sts_InpNaN)[EQU(Cfg_InpNaNAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_InpNaNAction,3) OTL(Wrk_Replace) ,EQU(Cfg_InpNaNQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_InpNaNQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Module Communication Fault condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_ModFault)OTE(Sts_ModFault)[EQU(Cfg_ModFaultAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_ModFaultAction,3) OTL(Wrk_Replace) ,EQU(Cfg_ModFaultQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_ModFaultQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Input Channel Fault condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_ChanFault)OTE(Sts_ChanFault)[EQU(Cfg_ChanFaultAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_ChanFaultAction,3) OTL(Wrk_Replace) ,EQU(Cfg_ChanFaultQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_ChanFaultQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Input Off-Spec condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_OutOfSpec)OTE(Sts_OutOfSpec)[EQU(Cfg_OutOfSpecAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_OutOfSpecAction,3) OTL(Wrk_Replace) ,EQU(Cfg_OutOfSpecQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_OutOfSpecQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Input Function Check (substituted at instrument) condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_FuncCheck)OTE(Sts_FuncCheck)[EQU(Cfg_FuncCheckAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_FuncCheckAction,3) OTL(Wrk_Replace) ,EQU(Cfg_FuncCheckQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_FuncCheckQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
Maintenance Required condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_MaintReqd)OTE(Sts_MaintReqd)[EQU(Cfg_MaintReqdAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_MaintReqdAction,3) OTL(Wrk_Replace) ,EQU(Cfg_MaintReqdQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_MaintReqdQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[This rung handles the configured Action and Quality for the
P_AIChan Configuration Error condition.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_Err)[EQU(Cfg_CfgErrAction,2) OTL(Wrk_HoldLast) ,EQU(Cfg_CfgErrAction,3) OTL(Wrk_Replace) ,EQU(Cfg_CfgErrQual,2) OTL(Wrk_FlagUncertain) ,EQU(Cfg_CfgErrQual,3) OTL(Wrk_FlagBad) ];]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[This rung handles the clamping of the input between its
high and low clamping limits.

#####  V4.10.00  2019-03-08:  Added Snap-To Band  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_InpNaN)[CMP((Wrk_Val+((Cfg_ClampSB/100.0)*(Cfg_PVHiLim-Cfg_PVLoLim)))>Cfg_PVHiLim) MOV(Cfg_PVHiLim,Wrk_Val) ,CMP((Wrk_Val-((Cfg_ClampSB/100.0)*(Cfg_PVHiLim-Cfg_PVLoLim)))<Cfg_PVLoLim) MOV(Cfg_PVLoLim,Wrk_Val) ]OTE(Sts_Clamped);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG QUALITY / STATUS PROCESSING
============================================================
If the Analog Value rises above the Fail High Limit or falls below the
Fail Low Limit for the On-Delay Time, or if the Bad PV Input is
asserted and the input is not in Simulation, raise a PV Fail Status.

If the Analog Value is back in range, that is, it is below the Fail High Limit (minus
deadband) and above the Fail Low Limit (plus deadband), for the Off-Delay Time,
AND if the Bad PV input clears or the input is Siimulated,
clear the PV Fail Status.

@@@@@  NOTE:  The GEQ and LEQ take care of +/- Inf and +/- NaN for us automatically!  @@@@@

@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_Replace)OTU(Wrk_HoldLast)OTE(Sts_Replaced)COP(Cfg_PVReplaceVal,Wrk_Val,1);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[If the PV is not substituted and it has a total Failure (rung above), or if it
is Infinite or Not a Number, flag it as BAD.
If the Uncertain input is set and the PV is not simulated or substituted,
flag it as UNCERTAIN.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_HoldLast)OTE(Sts_HoldLast);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[If the PV is not substituted and it has a total Failure (rung above), or if it
is Infinite or Not a Number, flag it as BAD.
If the Uncertain input is set and the PV is not simulated or substituted,
flag it as UNCERTAIN.]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_HoldLast) ,XIC(Sts_Clamped) ,XIC(Sts_Replaced) ]COP(Wrk_Val,Val,1);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[If the input is not being held or replaced, it is being used as is, so report that.]]>
</Comment>
<Text>
<![CDATA[XIO(Sts_HoldLast)XIO(Sts_Replaced)OTE(Sts_UseInp);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG QUALITY / STATUS PROCESSING
============================================================
If the Analog Value rises above the Fail High Limit or falls below the
Fail Low Limit for the On-Delay Time, or if the Bad PV Input is
asserted and the input is not in Simulation, raise a PV Fail Status.

If the Analog Value is back in range, that is, it is below the Fail High Limit (minus
deadband) and above the Fail Low Limit (plus deadband), for the Off-Delay Time,
AND if the Bad PV input clears or the input is Siimulated,
clear the PV Fail Status.

@@@@@  NOTE:  The GEQ and LEQ take care of +/- Inf and +/- NaN for us automatically!  @@@@@

@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_FlagBad)OTU(Wrk_FlagUncertain)OTE(Sts_PVBad);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[If the PV is not substituted and it has a total Failure (rung above), or if it
is Infinite or Not a Number, flag it as BAD.
If the Uncertain input is set and the PV is not simulated or substituted,
flag it as UNCERTAIN.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_FlagUncertain)OTE(Sts_PVUncertain);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[If the input quality is not flagged as Bad or Uncertain, it is good, so report that.]]>
</Comment>
<Text>
<![CDATA[XIO(Sts_PVBad)XIO(Sts_PVUncertain)OTE(Sts_PVGood);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality (Srcq_IO) for Val_InpPV

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(0,Wrk_SrcQ) ,XIC(Sts_MaintReqd) MOV(1,Wrk_SrcQ) ,XIC(Sts_InpStuck) MOV(2,Wrk_SrcQ) ,XIC(Sts_OutOfSpec) MOV(16,Wrk_SrcQ) ,XIC(Sts_FuncCheck) MOV(17,Wrk_SrcQ) ,XIC(Sts_Clamped) MOV(18,Wrk_SrcQ) ,[XIC(Sts_InpOutOfRange) ,XIC(Sts_InpNaN) ] MOV(32,Wrk_SrcQ) ,XIC(Sts_ChanFault) MOV(33,Wrk_SrcQ) ,XIC(Sts_ModFault) MOV(34,Wrk_SrcQ) ,XIC(Wrk_Err) MOV(35,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality (Srcq) for final value

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(0,Wrk_SrcQ) ,[XIC(Sts_InpOutOfRange) ,XIC(Sts_OutOfSpec) ,XIC(Sts_FuncCheck) ,XIC(Sts_MaintReqd) ] MOV(1,Wrk_SrcQ) ,[XIC(Wrk_Err) ,XIC(Sts_ChanFault) ,XIC(Sts_ModFault) ,XIC(Sts_InpNaN) ,XIC(Sts_InpStuck) ,XIC(Sts_Clamped) ,XIC(Wrk_HoldLast) ,XIC(Wrk_Replace) ] MOV(2,Wrk_SrcQ) ,XIC(Wrk_FlagUncertain) [MOV(16,Wrk_SrcQ) ,XIC(Sts_FuncCheck) MOV(17,Wrk_SrcQ) ,XIC(Sts_Clamped) MOV(18,Wrk_SrcQ) ,XIC(Wrk_HoldLast) MOV(19,Wrk_SrcQ) ,XIC(Wrk_Replace) MOV(20,Wrk_SrcQ) ] ,XIC(Wrk_FlagBad) [MOV(32,Wrk_SrcQ) ,XIC(Sts_ChanFault) MOV(33,Wrk_SrcQ) ,XIC(Sts_ModFault) MOV(34,Wrk_SrcQ) ,XIC(Sts_Err) MOV(35,Wrk_SrcQ) ] ,MOV(Wrk_SrcQ,SrcQ) ];]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[This rung generates the enumerated Device Status:
0 = Normal (PV Good)
5 = PV Uncertain
6 = PV Bad

And this rung generates the enumerated Device Fault Status:
0 = none
32 = Failed (I/O fault or out of range)
34 = Config Error]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_PVUncertain) MOV(5,Wrk_Sts) ,XIC(Sts_PVBad) MOV(6,Wrk_Sts) ,[XIC(Sts_Fail) ,XIC(SrcQ.5) ] MOV(32,Wrk_Fault) ,XIC(Wrk_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[If the input quality is bad, or if the input quality is uncertain and this object
is configured to issue a FAIL status / alarm on uncertain input,
flag the FAIL status.]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_PVBad) ,XIC(Sts_PVUncertain) XIC(Cfg_FailOnUncertain) ]OTE(Sts_Fail);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
The Channel Failure alarm is ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1).

#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[OTL(Fail.PCfg_AllowExist);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[Handle Input Failure Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(Fail);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).]]>
</Comment>
<Text>
<![CDATA[XIC(Fail.Sts_AlmInh)OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad Raw Scaling configs
Bad Engineering Units Scaling configs
Bad 1st-Order Filter configs
Bad Alarm Deadband configs
Bad Alarm Minimum Duration configs

Then a summary Bad Config status is provided, simply an OR of the individual bits.
]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Err) ,XIC(Fail.Sts_Err) OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) ,GRT(Fail.Val_Notify,Wrk_Notify) MOV(Fail.Val_Notify,Wrk_Notify) ,XIC(Fail.Val_Notify.0) MOV(1,Wrk_UnackAlmC) OTE(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_Notify,Val_NotifyAll) MOV(Wrk_UnackAlmC,Val_UnackAlmC) ];]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-06-25:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Fail.Sts_RdyAck) OTE(Sts_RdyAck) ,XIC(Fail.Sts_RdyReset) OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear "lurking" Commands, reset internal timers]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, "Lurking" Operator Commands are cleared,
as well as the Program Reset.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Reset)OTU(OCmd_ResetAckAll)OTU(PCmd_Reset);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_Gate" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2012-10-01T18:56:53.162Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:12:45.187Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Condition Gate/Delay]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction provides a "gate" for a discrete Input signal and
provides on-delay and off-delay timing for the gated signal.

When the Gate input is true, the instruction Input is passed through
to the Output, with on-delay and off-delay timing applied.

When the Gate input is false, the Output is kept off
(note: off-delay still applies!)

This instruction is usually used between a comparison
(analog threshold with deadband or discrete logic)
and a P_Alarm instance, but may be used as a
gated on-delay/off-delay timer generally.

When EnableIn  is FALSE (e.g., on a false LD rung), the Input "Inp"
is inverted.  Note that the Gate input (Inp_Gate) is NOT inverted!!!

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Unmodified, up-rev only for Library 4.10.00

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-01)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_ (e.g., HMI_Lib, HMI_Type).
* Changed delay time configuration items to REAL seconds
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Condition: e.g., result of comparison]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Gate" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Gate Input: 1=enable On Delay / Off Delay after Gate Delay, 0=disable]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_GateDly" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Gate Delay (s): time after Gate Input true to enable On/Off Delay]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OnDly" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[On Delay (s): If Gate Delay done, time Inp must be true to set Out true]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OffDly" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Off Delay (s): Time after Inp  or Gate goes to 0 for Out to go to 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output after On Delay, Off Delay, enabled by Gate]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Gate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Gate Delay done, Output is enabled]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config (see detail Err_ bits for reason), display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: On Delay, Off Delay, Gate Delay Time Invalid (use 0 to 2147483 s)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="P_Gate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_OffDlyT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Off Delay Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OnDlyT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[On Delay Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_GateT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Gate Delay Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_InpCond" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Displayed text of P_Gate's Input (Inp) Condition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[15,'Input Condition$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="15">
<![CDATA['Input Condition']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'P_Gate$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['P_Gate']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_GateCond" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Displayed text of P_Gate's Gating (Inp_Gate) Condition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[16,'Gating Condition$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="16">
<![CDATA['Gating Condition']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Same as main Logic routine, except Inp is inverted (for use in LD logic)  (Inp_Gate is NOT inverted!!!)]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
EnableIn FALSE :  CONFIGURATION PROCESSING
============================================================
Flag a Configuration Error if the Gate Delay, On Delay
or Off Delay timer preset is invalid
(and set timer to default zero preset, non-faulting value).

#####  V4.00.00  2018-06-07:  Changed delay time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[MUL(Cfg_GateDly,1000.0,Wrk_GateT.PRE) XIC(Wrk_GateT.PRE.31) CLR(Wrk_GateT.PRE) ,MUL(Cfg_OnDly,1000.0,Wrk_OnDlyT.PRE) XIC(Wrk_OnDlyT.PRE.31) CLR(Wrk_OnDlyT.PRE) ,MUL(Cfg_OffDly,1000.0,Wrk_OffDlyT.PRE) XIC(Wrk_OffDlyT.PRE.31) CLR(Wrk_OffDlyT.PRE) ]OTE(Err_Timer)OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
GATE DELAY, ON DELAY, OFF DELAY PROCESSING
============================================================
FOR THE ENABLE_IN_FALSE ROUTINE, the CONDITION Input is
INVERTED, to support the   XIC (condition)  P_Gate (P_Gate backing tag)
construct for instantiation.  This will use Inp = 1,
making the condition input follow the rung condition.

If the Gate Input is true, run the Gate Delay timer.
Once the Gate Delay is complete, enable the
On Delay and Off Delay that follow the INVERTED input.

Report the Gate Delay status and the final Output status (after all delays).

@@@@@  NOTE: Doubled TONs are used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Gate) TON(Wrk_GateT,?,?) TON(Wrk_GateT,?,?) ,XIC(Wrk_GateT.DN) OTE(Sts_Gate) XIO(Inp) TON(Wrk_OnDlyT,?,?) TON(Wrk_OnDlyT,?,?) ,[XIC(Inp) ,XIO(Inp_Gate) ] TON(Wrk_OffDlyT,?,?) TON(Wrk_OffDlyT,?,?) ,XIC(Wrk_OnDlyT.DN) OTL(Out) ,XIC(Wrk_OffDlyT.DN) OTU(Out) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Gate the input and apply on-delay and off-delay timing]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_Gate:  PROCESS -- CONDITION GATE / DELAY
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x Revision History archived.
V4.00.00  2018-06-07:  Changed Inf_ items to HMI_ (e.g., HMI_Lib, HMI_Type).
Changed delay time configuration items to REAL seconds.
V4.10.00  2019-03-08:  Unmodified, up-rev only for Library 4.10.00
============================================================
This Instruction provides a "gate" for a discrete Input signal and
provides on-delay and off-delay timing for the gated signal.

When the Gate input is true, the instruction Input is passed through
to the Output, with on-delay and off-delay timing applied.

When the Gate input is false, the Output is kept off
(note: off-delay still applies!)

This instruction is usually used between a comparison
(analog threshold with deadband or discrete logic)
and a P_Alarm instance, but may be used as a
gated on-delay/off-delay timer generally.

When EnableIn  is FALSE (e.g., on a false LD rung),
the Input "Inp" is inverted.  Note that the Gate
input (Inp_Gate) is NOT inverted!!!
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_InpCond,Cfg_GateCond)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
Flag a Configuration Error if the Gate Delay, On Delay
or Off Delay timer preset is invalid
(and set timer to default zero preset, non-faulting value).

#####  V4.00.00  2018-06-07:  Changed delay time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)[MUL(Cfg_GateDly,1000.0,Wrk_GateT.PRE) XIC(Wrk_GateT.PRE.31) CLR(Wrk_GateT.PRE) ,MUL(Cfg_OnDly,1000.0,Wrk_OnDlyT.PRE) XIC(Wrk_OnDlyT.PRE.31) CLR(Wrk_OnDlyT.PRE) ,MUL(Cfg_OffDly,1000.0,Wrk_OffDlyT.PRE) XIC(Wrk_OffDlyT.PRE.31) CLR(Wrk_OffDlyT.PRE) ]OTE(Err_Timer)OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[============================================================
GATE DELAY, ON DELAY, OFF DELAY PROCESSING
============================================================
If the Gate Input is true, run the Gate Delay timer.
Once the Gate Delay is complete, enable the
On Delay and Off Delay that follow the input.

Report the Gate Delay status and the final Output status (after all delays).

@@@@@  NOTE: Doubled TONs are used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Gate) TON(Wrk_GateT,?,?) TON(Wrk_GateT,?,?) ,XIC(Wrk_GateT.DN) OTE(Sts_Gate) XIC(Inp) TON(Wrk_OnDlyT,?,?) TON(Wrk_OnDlyT,?,?) ,[XIO(Inp) ,XIO(Inp_Gate) ] TON(Wrk_OffDlyT,?,?) TON(Wrk_OffDlyT,?,?) ,XIC(Wrk_OnDlyT.DN) OTL(Out) ,XIC(Wrk_OffDlyT.DN) OTU(Out) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Set the Gate Input to 1 (default value) on prescan]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN PROCESSING
============================================================
Set the Gate Input to 1 (default value) on Prescan to enable
statuses / alarms that have Gate input unconnected.]]>
</Comment>
<Text>
<![CDATA[OTL(Inp_Gate);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_AIn" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-03-13T19:51:06.608Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:08:39.830Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Analog Input]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors an Analog Input from a flow, level, pressure,
temperature, or any other analog sensor, and provides:

*  Scaling, from Input (Raw) to PV (Engineering) Units
*  High-High, High, Low and Low-Low Status and Alarms, with Gate
inputs and configurable on-delay, off-delay and gate delay times
*  Monitoring of bad/uncertain PV status, floating point exceptions
and out-of-range conditions, with PV Fail alarm
*  Setting of a simulated input signal for process simulation
*  Capturing of the lowest and highest PV excursion values
*  Configuration for status thresholds, deadbands and range limits
*  Maintenance Commands to allow manual override of the input signal (Substitute PV)

Alarms are provided by P_Alarm AOI instances.
Status gating provided by P_Gate AOI instances.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.01)
See 4.10 Release Notes for details.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.00 Release Notes for details.
* Modified handling of SrcQ_IO and SrcQ.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-03)
See 4.00 Release Notes for details.
* Removed P_Mode, PSet/Val_Owner and related OSets,
   PSets and Vals.  Thresholds are now Cfgs.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added notify and unack count rollup for Channel object.
* Changed Out-of-Range limit checks to use raw Input (Inp_PV)
   instead of scaled PV (Val).  Changing EU scaling will not
   necessitate changing fail thresholds and deadband.
* Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by external objects.
* Removed Err_DB, code ensures Status Deadband configs are always valid.
* Added configurable decimal places for display on HMI.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_PV" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal (process variable) from Sensor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PVSrcQ" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Source and Quality (from Channel object, if available) (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PVNotify" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Related PV object alarm prio and ack status (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PVBad" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=PV or I/O Comms Status Bad, 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PVUncertain" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=PV Value Not Reliable, 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Sim" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Use simulated PV (Set_SimPV); 0=Use Input (Inp_PV)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_HiHiGate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHiGate.Inp_Gate" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Status Gate, 1=enabled]]>
</Description>
</Parameter>
<Parameter Name="Inp_HiGate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiGate.Inp_Gate" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Status Gate, 1=enabled]]>
</Description>
</Parameter>
<Parameter Name="Inp_LoGate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoGate.Inp_Gate" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Status Gate, 1=enabled]]>
</Description>
</Parameter>
<Parameter Name="Inp_LoLoGate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLoGate.Inp_Gate" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Status Gate, 1=enabled]]>
</Description>
</Parameter>
<Parameter Name="Inp_FailGate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailGate.Inp_Gate" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail Status Gate, 1=enabled]]>
</Description>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset all Alarms requiring reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_NoSubstPV" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Disallow selection of Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasChanObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a Channel object (AIChan, etc.) is used for Inp_PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_UseChanSrcQ" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Pass thru connected Channel's SrcQ value, 0=generate SrcQ]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVDecPlcs" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of decimal places for PV display (0..6)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasHiHiAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High-High Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasHiAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasLoAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasLoLoAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low-Low Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasFailAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiHiResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Analog InputFailure Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiHiAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknlowledge required for Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiHiSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Failure Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_InpRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input (unscaled) Minimum for Scaling]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input (unscaled) Maximum for Scaling]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV (Output) Minimum for Scaling to EU]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PVEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV (Output) Maximum for Scaling to EU]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FiltTC" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Filter Time Constant (s),
0.0 = unfiltered]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HiHiLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Status Threshold (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HiHiDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Status Deadband (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HiHiOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiHiGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time above High-High Limit to raise Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiHiOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiHiGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time below High-High Limit (minus deadband) to clear Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiHiGateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiHiGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Status Gate Delay (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Status Threshold (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HiDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Status Deadband (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HiOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time above High Limit to raise Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time below High Limit (minus deadband) to clear Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HiGateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="HiGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Status Gate Delay (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Status Threshold (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="-1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_LoDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Status Deadband (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_LoOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time below Low Limit to raise Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time above Low Limit (plus deadband) to clear Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoGateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Status Gate Delay (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Status Threshold (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="-1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_LoLoDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Status Deadband (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_LoLoOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoLoGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time below Low-Low Limit to raise Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoLoGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time above Low-Low Limit (plus deadband) to clear Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_LoLoGateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="LoLoGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Status Gate Delay (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailHiLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) High Limit (raw units)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.03958336e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="103.958336"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailLoLim" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) Low Limit (raw units)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-2.08333325e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="-2.0833333"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailDB" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Out-of-Range (fail) High/Low Deadband (raw units)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.16666657e-001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.41666666"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="FailGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time Bad or Out of Range to raise Fail Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="FailGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time OK or In Range to clear Fail Status (s)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailGateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="FailGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail Status Gate Delay (s)]]>
</Description>
</Parameter>
<Parameter Name="Set_SimPV" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV used in Simulation (Inp_Sim=1) (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_ClearCapt" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Clear the captured min / max PV excursion values]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset all Alarms requiring Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_HiHiAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiHiSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiHiUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiHiUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="HiHi.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_HiUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Hi.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve High Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Lo.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoLoAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoLoSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoLoUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_LoLoUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="LoLo.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowldege Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Analog Input Failure Alarm]]>
</Description>
</Parameter>
<Parameter Name="Val" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Analog Value (after Substitute PV, if used)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_InpPV" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Analog Input Value (actual, before Substitute PV selection)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVMinCapt" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Captured PV Minimum (excursion) since last cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVMaxCapt" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Captured PV Maximum (excursion) since last cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1.50000000e+038]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="-1.50000000e+038"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVEUMin" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Minimum of scaled range = MIN (Cfg_PVEUMin, Cfg_PVEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_PVEUMax" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Maximum of scaled range = MAX (Cfg_PVEUMin, Cfg_PVEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=none, 20=Lo, 21=Hi, 24=LoLo, 25=HiHi, 32=Fail, 34=CfgErr]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object + channel (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_SubstPV" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Using Substitute PV (overrides input), 0=Using live Input PV from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVBad" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=PV Bad quality or Out of Range]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVUncertain" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=PV Value is Uncertain (quality)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintByp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A Maintenance Bypass is Active, display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An Alarm is Shelved, Disabled or Suppressed: display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config (see detail Err_ bits for reason), display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Raw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Raw Input Scaling Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_EU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Scaled EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: On Delay, Off Delay, Gate Delay Time Invalid (use 0 to 2147483 s)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Filt" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: PV filter params (RateTime, TC)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_HiHiCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHiGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV High-High comparison result 1=High-High]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiHiGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHiGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[PV High-High Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiHi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Inp" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is above High-High limit]]>
</Description>
</Parameter>
<Parameter Name="Alm_HiHi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is in High-High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_HiHi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High-High Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiHiDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High-High Alarm has been Disabled by Maintenancy]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiHiSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High-High Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiHiShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiHi.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High-High Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV High comparison result 1=High]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="HiGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[PV High Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_Hi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Inp" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is above High limit]]>
</Description>
</Parameter>
<Parameter Name="Alm_Hi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is in High Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_Hi" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_HiShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Hi.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=High Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Low comparison result 1=Low]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[PV Low Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_Lo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Inp" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is below Low limit]]>
</Description>
</Parameter>
<Parameter Name="Alm_Lo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is in Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_Lo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Lo.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLoCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLoGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Low-Low comparison result 1=Low-Low]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLoGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLoGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[PV Low-Low Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Inp" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is below Low-Low limit]]>
</Description>
</Parameter>
<Parameter Name="Alm_LoLo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is in Low-Low Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_LoLo" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low-Low Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLoDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low-Low Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLoSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low-Low Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_LoLoShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LoLo.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Low-Low Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV Fail comparison result 1=Out of Range]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[PV Fail Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Inp" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input is Out of Range or PV Bad]]>
</Description>
</Parameter>
<Parameter Name="Alm_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm (PV Bad or Out of Range)]]>
</Description>
</Parameter>
<Parameter Name="Ack_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog input Failure Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Shelved" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Analog Input Failure Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="P_AIn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="LoLo" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,750,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[13,'Low-Low Alarm$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="750"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Lo" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,500,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'Low Alarm$00$00$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Hi" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,500,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[10,'High Alarm$00$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HiHi" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,750,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'High-High Alarm$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="750"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_EU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[1,'%$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="1">
<![CDATA['%']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_AIn$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_AIn']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[12,'Analog Input$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="12">
<![CDATA['Analog Input']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[12,'Analog Input$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="12">
<![CDATA['Analog Input']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Fail" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Analog Input Failure Alarm (bad quality or out of range)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[13,'Input Failure$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: Using Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnfiltPV" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Unfiltered PV, input to 1st order filter]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Alpha" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Filter multiplier = (1 / (1+TC/dT) )]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ScanT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Scan Timer (milliseconds, always runs)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,2147483647,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2147483647"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ScanTime" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Time since this instance was last scanned]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FiltPV" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Filtered PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ValidONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Selected PV goes from Infinite or Not a Number to VALID]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SelPVDINT" DataType="DINT" Radix="Hex" ExternalAccess="None">
<Description>
<![CDATA[Selected PV check for Infinite or Non A Number]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Hex" Value="16#0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SelPVInfNaN" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Selected PV (Input or Substitute) is Infinite or NaN]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_AIn$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_AIn']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fail" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: Fail Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_LoLo" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: Low-Low Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Lo" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: Low Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Hi" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: High Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HiHi" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: High-High Status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="FailGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail Alarm Gate / Delay Block]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[13,'Input Failure$00$00$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="LoLoGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low-Low Alarm Gate / Delay Block]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[10,'PV Low-Low$00$00$00$00$00$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="LoGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[Low Alarm Gate / Delay Block]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[6,'PV Low$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HiHiGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[High-High Alarm Gate / Delay Block]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[12,'PV High-High$00$00$00$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HiGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[High Alarm Gate / Delay Block]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[7,'PV High$00$00$00$00$00$00$00$00$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpInfNaN" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Input is Infinite or Not a Number]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpDINT" DataType="DINT" Radix="Hex" ExternalAccess="None">
<Description>
<![CDATA[Input REAL bit pattern as a DINT (check for Inf/NaN)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Hex" Value="16#0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object only (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_ResetAckAll (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset and Acknowledge all Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset all Alarms requiring Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ClearCapt" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Clear the captured min / max PV excursion values]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_InpPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to use Input PV (normal)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to use Substitute PV (override input)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_InpPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_InpPV (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_SubstPV (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MSet_SubstPV" DataType="REAL" Radix="Float" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance-Entered Substitute PV (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RawPV" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Value of raw PV to be used for Out of Range checking]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Off-Scan: no Val update or alarm checking.  PV Bad Quality ("stale") is asserted.]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================

#####  V4.00.00  2018-06-25:  Deleted rungs for Mode, Owner.  #####

============================================================
CONFIGURATION
============================================================
This rung publishes the Values for the scaled range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the AIn and PID ranges are in lockste

#####  V4.00.00  2018-06-25:  Added configurable decimal places for display on HMI.  #####
#####  Removed Err_DB, code ensures Status Deadband configs are always valid.  #####]]>
</Comment>
<Text>
<![CDATA[[GEQ(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMin) MOV(Cfg_PVEUMax,Val_PVEUMax) ,LES(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMax) MOV(Cfg_PVEUMax,Val_PVEUMin) ,LES(Cfg_HiHiDB,0.0) CLR(Cfg_HiHiDB) ,LES(Cfg_HiDB,0.0) CLR(Cfg_HiDB) ,LES(Cfg_LoDB,0.0) CLR(Cfg_LoDB) ,LES(Cfg_LoLoDB,0.0) CLR(Cfg_LoLoDB) ,LES(Cfg_FailDB,0.0) CLR(Cfg_FailDB) ,LIM(7,Cfg_PVDecPlcs,-1) MOV(2,Cfg_PVDecPlcs) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if the raw input range or scaled PV range
max and min are set the same (invalid range).

Since this Analog Input is disabled, indicate that the PV is bad
(Val is not being updated.)
Indicate that this Analog Input is DISABLED (Val_Sts = 33);
if there is a Configuration Error, indicate that as well (Val_Fault=34).]]>
</Comment>
<Text>
<![CDATA[[OTU(Sts_MaintByp) OTL(Sts_PVBad) ,CLR(Wrk_Fault) ,[EQU(Cfg_InpRawMax,Cfg_InpRawMin) OTE(Err_Raw) ,EQU(Cfg_PVEUMax,Cfg_PVEUMin) OTE(Err_EU) ,LES(Cfg_FiltTC,0.0) OTE(Err_Filt) ] OTE(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG INPUT PROCESSING
============================================================
This rung checks the bit pattern of the REAL input (by copying to a DINT) to see if
the input is +Infinity, -Infinity or Not a Number.  Per ANSI 32-bit Float
format, in these cases the Exponent bits (.30 thru .23) will all be 1s:
0111 1111 1000 0000 0000 0000 0000 0000 = +Infinity
1111 1111 1000 0000 0000 0000 0000 0000 = -Infinity
x111 1111 1xxx xxxx xxxx xxxx xxxx xxxx = Not a Number]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) COP(Inp_PV,Wrk_InpDINT,1) ,XIC(Inp_Sim) COP(Set_SimPV,Val_InpPV,1) COP(Set_SimPV,Wrk_InpDINT,1) ]MEQ(Wrk_InpDINT,16#7F80_0000,16#7F80_0000)OTE(Wrk_InpInfNaN);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[The Process Variable Input Value (Val_InpPV) shows the scaled input,
regardless of the settings of Mode, Substitute PV, etc., EVEN WHEN EnableIn IS FALSE!

If NOT in simulation, if the scaling configuration is valid, the Raw Input is scaled to Engineering Units.
In Simulation the Simulated Input must be provided in Engineering Units.

#####  V4.00.00  2018-06-25:  Remove P_Mode, threshold settings are now configs (Cfg_xxxLim).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Err_Raw) XIO(Err_EU) XIO(Wrk_InpInfNaN) [XIO(Inp_Sim) CPT(Val_InpPV,(Inp_PV-Cfg_InpRawMin)*(Cfg_PVEUMax-Cfg_PVEUMin)/(Cfg_InpRawMax-Cfg_InpRawMin)+Cfg_PVEUMin) MOV(Inp_PV,Wrk_RawPV) ,XIC(Inp_Sim) MOV(Set_SimPV,Val_InpPV) CPT(Wrk_RawPV,(Set_SimPV-Cfg_PVEUMin)*(Cfg_InpRawMax-Cfg_InpRawMin)/(Cfg_PVEUMax-Cfg_PVEUMin)+Cfg_InpRawMin) ] ,[XIC(Err_Raw) ,XIC(Err_EU) ] MOV(Cfg_PVEUMin,Val_InpPV) MOV(Cfg_InpRawMin,Wrk_RawPV) ,XIC(Wrk_InpInfNaN) COP(Wrk_InpDINT,Val_InpPV,1) COP(Wrk_InpDINT,Wrk_RawPV,1) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[When this Analog Input is not simulated,
the Simulated PV Setting tracks the selected PV for bumpless transfer into Simulation.

#####  V4.00.00  2018-06-25:  Remove P_Mode, threshold settings are now configs (Cfg_xxxLim).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)COP(Val_InpPV,Set_SimPV,1);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[The Process Variable Input Value (Val_InpPV) shows the scaled input,
regardless of the settings of Mode, Substitute PV, etc., EVEN WHEN EnableIn IS FALSE!

If NOT in simulation, if the scaling configuration is valid, the Raw Input is scaled to Engineering Units.
In Simulation the Simulated Input must be provided in Engineering Units.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_InpInfNaN)JMP(DoSrcQ);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[If the Analog Value rises above the Fail High Limit or falls below the
Fail Low Limit, raise the Fail Status Flag.

If the Analog Value is back in range, that is, it is below the Fail High Limit (minus
deadband) and above the Fail Low Limit (plus deadband),
clear the Fail Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Err_Raw)[[GEQ(Wrk_RawPV,Cfg_FailHiLim) ,LEQ(Wrk_RawPV,Cfg_FailLoLim) ] ,XIC(FailGate.Out) [CMP(Wrk_RawPV>=(Cfg_FailHiLim-Cfg_FailDB)) ,CMP(Wrk_RawPV<=(Cfg_FailLoLim+Cfg_FailDB)) ] ]OTE(Wrk_Fail);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality (Srcq) for Val_InpPV
Start with the Srcq from the Input Channel object if it's available.
Otherwise, start based on bad/uncertain input bits.

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

#####  V4.00.00  2018-06-25:  Modified to correct precedence and value of Simulated PV.  #####
#####  V4.00.01  2018-08-29:  Modified handling of Simulated PV and scaling config errors.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(DoSrcQ)[XIO(Cfg_UseChanSrcQ) MOV(1,Wrk_SrcQ) ,XIC(Cfg_UseChanSrcQ) MOV(Inp_PVSrcQ,Wrk_SrcQ) ,XIC(Inp_PVUncertain) MOV(16,Wrk_SrcQ) ,XIC(Inp_PVBad) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(10,Wrk_SrcQ) ,[XIC(Wrk_InpInfNaN) ,XIC(Sts_FailCmp) ] [XIO(Cfg_UseChanSrcQ) ,XIC(Inp_Sim) ] MOV(32,Wrk_SrcQ) ,[XIC(Err_Raw) ,XIC(Err_EU) ] MOV(35,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[Source and Quality (SrcQ) for Val (primary value)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[MOV(19,SrcQ);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA["Lurking" Operator Commands are cleared, as well as the Program Reset.]]>
</Comment>
<Text>
<![CDATA[OTU(MCmd_InpPV)OTU(MCmd_SubstPV)OTU(OCmd_Reset)OTU(OCmd_ResetAckAll)OTU(PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-06-25:  Remove Rdy_OSet -- AOI no longer has Mode / Owner.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(MRdy_InpPV)OTU(MRdy_SubstPV)OTU(ORdy_ResetAckAll)OTU(ORdy_Reset)OTU(Sts_RdyAck);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[The first-order filter's scan timer must run and clear every scan, whether the Instruction
is true or not.  Doing so here avoids a bump in the Value on transition to EnableIn TRUE.]]>
</Comment>
<Text>
<![CDATA[TON(Wrk_ScanT,?,?)CLR(Wrk_ScanT.ACC);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[Set up the filter initialization one-shot so filter of "Val" in main Logic
will start from first valid value on transition from false to true.]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_ValidONS);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[Clear the threshold Status and Alarms.
Clear the Alarm Notify Value, and show the Alarms Inhibited breadcrumb.

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached Channel object.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Alm_HiHi) OTU(Alm_Hi) OTU(Alm_Lo) OTU(Alm_LoLo) OTU(Alm_Fail) ,OTU(Sts_HiHi) OTU(Sts_Hi) OTU(Sts_Lo) OTU(Sts_LoLo) OTU(Sts_Fail) ,OTL(Sts_AlmInh) CLR(Val_Notify) CLR(Val_NotifyAll) CLR(Val_UnackAlmC) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan - PV is scaled and alarms are generated]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_AIn:  PROCESS -- ANALOG INPUT
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x: Revision History archived.
V4.00.00  2018-06-25:  Removed P_Mode, PSet/Val_Owner and related OSets,
   PSets and Vals. Thresholds are now Cfgs. Changed Inf_ items to HMI_,
and added Cfg_Area for security. Added notify and unack count rollup for
Channel object. Changed Out-of-Range limit checks to use raw Input
(Inp_PV) instead of scaled PV (Val). (Changing EU scaling will not
   necessitate changing fail thresholds and deadband.)
Aligned ready bit naming with command bit names.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_ResetReqd for use by external objects.
Removed Err_DB, code ensures Status Deadband configs are always valid.
Added configurable decimal places for display on HMI.
V4.00.01  2018-08-29:  Modified handling of SrcQ_IO and SrcQ.
V4.10.00  2019-03-08:  Added Cfg_HasMoreObj.
============================================================
This Instruction monitors an Analog Input from a flow, level, pressure,
temperature, or any other analog sensor, and provides:

*  Scaling, from Input (Raw) to PV (Engineering) Units
*  High-High, High, Low and Low-Low Status and Alarms, with Gate
inputs and configurable on-delay, off-delay and gate delay times
*  Monitoring of bad/uncertain PV status, floating point exceptions
and out-of-range conditions, with PV Fail alarm
*  Setting of a simulated input signal for process simulation
*  Capturing of the lowest and highest PV excursion values
*  Configurable status thresholds, threshold deadbands and out of range limits
*  Maintenance Commands to allow manual override of the input signal (Substitute PV)

Alarms are provided by P_Alarm AOI instances.
Status gating provided by P_Gate AOI instances.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-06-25:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####
#####  Removed two rungs with Mode, Owner functions.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)CONCAT(Cfg_Desc,Cfg_Label,Cfg_Tag)LOWER(Cfg_EU,Cfg_Area)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
This rung publishes the Values for the scaled range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the AIn and PID ranges are in lockstep.

This rung also ensures valid entries for Status Threshold Deadband configs
and the number of decimal places for display of the PV.

#####  V4.00.00  2018-06-25:  Added configurable decimal places for display on HMI.  #####
#####  Removed Err_DB, code ensures Status Deadband configs are always valid.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)[GEQ(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMin) MOV(Cfg_PVEUMax,Val_PVEUMax) ,LES(Cfg_PVEUMax,Cfg_PVEUMin) MOV(Cfg_PVEUMin,Val_PVEUMax) MOV(Cfg_PVEUMax,Val_PVEUMin) ,LES(Cfg_HiHiDB,0.0) CLR(Cfg_HiHiDB) ,LES(Cfg_HiDB,0.0) CLR(Cfg_HiDB) ,LES(Cfg_LoDB,0.0) CLR(Cfg_LoDB) ,LES(Cfg_LoLoDB,0.0) CLR(Cfg_LoLoDB) ,LES(Cfg_FailDB,0.0) CLR(Cfg_FailDB) ,LIM(7,Cfg_PVDecPlcs,-1) MOV(2,Cfg_PVDecPlcs) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if the raw or scaled PV range
max and min are set the same (invalid range), or if the
Analog Input Filter Time Constant is set to a negative value.]]>
</Comment>
<Text>
<![CDATA[[EQU(Cfg_InpRawMax,Cfg_InpRawMin) OTE(Err_Raw) ,EQU(Cfg_PVEUMax,Cfg_PVEUMin) OTE(Err_EU) ,LES(Cfg_FiltTC,0.0) OTE(Err_Filt) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
SUBSTITUTE PV / INPUT PV COMMAND PROCESSING
============================================================
These rungs handle the Substitute PV and Input PV Commands:

MCmd_SubstPV: Maintenance Command to select Maintenance-entered substitute PV

Do not allow this Command if Cfg_NoSubstPV is set.

#####  V4.00.00  2018-06-25:  Removed check for Maintenance Mode.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_SubstPV)OTU(MCmd_SubstPV)XIO(Cfg_NoSubstPV)OTL(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[MCmd_InpPV: Maintenance Command to cancel Substitute PV and return to Live Input PV.

#####  V4.00.00  2018-06-25:  Removed check for Maintenance Mode.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_InpPV) OTU(MCmd_InpPV) ,XIC(Cfg_NoSubstPV) ]OTU(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Show the Substitute / Input PV selection Status.

#####  V4.00.00  2018-06-25:  Removed Sts_InpPV.  (It was simply the inverse of Sts_SubstPV!)  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_SubstPV)OTE(Sts_SubstPV);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Substitute PV is the only Maintenance Bypass for an Analog Input.]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_SubstPV)OTE(Sts_MaintByp);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Commands for Substitue PV and Input PV are available
based on the current state of the internal toggle bit.

#####  V4.00.00  2018-06-25:  Removed check for Maintenance Mode.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_NoSubstPV)[XIO(Wrk_SubstPV) OTE(MRdy_SubstPV) ,XIC(Wrk_SubstPV) OTE(MRdy_InpPV) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(PCmd_HiHiAck) ,OTL(PCmd_HiAck) ,OTL(PCmd_LoAck) ,OTL(PCmd_LoLoAck) ,OTL(PCmd_FailAck) ] ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ]OTL(HiHi.PCmd_Reset)OTL(Hi.PCmd_Reset)OTL(Lo.PCmd_Reset)OTL(LoLo.PCmd_Reset)OTL(Fail.PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG INPUT PROCESSING
============================================================
This rung checks the bit pattern of the REAL input (by copying to a DINT) to see if
the input is +Infinity, -Infinity or Not a Number.  Per ANSI 32-bit Float
format, in these cases the Exponent bits (.30 thru .23) will all be 1s:
0111 1111 1000 0000 0000 0000 0000 0000 = +Infinity
1111 1111 1000 0000 0000 0000 0000 0000 = -Infinity
x111 1111 1xxx xxxx xxxx xxxx xxxx xxxx = Not a Number]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) COP(Inp_PV,Wrk_InpDINT,1) ,XIC(Inp_Sim) COP(Set_SimPV,Wrk_InpDINT,1) ]MEQ(Wrk_InpDINT,16#7F80_0000,16#7F80_0000)OTE(Wrk_InpInfNaN);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[The Process Variable Input Value (Val_InpPV) shows the scaled input,
regardless of the settings of Mode, Substitute PV, etc., EVEN WHEN EnableIn IS FALSE!

If NOT in simulation, if the scaling configuration is valid, the Raw Input is scaled to Engineering Units.
In Simulation the Simulated Input must be provided in Engineering Units.

#####  V4.00.00  2018-06-25:  Remove P_Mode, threshold settings are now configs (Cfg_xxxLim).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Err_Raw) XIO(Err_EU) XIO(Wrk_InpInfNaN) [XIO(Inp_Sim) CPT(Val_InpPV,(Inp_PV-Cfg_InpRawMin)*(Cfg_PVEUMax-Cfg_PVEUMin)/(Cfg_InpRawMax-Cfg_InpRawMin)+Cfg_PVEUMin) MOV(Inp_PV,Wrk_RawPV) ,XIC(Inp_Sim) MOV(Set_SimPV,Val_InpPV) CPT(Wrk_RawPV,(Set_SimPV-Cfg_PVEUMin)*(Cfg_InpRawMax-Cfg_InpRawMin)/(Cfg_PVEUMax-Cfg_PVEUMin)+Cfg_InpRawMin) ] ,[XIC(Err_Raw) ,XIC(Err_EU) ] MOV(Cfg_PVEUMin,Val_InpPV) MOV(Cfg_InpRawMin,Wrk_RawPV) ,XIC(Wrk_InpInfNaN) COP(Wrk_InpDINT,Val_InpPV,1) COP(Wrk_InpDINT,Wrk_RawPV,1) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[When this Analog Input is not simulated,
the Simulated PV Setting tracks the selected PV for bumpless transfer into Simulation.

#####  V4.00.00  2018-06-25:  Remove P_Mode, threshold settings are now configs (Cfg_xxxLim).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)COP(Val_InpPV,Set_SimPV,1);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[============================================================
SELECT NORMAL OR SUBSTITUTE PV
============================================================
This rung selects the input to the PV filter.
In normal operation, it's the value (Val_InpPV) selected above:
the scaled Input (Inp_PV) or Simulatied PV (Set_SimPV)
(and this value tracks back into the Substitute PV setting).
With Substitute PV enabled, it's the value of the entered MSet_SubstPV.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SubstPV)COP(Val_InpPV,Wrk_UnfiltPV,1)COP(Val_InpPV,MSet_SubstPV,1);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(Wrk_SubstPV)COP(MSet_SubstPV,Wrk_UnfiltPV,1);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[============================================================
PV FIRST-ORDER FILTER PROCESSING
============================================================
This rung determines whether the Analog PV (unfiltered) is +/-Infinity or +/- NotANumber.
In either case, the value cannot be passed into the filter calculation.  Instead, it is
just copied to the PV directly.]]>
</Comment>
<Text>
<![CDATA[COP(Wrk_UnfiltPV,Wrk_SelPVDINT,1)MEQ(Wrk_SelPVDINT,16#7F80_0000,16#7F80_0000)OTE(Wrk_SelPVInfNaN);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[In preparation for calculating the Filtered PV, this rung
determines the time since the previous scan, using a non-stop TON timer.
When we get here, we read the accumulator (in milliseconds, so
divide by 1000.0 to get seconds), then clear the accumulator.  Next scan the accumulator will have
incremented up to the number of milliseconds since last scan.  (Works for scan times up to 2 million seconds.....)]]>
</Comment>
<Text>
<![CDATA[MOV(2147483647,Wrk_ScanT.PRE)TON(Wrk_ScanT,?,?)DIV(Wrk_ScanT.ACC,1000.0,Wrk_ScanTime)CLR(Wrk_ScanT.ACC);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[If the input was +/-Infinity or Not a Number and it becomes a valid number,
initialize the filter to start from the first valid value.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SelPVInfNaN)ONS(Wrk_ValidONS)MOV(Wrk_UnfiltPV,Wrk_FiltPV);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[Calculate the FILTERED PV. 
First, calculate "alpha", the portion of the difference between input and previous value to move toward the input.
Then calculate the new value.]]>
</Comment>
<Text>
<![CDATA[[GRT(Cfg_FiltTC,0.0) CPT(Wrk_Alpha,1.0/(1.0+Wrk_ScanTime/Cfg_FiltTC)) ,LEQ(Cfg_FiltTC,0.0) CLR(Wrk_Alpha) ,XIO(Wrk_SelPVInfNaN) CPT(Wrk_FiltPV,(Wrk_Alpha*Wrk_FiltPV)+((1.0-Wrk_Alpha)*Wrk_UnfiltPV)) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[Sts_PVBad and Sts_PVUncertain take care of the PV Quality.
As for the ultimate Value (Val):
If the number is being filtered, pass thru the output of the filter.  It's a "real" number.
If the number is not being filtered because it is not a number or infinite, pass that thru.]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_SelPVInfNaN) MOV(Wrk_FiltPV,Val) ,XIC(Wrk_SelPVInfNaN) COP(Wrk_UnfiltPV,Val,1) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[============================================================
CAPTURE MIN / MAX PV EXCURSION
============================================================
Capture the PV Maximum Excursion (highest value reached) and
PV Minimum Excursion (lowest value reached) since last cleared.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SelPVInfNaN)[GRT(Val,Val_PVMaxCapt) MOV(Val,Val_PVMaxCapt) ,LES(Val,Val_PVMinCapt) MOV(Val,Val_PVMinCapt) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[============================================================
CLEAR CAPTURED MIN / MAX COMMAND PROCESSING
============================================================
This rung "clears" the captured Minimum and Maximum
by setting them to the current PV Value.]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_ClearCapt) OTU(OCmd_ClearCapt) ,XIC(PCmd_ClearCapt) OTU(PCmd_ClearCapt) ]XIO(Wrk_SelPVInfNaN)MOV(Val,Val_PVMaxCapt)MOV(Val,Val_PVMinCapt);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[============================================================
ANALOG THRESHOLD STATUS PROCESSING
============================================================
If the Analog Value is Infinite or Not a Number, skip the compares
to avoid Minor Faults and just flag the value as Bad below.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_SelPVInfNaN)JMP(FailCheck);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[If the Analog Value exceeds the High-High limit,
issue the High-High Status Flag.
If the Analog Value falls back below the limit (minus deadband),
clear the High-High Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####]]>
</Comment>
<Text>
<![CDATA[[GEQ(Val,Cfg_HiHiLim) ,XIC(HiHiGate.Out) CMP(Val>=(Cfg_HiHiLim-Cfg_HiHiDB)) ]OTE(Wrk_HiHi);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[If the Analog Value exceeds the High limit,
issue the High Status Flag.
If the Analog Value falls back below the limit (minus deadband), 
clear the High Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####]]>
</Comment>
<Text>
<![CDATA[[GEQ(Val,Cfg_HiLim) ,XIC(HiGate.Out) CMP(Val>=(Cfg_HiLim-Cfg_HiDB)) ]OTE(Wrk_Hi);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[If the Analog Value falls below the Low limit,
issue the Low Status Flag.
If the Analog Value rises back above the limit (plus deadband), 
clear the Low Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####]]>
</Comment>
<Text>
<![CDATA[[LEQ(Val,Cfg_LoLim) ,XIC(LoGate.Out) CMP(Val<=(Cfg_LoLim+Cfg_LoDB)) ]OTE(Wrk_Lo);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[If the Analog Value falls below the Low-Low limit,
issue the Low-Low Status Flag.
If the Analog Value rises back above the limit (plus deadband),
clear the Low-Low Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####]]>
</Comment>
<Text>
<![CDATA[[LEQ(Val,Cfg_LoLoLim) ,XIC(LoLoGate.Out) CMP(Val<=(Cfg_LoLoLim+Cfg_LoLoDB)) ]OTE(Wrk_LoLo);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[If the selected input (real or simulated) is Infinite or NaN, skip the (raw) fail limit check.

#####  V4.00.00  2018-06-25:  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(FailCheck)XIC(Wrk_InpInfNaN)JMP(Alarms);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[If the Analog Value rises above the Fail High Limit or falls below the
Fail Low Limit, raise the Fail Status Flag.

If the Analog Value is back in range, that is, it is below the Fail High Limit (minus
deadband) and above the Fail Low Limit (plus deadband),
clear the Fail Status Flag.

#####  V4.00.00  2018-06-25:  Changed limits from Values to Configurations (removed Mode, Settings).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Err_Raw)[[GEQ(Wrk_RawPV,Cfg_FailHiLim) ,LEQ(Wrk_RawPV,Cfg_FailLoLim) ] ,XIC(FailGate.Out) [CMP(Wrk_RawPV>=(Cfg_FailHiLim-Cfg_FailDB)) ,CMP(Wrk_RawPV<=(Cfg_FailLoLim+Cfg_FailDB)) ] ]OTE(Wrk_Fail);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
If the High-High Status Flag is set for a time that exceeds the On-Delay Time,
issue the PV High-High Status.
If the High-High Status Flag resets for a time that exceeds the Off-Delay Time, 
clear the PV High-High Status.]]>
</Comment>
<Text>
<![CDATA[LBL(Alarms)XIO(Wrk_SelPVInfNaN)[XIC(Wrk_HiHi) OTE(Sts_HiHiCmp) ,P_Gate(HiHiGate) ,XIC(HiHiGate.Out) OTE(Sts_HiHi) ];]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[If the High Status Flag is set for a time that exceeds the On-Delay Time,
issue the PV High Status.
If the High Status Flag resets for a time that exceeds the Off-Delay Time, 
clear the PV High Status.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SelPVInfNaN)[XIC(Wrk_Hi) OTE(Sts_HiCmp) ,P_Gate(HiGate) ,XIC(HiGate.Out) OTE(Sts_Hi) ];]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[If the Low Status Flag is set for a time that exceeds the On-Delay Time,
issue the PV Low Status.
If the Low Status Flag resets for a time that exceeds the Off-Delay Time, 
clear the PV Low Status.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SelPVInfNaN)[XIC(Wrk_Lo) OTE(Sts_LoCmp) ,P_Gate(LoGate) ,XIC(LoGate.Out) OTE(Sts_Lo) ];]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[If the Low-Low Status Flag is set for a time that exceeds the On-Delay Time,
issue the PV Low-Low Status.
If the Low-Low Status Flag resets for a time that exceeds the Off-Delay Time, 
clear the PV Low-Low Status.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SelPVInfNaN)[XIC(Wrk_LoLo) OTE(Sts_LoLoCmp) ,P_Gate(LoLoGate) ,XIC(LoLoGate.Out) OTE(Sts_LoLo) ];]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[If the Fail Status Flag is set for a time that exceeds the On-Delay Time,
issue the PV Fail Status.
If the Fail Status Flag resets for a time that exceeds the Off-Delay Time, 
clear the PV Fail Status, AND if the Bad PV input clears or the input is Siimulated,
AND if the value is NOT INF/NAN and there are no configuration errors,
clear the PV Fail Status.

#####  V4.00.00  2018-06-25:  Removed Sts_InpPV (it was simply inverse of Sts_SubstPV).  #####
#####  Changed PV Out of Range comparisons to use RAW (INPUT) PV, not scaled/filtered value (Val).  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Fail) OTE(Sts_FailCmp) ,P_Gate(FailGate) ,[XIC(FailGate.Out) ,XIO(Inp_Sim) [XIC(Inp_PVBad) ,XIC(Cfg_UseChanSrcQ) GEQ(Inp_PVSrcQ,32) ] ,XIC(Wrk_InpInfNaN) ,XIC(Err_Raw) ,XIC(Err_EU) ] OTE(Sts_Fail) ];]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[If the PV is not substituted and it has a total Failure (rung above), or if it
is Infinite or Not a Number, flag it as BAD.
If the Uncertain input is set and the PV is not simulated or substituted,
flag it as UNCERTAIN.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SubstPV)[XIO(Inp_Sim) [XIC(Inp_PVUncertain) ,XIC(Cfg_UseChanSrcQ) LIM(16,Inp_PVSrcQ,31) ] OTE(Sts_PVUncertain) ,XIC(Sts_Fail) OTE(Sts_PVBad) ];]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================

The various alarms are ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1).

#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[OTL(HiHi.PCfg_AllowExist)OTL(Hi.PCfg_AllowExist)OTL(Lo.PCfg_AllowExist)OTL(LoLo.PCfg_AllowExist)OTL(Fail.PCfg_AllowExist);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[Handle PV High-High Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(HiHi);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[Handle PV High Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(Hi);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[Handle PV Low Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(Lo);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[Handle PV Low-Low Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(LoLo);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[Handle Input Failure Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(Fail);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).]]>
</Comment>
<Text>
<![CDATA[[XIC(HiHi.Sts_AlmInh) ,XIC(Hi.Sts_AlmInh) ,XIC(Lo.Sts_AlmInh) ,XIC(LoLo.Sts_AlmInh) ,XIC(Fail.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[Flag a Configuration Error if any Status On-Delay, Off-Delay
or Gate Delay timer preset is invalid
(and set timer to a default, non-faulting value).]]>
</Comment>
<Text>
<![CDATA[[XIC(HiHiGate.Sts_Err) ,XIC(HiGate.Sts_Err) ,XIC(LoGate.Sts_Err) ,XIC(LoLoGate.Sts_Err) ,XIC(FailGate.Sts_Err) ]OTE(Err_Timer);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad Raw or Engineering Units Scaling configs
Bad 1st-Order Filter config
Bad Status Threshold Gate Delay configs
Bad Alarm Minimum Duration configs

Then a summary Bad Config status is provided, simply an OR of the individual bits.

#####  V4.00.00  2018-01-15:  Removed Err_DB, code ensures Status Deadband configs are always valid.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Err_Raw) ,XIC(Err_EU) ,XIC(Err_Filt) ,XIC(Err_Timer) ,[XIC(HiHi.Sts_Err) ,XIC(Hi.Sts_Err) ,XIC(Lo.Sts_Err) ,XIC(LoLo.Sts_Err) ,XIC(Fail.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality (Srcq) for Val_InpPV
Start with the Srcq from the Input Channel object if it's available.
Otherwise, start based on bad/uncertain input bits.

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

#####  V4.00.00  2018-06-25:  Modified to correct precedence and value of Simulated PV.  #####
#####  V4.00.01  2018-08-29:  Modified handling of Simulated PV and scaling config errors.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Cfg_UseChanSrcQ) MOV(1,Wrk_SrcQ) ,XIC(Cfg_UseChanSrcQ) MOV(Inp_PVSrcQ,Wrk_SrcQ) ,XIC(Inp_PVUncertain) MOV(16,Wrk_SrcQ) ,XIC(Inp_PVBad) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(10,Wrk_SrcQ) ,[XIC(Wrk_InpInfNaN) ,XIC(Sts_FailCmp) ] [XIO(Cfg_UseChanSrcQ) ,XIC(Inp_Sim) ] MOV(32,Wrk_SrcQ) ,[XIC(Err_Raw) ,XIC(Err_EU) ] MOV(35,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Comment>
<![CDATA[Source and Quality (SrcQ) for Val (primary value)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

#####  V4.00.00  2018-06-25:  Modified to allow Substitute PV to control SrcQ despite alarm for failed PV.  #####
#####  V4.00.01  2018-08-29:  Modified handling of Substitute PV and Channel SrcQ.  #####]]>
</Comment>
<Text>
<![CDATA[[MOV(SrcQ_IO,Wrk_SrcQ) ,XIC(Sts_SubstPV) MOV(18,Wrk_SrcQ) ,[XIC(Wrk_SelPVInfNaN) ,XIC(FailGate.Out) ] MOV(32,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ) ];]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Comment>
<![CDATA[This rung generates the enumerated Device Fault Status:
0 = none
20 = Lo
21 = Hi
24 = Lo-Lo
25 = Hi-Hi
32 = Failed (I/O fault or out of range)
34 = Config Error]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Fault) ,XIC(Sts_Lo) MOV(20,Wrk_Fault) ,XIC(Sts_Hi) MOV(21,Wrk_Fault) ,XIC(Sts_LoLo) MOV(24,Wrk_Fault) ,XIC(Sts_HiHi) MOV(25,Wrk_Fault) ,[XIC(Sts_Fail) ,XIC(SrcQ.5) ] MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached Channel object.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) OTU(Wrk_Notify.0) ,GRT(HiHi.Val_Notify,Wrk_Notify) MOV(HiHi.Val_Notify,Wrk_Notify) ,GRT(Hi.Val_Notify,Wrk_Notify) MOV(Hi.Val_Notify,Wrk_Notify) ,GRT(Lo.Val_Notify,Wrk_Notify) MOV(Lo.Val_Notify,Wrk_Notify) ,GRT(LoLo.Val_Notify,Wrk_Notify) MOV(LoLo.Val_Notify,Wrk_Notify) ,GRT(Fail.Val_Notify,Wrk_Notify) MOV(Fail.Val_Notify,Wrk_Notify) ,[XIC(HiHi.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(Hi.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(Lo.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(LoLo.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(Fail.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_UnackAlmC,Val_UnackAlmC) ];]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Comment>
<![CDATA[Roll up the notification from the input Channel object.

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached PV (e.g., P_AIChan) object.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(Inp_PVNotify,Wrk_Notify) MVM(Inp_PVNotify,2#1111_1110,Wrk_Notify) ,XIC(Inp_PVNotify.0) OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-06-25:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(HiHi.Sts_RdyAck) ,XIC(Hi.Sts_RdyAck) ,XIC(Lo.Sts_RdyAck) ,XIC(LoLo.Sts_RdyAck) ,XIC(Fail.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(HiHi.Sts_RdyReset) ,XIC(Hi.Sts_RdyReset) ,XIC(Lo.Sts_RdyReset) ,XIC(LoLo.Sts_RdyReset) ,XIC(Fail.Sts_RdyReset) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear Ownership. clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
"Lurking" Operator Commands are cleared, as well as the Program Reset.

#####  V4.00.00  2018-06-25:  Removed rung for PSet_ / Val_Owner.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(MCmd_InpPV)OTU(MCmd_SubstPV)OTU(OCmd_Reset)OTU(OCmd_ResetAckAll)OTU(PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Set up the filter initialization one-shot so filter will start from first valid value.]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_ValidONS);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Set up the PV Min/Max Capture function to "clear" on first scan,
thus capturing the first PV value as "min" and "max"]]>
</Comment>
<Text>
<![CDATA[OTL(PCmd_ClearCapt);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_CmdSrc" Revision="4.10" RevisionExtension=".01 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-06-11T19:19:37.168Z" CreatedBy="Not Available" EditedDate="2019-10-16T20:45:42.017Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Command Source]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This instruction provides selection of Command Source for a Device-
level object  (from highest priority to lowest):
* Not Initialized
* Hand (hardwired control, not controllable from I/O)
* POoS (Programmed Out of Service) (EnableIn is false)
* MOoS (Maintenance Out of Service)
* Maint (Maintenance)
* Ovrd (Override) (typically used for process overrides)
* External (e.g.: local/field devices or upstream SCADA)
* Prog (Program) (automated control, and default if Cfg_ProgDefault = 1)
* Oper (Operator (manual control, and default if Cfg_ProgDefault = 0)

(Program and Operator have the same priority.)

The current command source is shown with individual Status bits
and also a bit field (Sts_bSrc) and an enumeration (Sts_eSrc).

When EnableIn is false, all source acquire/release and lock/unlock
Commands are processed "behind the scenes", but the source
"Program Out of Service" (POoS) is selected.  When EnableIn
becomes true, the source selection takes into account the
Commands received -- in other words, the command source
becomes the one that would have been in effect had the EnableIn
False / Out of Service condition never occurred.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.10.00)
See 4.10 Release Notes for details.
* Added clear of internal "Ext" latch if Ext does not exist.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.01)
See 4.10 Release Notes for details.
* Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.
* Added XRdy_Acq, XRdy_Rel so XCmd_Acq, XCmd_Rel can be used on HMI.
* Corrected parameter external access.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.00 Release Notes for details.
Minor change to initialization, handling of level commands in EnableInFalse. 

SUMMARY OF CHANGES FROM PREVIOUS VERSION (P_Mode V3.5-01)
See 4.00 Release Notes for details.
* Derived from P_Mode V3.5-01. P_Mode version history archived.
* Added Out of Service (OoS), External (Ext); removed "NoMode"
* Added configuration for sources to exist, commands for "opposite" source.
* Aligned ready bit naming with command bit names.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Hand" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acquire Hand (typ. hardwired local), 0=Release Hand]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Ovrd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acquire Override (higher priority program logic), 0=Release Override]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ExtInh" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Inhibit External Acquisition, 0=Allow External Acquisition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasOper" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Operator (unlocked) exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasOperLocked" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Operator Locked exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasProg" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Program (unlocked) exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasProgLocked" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Program Locked exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasExt" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=External exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMaint" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Maintenance exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMOoS" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Maintenance Out of Service exists, can be selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OvrdOverLock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Override supersedes Prog/Oper Lock, 0=don't override Lock]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtOverLock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=External supersedes Prog/Oper Lock, 0=don't override Lock]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ProgPwrUp" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Power Up to Prog, 0=Power Up to Oper]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ProgNormal" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Normal Source: 1=Program if no requests; 0=Operator if no requests]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PCmdPriority" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Command Priority: 1=Program Cmds Win; 0=Operator Cmds Win]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PCmdProgAsLevel" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=PCmd_Prog used as a Level (1=Prog, 0=Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_PCmdLockAsLevel" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=PCmd_Lock used as a Level (1=Lock, 0=Unlock)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtAcqAsLevel" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=XCmd_Acq used as Level (1=Acq, 0=Rel)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Oper" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to select Operator (Prog to Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Prog" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to select Program (Oper to Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Lock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Lock Program (disallow Operator)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Unlock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unlock Program (allow Oper to acquire)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Normal" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to select Normal (Oper or Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MCmd_OoS" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to select Out Of Service]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MCmd_IS" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to select In Service]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MCmd_Acq" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Acquire (Oper/Prog/Ovrd to Maint)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MCmd_Rel" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Release (Maint to Oper/Prog/Ovrd)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Acq" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Acquire]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Rel" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Release]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OCmd_Oper" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to select Operator (Prog to Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OCmd_Prog" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to select Program (Oper to Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OCmd_Lock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Lock Operator (disallow Program)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OCmd_Unlock" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Unlock Operator (allow Prog to acquire)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="OCmd_Normal" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to select Normal (Oper or Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_eSrc" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Selection enum: .8=Ext, .7=OoS, .6=Oper, .5=Prog, .4=Ovrd, .3=Maint, .2=Hand, .1=Norm, .0=Lock]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_bSrc" TagType="Base" DataType="INT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Active Selection bitmap (for HMI totem pole)]]>
</Description>
<Comments>
<Comment Operand=".0">
<![CDATA[Hand]]>
</Comment>
<Comment Operand=".1">
<![CDATA[Programmable Out of Service]]>
</Comment>
<Comment Operand=".2">
<![CDATA[Maintenance Out of Service]]>
</Comment>
<Comment Operand=".3">
<![CDATA[Maintenance]]>
</Comment>
<Comment Operand=".4">
<![CDATA[Override]]>
</Comment>
<Comment Operand=".5">
<![CDATA[External]]>
</Comment>
<Comment Operand=".6">
<![CDATA[Program Locked]]>
</Comment>
<Comment Operand=".7">
<![CDATA[Program]]>
</Comment>
<Comment Operand=".8">
<![CDATA[Operator Locked]]>
</Comment>
<Comment Operand=".9">
<![CDATA[Operator]]>
</Comment>
</Comments>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Hand" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Hand is selected (supersedes OoS, Maint, Ovrd, Ext, Prog, Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_OoS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Out of Service is selected (supersedes Maint, Ovrd, Ext, Prog, Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Maint" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Maintenance is selected (supersedes Ovrd, Ext, Prog, Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Ovrd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Override is selected (supersedes Ext, Prog, Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Ext" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=External is selected (supersedes Prog, Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Prog" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Program is selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ProgLocked" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Program is selected and Locked]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Oper" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Operator is selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_OperLocked" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Operator is selected and Locked]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ProgOperSel" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Prog/Oper selection (latch) state, 1=Program, 0=Operator]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ProgOperLock" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Prog/Oper lock (latch) state, 1=Locked, 0=Unlocked]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Normal" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Selection equals the Normal (Prog or Oper)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ProgReqInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Program request inhibited, cannot Get to Program from Current State]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ExtReqInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=External request inhibited]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MAcqRcvd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Maintenance Acquire command received this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MRdy_OoS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_OoS (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MRdy_IS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_IS (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MRdy_Acq" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Acq (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="MRdy_Rel" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Rel (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XRdy_Acq" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for XCmd_Acq (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XRdy_Rel" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for XCmd_Rel (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="ORdy_Oper" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Oper (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="ORdy_Prog" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Prog (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="ORdy_Lock" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Lock (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="ORdy_Unlock" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Unlock (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="ORdy_Normal" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Normal (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="P_CmdSrc" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_ProgOperSel" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Program (1) / Operator (0) selection result]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgOperLock" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Prog/Oper Lock (1) / Unlock (0) selection result]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Prog" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Program (1) / Operator (0) selection progress]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_MOoS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Maintenance Out of Service (1) / In Service (0) latch]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Maint" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Maintenance Acquire (1) / Release (0) latch]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Lock" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Prog/Oper Lock (1) / Unlock (0) selection progress]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Init" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Initialized, 0=Initialization is required (e.g., powerup)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HasProgLocked" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Stored copy of Cfg_HasProgLocked]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HasProg" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Stored copy of Cfg_HasProg]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HasOperLocked" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Stored copy of Cfg_HasOperLocked]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HasOper" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Stored copy of Cfg_HasOper]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'P_CmdSrc$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['P_CmdSrc']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_8" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Ext" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal latch of External selection (1=Ext acquired)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Processes received Commands, but shows "Programmed Out of Service"]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
P_CmdSrc:  EnableInFalse Handling
============================================================
When EnableIn is False, this Routine is scanned instead of the "Logic" Routine.
All Commands are processed "behind the scenes", but the Command Source
is shown as "Out of Service".  When EnableIn becomes true, the AOI
takes into account the Commands received -- in other words, the Command
Source becomes the one that would have been in effect had the EnableIn
False / Out of Service condition never occurred.
============================================================
INITIALIZATION
============================================================
If initialization has been completed, skip the following few rungs.]]>
</Comment>
<Text>
<![CDATA[XIO(S:FS)XIC(Wrk_Init)JMP(SkipInit);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Initialization:  This rung clears any "lurking" commands and releases External source.

#####  V4.00.01  2018-08-23:  Added PCmd_Prog, PCmd_Lock to commands cleared.  #####
#####  V4.10.00  2018-01-14:  Added XCmd_Acq, XCmd_Rel, Ext latch to items cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(MCmd_Acq) OTU(MCmd_Rel) OTU(MCmd_OoS) OTU(MCmd_IS) ,OTU(Inp_ExtInh) OTU(XCmd_Acq) OTU(XCmd_Rel) OTU(Wrk_Ext) ,OTU(PCmd_Prog) OTU(PCmd_Lock) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[LBL(SkipInit)[OTU(OCmd_Oper) OTU(OCmd_Prog) OTU(OCmd_Lock) OTU(OCmd_Unlock) OTU(OCmd_Normal) ,OTU(PCmd_Oper) OTU(PCmd_Unlock) OTU(PCmd_Normal) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Initialization:  This rung processes the Configuration (.Cfg_) bits to be
sure the configuration is valid.  It sets the initial states of the
Program / Operator (selection) latch and the Prog/Oper Lock latch.

#####  V4.00.01  2018-08-23:  Corrected selection of Normal when no HasOper/HasProg.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Wrk_Lock) OTU(Wrk_ProgOperLock) OTU(Wrk_Prog) OTU(Wrk_ProgOperSel) ,XIO(Cfg_HasOper) XIO(Cfg_HasProg) [XIC(Cfg_ProgPwrUp) OTL(Cfg_ProgNormal) OTL(Cfg_HasProg) ,XIO(Cfg_ProgPwrUp) OTU(Cfg_ProgNormal) OTL(Cfg_HasOper) ] ,XIO(Cfg_HasOper) XIO(Cfg_HasOperLocked) OTL(Cfg_ProgNormal) OTL(Cfg_ProgPwrUp) ,XIO(Cfg_HasProg) XIO(Cfg_HasProgLocked) OTU(Cfg_ProgNormal) OTU(Cfg_ProgPwrUp) ,[XIO(Cfg_ProgPwrUp) XIO(Cfg_HasOper) ,XIC(Cfg_ProgPwrUp) OTL(Wrk_ProgOperSel) OTL(Wrk_Prog) XIO(Cfg_HasProg) ] OTL(Wrk_ProgOperLock) OTL(Wrk_Lock) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[The Prog/Oper existence options are stored on initialization and enforced thereafter.
Changes must be made with controller in PROG mode to take effect.
-----  Initialization complete.  -----]]>
</Comment>
<Text>
<![CDATA[[OTU(Wrk_HasOper) XIC(Cfg_HasOper) OTL(Wrk_HasOper) ,OTU(Wrk_HasOperLocked) XIC(Cfg_HasOperLocked) OTL(Wrk_HasOperLocked) ,OTU(Wrk_HasProg) XIC(Cfg_HasProg) OTL(Wrk_HasProg) ,OTU(Wrk_HasProgLocked) XIC(Cfg_HasProgLocked) OTL(Wrk_HasProgLocked) ,OTL(Wrk_Init) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[This rung restores the saved initial Program / Operator existence configurations,
overwriting any changes made while in controller RUN mode.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_HasOper) OTL(Cfg_HasOper) ,XIO(Wrk_HasOper) OTU(Cfg_HasOper) ,XIC(Wrk_HasOperLocked) OTL(Cfg_HasOperLocked) ,XIO(Wrk_HasOperLocked) [OTU(Cfg_HasOperLocked) ,XIO(Wrk_HasOper) OTL(Cfg_ProgPwrUp) OTL(Cfg_ProgNormal) OTL(Cfg_PCmdPriority) ] ,XIC(Wrk_HasProg) OTL(Cfg_HasProg) ,[XIO(Wrk_HasProg) OTU(Cfg_HasProg) ,XIO(Wrk_HasOper) ] OTU(Cfg_PCmdProgAsLevel) ,XIC(Wrk_HasProgLocked) OTL(Cfg_HasProgLocked) ,XIO(Wrk_HasProgLocked) [[OTU(Cfg_HasProgLocked) ,OTU(Cfg_PCmdLockAsLevel) ] ,XIO(Wrk_HasProg) OTU(Cfg_ProgPwrUp) OTU(Cfg_ProgNormal) OTU(Cfg_PCmdPriority) ] ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Commands configured as level are preserved;
commands configured as edge are cleared.

#####  V4.00.01  2018-08-23:  Added 2 rungs.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_PCmdProgAsLevel)OTU(PCmd_Prog);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(Cfg_PCmdLockAsLevel)OTU(PCmd_Lock);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[Cfg_OvrdOverLock=0, Cfg_ExtOverLock=1 is an illegal combination.

#####  V4.00.01  2018-08-23:  Added check for Cfg_HasExt.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_OvrdOverLock)XIC(Cfg_HasExt)XIC(Cfg_ExtOverLock)OTL(Cfg_OvrdOverLock);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[Release External if:
* XCmd_Rel is received and External is EDGE;
* XCmd_Acq is cleared and External is LEVEL; or
* External is inhibited by logic.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####
#####  V4.10.01  2019-10-16:  Added clear of internal Ext latch if Ext does not exist.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(XCmd_Rel) OTU(XCmd_Rel) XIO(Cfg_ExtAcqAsLevel) ,XIC(Cfg_HasExt) XIC(Cfg_ExtAcqAsLevel) XIO(XCmd_Acq) ,XIC(Inp_ExtInh) ,XIO(Cfg_HasExt) ]OTU(Wrk_Ext);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If an External Acquire command is received:
* If External is configured to exist and it is NOT inhibited, acquire External;
* If the External commands are configured as EDGE, clear the command.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(XCmd_Acq)[XIC(Cfg_HasExt) XIO(Inp_ExtInh) OTL(Wrk_Ext) ,XIO(Cfg_ExtAcqAsLevel) OTU(XCmd_Acq) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[If a Maintenance Release command is received, or if Maintenance is configured
to not exist, release Maintenance.]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_Rel) ,XIO(Cfg_HasMaint) ]OTU(MCmd_Rel)OTU(Wrk_Maint);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[If a Maintenance Acquire command is received, set the "Maintenance Acquire
Received" status bit.  If Maintenance is configured to exist, go to Maintenance.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Acq)OTU(MCmd_Acq)OTE(Sts_MAcqRcvd)XIC(Cfg_HasMaint)OTL(Wrk_Maint);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[If a Maintenance In Service command is received, or if Maintenance Out of Service
is configured to not exist, place In Service (release MOoS).]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_IS) ,XIO(Cfg_HasMOoS) ]OTU(MCmd_IS)OTU(Wrk_MOoS);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[If a Maintenance Out of Service command is received, and if Maintenance Out of Service
is configured to exist, place Out of Service (acquire MOoS).]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_OoS)OTU(MCmd_OoS)XIC(Cfg_HasMOoS)OTL(Wrk_MOoS);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[============================================================
MAINTENANCE, EXTERNAL AND OPERATOR COMMAND READIES
============================================================
This rung generates the "ORdy_", "MRdy_" and "XRdy_" bits that signify to the
HMI that the corresponding command should "do" something
and the command button should be enabled on the display.

NOTE ON MAINTENANCE ACQUIRE: Ready for MCmd_Acq if Maintenance
is allowed and the internal Maintenance latch is NOT set.  However,
we need to display Ready even if latch IS set so that Sts_MAcqRcvd
can blink to reset an external Maintenance expiration timer!!!

#####  V4.10.00  2019-03-08:  Added XRdy_Acq, XRdy_Rel so External Acq/Rel can be used on HMI .  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_HasMaint) [OTE(MRdy_Acq) ,XIC(Wrk_Maint) OTE(MRdy_Rel) ] ,XIC(Cfg_HasMOoS) [XIC(Wrk_MOoS) OTE(MRdy_IS) ,XIO(Wrk_MOoS) OTE(MRdy_OoS) ] ,XIC(Cfg_HasExt) XIO(Cfg_ExtAcqAsLevel) [XIC(Wrk_Ext) OTE(XRdy_Rel) ,XIO(Wrk_Ext) XIO(Inp_ExtInh) OTE(XRdy_Acq) ] ,OTU(ORdy_Lock) OTU(ORdy_Unlock) OTU(ORdy_Oper) OTU(ORdy_Prog) OTU(ORdy_Normal) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[============================================================
STATUS AND ENUMERATED STATUS
============================================================
This rung provides the various Status bits and Enumerated Status value
for the valid selections when on a false rung, as follows:

HAND:  Sts_Hand if Inp_Hand is set
POoS: Sts_OOS if Inp_Hand is NOT set.

Enum:
= 4  if HAND
= 129 if POoS]]>
</Comment>
<Text>
<![CDATA[[OTU(Sts_Maint) OTU(Sts_Ovrd) OTU(Sts_Ext) OTU(Sts_ProgLocked) OTU(Sts_Prog) OTU(Sts_OperLocked) OTU(Sts_Oper) ,OTU(Sts_eSrc.1) OTU(Sts_eSrc.3) OTU(Sts_eSrc.4) OTU(Sts_eSrc.5) OTU(Sts_eSrc.6) OTU(Sts_eSrc.8) ,XIC(Inp_Hand) OTE(Sts_Hand) OTE(Sts_eSrc.2) ,XIO(Inp_Hand) OTE(Sts_OoS) OTE(Sts_eSrc.7) OTE(Sts_eSrc.0) ];]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[Adjust O/P state based on level and power up configurations and input conditions

#####  V4.10.00  2019-03-08:  Modified handling of PCmd_Lock, PCmd_Prog when configured as LEVEL.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Prog) ,XIO(Wrk_Lock) ][XIC(Cfg_PCmdLockAsLevel) [XIO(PCmd_Lock) OTU(Wrk_Lock) OTU(Wrk_Prog) XIC(Cfg_HasProg) XIC(Cfg_ProgPwrUp) ,XIC(PCmd_Lock) OTL(Wrk_Lock) ] OTL(Wrk_Prog) ,XIC(Cfg_PCmdProgAsLevel) XIO(Wrk_Lock) [XIO(PCmd_Prog) OTU(Wrk_Prog) ,XIC(PCmd_Prog) OTL(Wrk_Prog) ] ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[============================================================
STATUS AND ENUMERATED STATUS GENERATION
============================================================
This rung provides bitmapped status for use on the HMI "Totem Pole" object:
.0 = Hand
.1 = Programmed Out of Service (always set here)
.2 = Maintenance Out of Service
.3 = Maintenance
.4= Override
.5 = External
.6 = Program Locked
.7 = Program
.8 = Operator Locked
.9 = Operator
In addition, the final selections of the Program / Operator selection latch
and the Prog/Oper lock latch are captured for use next scan.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Hand) OTE(Sts_bSrc.0) ,OTL(Sts_bSrc.1) ,XIC(Wrk_MOoS) OTE(Sts_bSrc.2) ,XIC(Wrk_Maint) OTE(Sts_bSrc.3) ,XIC(Inp_Ovrd) [XIC(Cfg_OvrdOverLock) ,XIO(Cfg_OvrdOverLock) [XIO(Wrk_Lock) ,XIC(Sts_bSrc.4) ] ] OTE(Sts_bSrc.4) ,XIC(Wrk_Ext) XIC(Cfg_HasExt) XIO(Inp_ExtInh) OTE(Sts_bSrc.5) ,XIC(Wrk_Prog) OTL(Wrk_ProgOperSel) [XIC(Wrk_Lock) OTE(Sts_bSrc.6) ,XIO(Wrk_Lock) OTE(Sts_bSrc.7) ] ,XIO(Wrk_Prog) OTU(Wrk_ProgOperSel) [XIC(Wrk_Lock) OTE(Sts_bSrc.8) ,XIO(Wrk_Lock) OTE(Sts_bSrc.9) ] ,XIC(Wrk_Lock) OTL(Wrk_ProgOperLock) ,XIO(Wrk_Lock) OTU(Wrk_ProgOperLock) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[The final states of the internal Program / Operator selection latch and the
Prog/Oper Lock latch are made available as Status bits.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_ProgOperSel) OTE(Sts_ProgOperSel) ,XIC(Wrk_ProgOperLock) OTE(Sts_ProgOperLock) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[Because the final selection is either Hand or Programmed Out of Service,
the selection is not the normal one (Program or Operator) and it is not possible
to command the selection to Program from here.]]>
</Comment>
<Text>
<![CDATA[OTU(Sts_Normal)OTL(Sts_ProgReqInh)OTL(Sts_ExtReqInh);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Selects Hand, OOS, Maint, Ovrd, Ext, Oper, Prog based on Inputs and Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_CmdSrc:  PROCESS -- COMMAND SOURCE SELECTOR
============================================================
Revision 4.10.01 Release  2019-10-16:  See V4.10.xx Release Notes for details.
V4.00.00  2018-03-15:  New instruction for V4.0 Library of Process Objects.
(Derived from P_Mode V3.5-01. P_Mode version history archived.)
Added Out of Service (OoS), External (Ext); removed "NoMode"
Added configuration for sources to exist, commands for "opposite" source.
Aligned ready bit naming with command bit names.
V4.00.01  2018-08-23:  Minor change to initialization, handling of level commands in EIF. 
V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.
Added XRdy_Acq, XRdy_Rel so XCmd_Acq, XCmd_Rel can be used on HMI.
Corrected parameter external access.
V4.10.01  2019-10-16:  Added clear of internal "Ext" latch if Ext does not exist.
============================================================
This instruction provides selection of Command Source for a
Device-level object  (from highest priority to lowest):
* Not Initialized
* Hand (hardwired control, not controllable from I/O)
* POoS (programmed Out of Service) (EnableIn is false)
* MOoS (maintenance Out of Service)
* Maint (Maintenance)
*  Ovrd (Override) (typically used for process overrides)
* External (e.g.: field pilot controls or upstream SCADA)
*  Prog  (Program) (automated control, and default if Cfg_ProgNormal = 1)
*  Oper (Operator (manual control, and default if Cfg_ProgNormal = 0)

The current command source is shown with individual Status bits
and also a bit field (Sts_bSrc) and an enumeration (Sts_eSrc).

============================================================
INITIALIZATION
============================================================
If initialization has been completed, skip the following few rungs.]]>
</Comment>
<Text>
<![CDATA[XIO(S:FS)XIC(Wrk_Init)JMP(SkipInit);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Initialization:  This rung clears any "lurking" commands.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(PCmd_Prog) OTU(PCmd_Oper) OTU(PCmd_Lock) OTU(PCmd_Unlock) OTU(PCmd_Normal) ,OTU(MCmd_Acq) OTU(MCmd_Rel) OTU(MCmd_OoS) OTU(MCmd_IS) ,OTU(OCmd_Oper) OTU(OCmd_Prog) OTU(OCmd_Lock) OTU(OCmd_Unlock) OTU(OCmd_Normal) ,OTU(Wrk_Ext) OTU(Inp_ExtInh) OTU(XCmd_Acq) OTU(XCmd_Rel) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Initialization:  This rung processes the Configuration (.Cfg_) bits to be
sure the configuration is valid.  It sets the initial states of the
Program / Operator (selection) latch and the Prog/Oper Lock latch.

#####  V4.00.01  2018-08-23:  Selection of Normal when HasOper/HasProg both 0.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Wrk_Lock) OTU(Wrk_ProgOperLock) OTU(Wrk_Prog) OTU(Wrk_ProgOperSel) ,XIO(Cfg_HasOper) XIO(Cfg_HasProg) [XIC(Cfg_ProgPwrUp) OTL(Cfg_ProgNormal) OTL(Cfg_HasProg) ,XIO(Cfg_ProgPwrUp) OTU(Cfg_ProgNormal) OTL(Cfg_HasOper) ] ,XIO(Cfg_HasOper) XIO(Cfg_HasOperLocked) OTL(Cfg_ProgNormal) OTL(Cfg_ProgPwrUp) ,XIO(Cfg_HasProg) XIO(Cfg_HasProgLocked) OTU(Cfg_ProgNormal) OTU(Cfg_ProgPwrUp) ,[XIO(Cfg_ProgPwrUp) XIO(Cfg_HasOper) ,XIC(Cfg_ProgPwrUp) OTL(Wrk_ProgOperSel) OTL(Wrk_Prog) XIO(Cfg_HasProg) ] OTL(Wrk_ProgOperLock) OTL(Wrk_Lock) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[The Prog/Oper existence options are stored on initialization and enforced thereafter.
Changes must be made with controller in PROG mode to take effect.
-----  Initialization complete.  -----]]>
</Comment>
<Text>
<![CDATA[[OTU(Wrk_HasOper) XIC(Cfg_HasOper) OTL(Wrk_HasOper) ,OTU(Wrk_HasOperLocked) XIC(Cfg_HasOperLocked) OTL(Wrk_HasOperLocked) ,OTU(Wrk_HasProg) XIC(Cfg_HasProg) OTL(Wrk_HasProg) ,OTU(Wrk_HasProgLocked) XIC(Cfg_HasProgLocked) OTL(Wrk_HasProgLocked) ,OTL(Wrk_Init) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[This rung restores the saved initial Program / Operator existence configurations,
overwriting any changes made while in controller RUN mode.]]>
</Comment>
<Text>
<![CDATA[LBL(SkipInit)[XIC(Wrk_HasOper) OTL(Cfg_HasOper) ,XIO(Wrk_HasOper) OTU(Cfg_HasOper) ,XIC(Wrk_HasOperLocked) OTL(Cfg_HasOperLocked) ,XIO(Wrk_HasOperLocked) [OTU(Cfg_HasOperLocked) ,XIO(Wrk_HasOper) OTL(Cfg_ProgPwrUp) OTL(Cfg_ProgNormal) OTL(Cfg_PCmdPriority) ] ,XIC(Wrk_HasProg) OTL(Cfg_HasProg) ,[XIO(Wrk_HasProg) OTU(Cfg_HasProg) ,XIO(Wrk_HasOper) ] OTU(Cfg_PCmdProgAsLevel) ,XIC(Wrk_HasProgLocked) OTL(Cfg_HasProgLocked) ,XIO(Wrk_HasProgLocked) [[OTU(Cfg_HasProgLocked) ,OTU(Cfg_PCmdLockAsLevel) ] ,XIO(Wrk_HasProg) OTU(Cfg_ProgPwrUp) OTU(Cfg_ProgNormal) OTU(Cfg_PCmdPriority) ] ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Cfg_OvrdOverLock=0, Cfg_RemOverLock=1 is an illegal combination]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_OvrdOverLock)XIC(Cfg_HasExt)XIC(Cfg_ExtOverLock)OTL(Cfg_OvrdOverLock);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Release External if:
* XCmd_Rel is received and External is EDGE;
* XCmd_Acq is cleared and External is LEVEL; or
* External is inhibited by logic.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####
#####  V4.10.01  2019-10-16:  Added clear of internal Ext latch if Ext does not exist.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(XCmd_Rel) OTU(XCmd_Rel) XIO(Cfg_ExtAcqAsLevel) ,XIC(Cfg_HasExt) XIC(Cfg_ExtAcqAsLevel) XIO(XCmd_Acq) ,XIC(Inp_ExtInh) ,XIO(Cfg_HasExt) ]OTU(Wrk_Ext);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[If an External Acquire command is received:
* If External is configured to exist and it is NOT inhibited, acquire External;
* If the External commands are configured as EDGE, clear the command.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(XCmd_Acq)[XIC(Cfg_HasExt) XIO(Inp_ExtInh) OTL(Wrk_Ext) ,XIO(Cfg_ExtAcqAsLevel) OTU(XCmd_Acq) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[If a Maintenance Release command is received, or if Maintenance is configured
to not exist, release Maintenance.]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_Rel) ,XIO(Cfg_HasMaint) ]OTU(MCmd_Rel)OTU(Wrk_Maint);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[If a Maintenance Acquire command is received, set the "Maintenance Acquire
Received" status bit.  If Maintenance is configured to exist, go to Maintenance.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Acq)OTU(MCmd_Acq)OTE(Sts_MAcqRcvd)XIC(Cfg_HasMaint)OTL(Wrk_Maint);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If a Maintenance In Service command is received, or if Maintenance Out of Service
is configured to not exist, place In Service (release MOoS).]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_IS) ,XIO(Cfg_HasMOoS) ]OTU(MCmd_IS)OTU(Wrk_MOoS);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[If a Maintenance Out of Service command is received, and if Maintenance Out of Service
is configured to exist, place Out of Service (acquire MOoS).]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_OoS)OTU(MCmd_OoS)XIC(Cfg_HasMOoS)OTL(Wrk_MOoS);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[Change PCmd_Normal or OCmd_Normal to the appropriate Prog or Oper command.]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Normal) OTU(OCmd_Normal) [XIO(Cfg_ProgNormal) XIC(Wrk_ProgOperSel) OTL(OCmd_Oper) ,XIC(Cfg_ProgNormal) XIO(Wrk_ProgOperSel) OTL(OCmd_Prog) ] ,XIC(PCmd_Normal) OTU(PCmd_Normal) [XIO(Cfg_ProgNormal) XIC(Wrk_ProgOperSel) OTL(PCmd_Oper) ,XIC(Cfg_ProgNormal) XIO(Wrk_ProgOperSel) [XIO(Cfg_PCmdProgAsLevel) OTL(PCmd_Prog) ,XIC(Cfg_PCmdProgAsLevel) XIO(Cfg_PCmdLockAsLevel) OTL(PCmd_Lock) ] ] ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(OCmd_Oper)XIO(OCmd_Prog)XIO(OCmd_Lock)XIO(OCmd_Unlock)XIO(PCmd_Oper)XIO(PCmd_Unlock)[XIO(PCmd_Prog) ,XIC(Cfg_PCmdProgAsLevel) ][XIO(PCmd_Lock) ,XIC(Cfg_PCmdLockAsLevel) XIC(PCmd_Lock) XIC(Wrk_Lock) ]JMP(AfterOPCmnds);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[If a Program Unlock command is received, and if Program is selected,
unlock.  Then, if Program exists, keep in Program; if not, go to Operator.]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Unlock)OTU(PCmd_Unlock)XIC(Wrk_ProgOperSel)OTU(Wrk_Lock)[XIC(Cfg_HasProg) OTL(Wrk_Prog) ,XIO(Cfg_HasProg) OTU(Wrk_Prog) ];]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[If an Operator Unlock command is received and if Operator is selected, unlock.
Then, if Oper Unlocked exists, keep in Operator; if not, go to Program.]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Unlock)OTU(OCmd_Unlock)XIO(Wrk_ProgOperSel)OTU(Wrk_Lock)[XIC(Cfg_HasOper) OTU(Wrk_Prog) ,[XIO(Cfg_HasOper) ,XIC(Cfg_PCmdProgAsLevel) XIC(PCmd_Prog) ,XIC(Cfg_PCmdLockAsLevel) XIC(PCmd_Lock) OTL(Wrk_Lock) ] OTL(Wrk_Prog) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[PCmd_Oper when Operator Commands have priority over Program Commands:
If Operator (unlocked) exists, go there.  If Operator (unlocked) does not
exist, but Operator Locked exists, then go there.
]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Oper)[XIO(OCmd_Prog) ,XIC(Cfg_PCmdPriority) ]XIC(Wrk_ProgOperSel)[XIO(Cfg_PCmdLockAsLevel) ,XIO(PCmd_Lock) ][XIC(Cfg_HasOper) [XIO(Cfg_PCmdProgAsLevel) ,XIO(PCmd_Prog) ] OTU(Wrk_Lock) ,XIO(Cfg_HasOper) XIC(Cfg_HasOperLocked) OTL(Wrk_Lock) ]OTU(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[If an Operator Command to go to Program is received, if Program (unlocked) exits, go there.
If Program (unlocked) does NOT exist, but Program Locked exits, go there so long as
a PCmd_Lock as level is not low, so as to take us OUT of Program Locked.]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Prog)[XIO(PCmd_Oper) ,XIO(Cfg_PCmdPriority) ]XIO(Wrk_ProgOperSel)[XIC(Cfg_HasProg) [XIO(Cfg_PCmdProgAsLevel) ,XIC(PCmd_Prog) ] OTU(Wrk_Lock) ,XIC(Cfg_HasProgLocked) [XIO(Cfg_HasProg) XIO(Cfg_PCmdLockAsLevel) ,XIC(Cfg_PCmdLockAsLevel) XIC(PCmd_Lock) ,XIC(Cfg_PCmdProgAsLevel) XIO(PCmd_Prog) ] OTL(Wrk_Lock) ]OTL(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[Clear both processed commands for next scan.]]>
</Comment>
<Text>
<![CDATA[OTU(PCmd_Oper)OTU(OCmd_Prog);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[If a Program Command to go to Program is received, if NOT locked or if in Program Locked,
then if Program (unlocked) exits, go there; if Program (unlocked) does NOT exist, but
Program Locked exits, go there so long as a PCmd_Lock as level is not low,
so as to take us OUT of Program Locked.]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Prog)[XIC(Cfg_PCmdPriority) ,XIO(OCmd_Oper) ][XIO(Wrk_ProgOperLock) ,XIC(Wrk_ProgOperSel) XIO(Cfg_PCmdProgAsLevel) ][XIC(Cfg_HasProg) OTU(Wrk_Lock) ,XIO(Cfg_HasProg) XIC(Cfg_HasProgLocked) OTL(Wrk_Lock) ]OTL(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[OCmd_Oper when Program Commands have priority over Operator Commands:
If NOT locked, or if Operator and Locked, then if Operator (unlocked) exists, go there.
if Operator (unlocked) does NOT exist, but Operator Locked exists, then go there.
]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Oper)[XIO(Cfg_PCmdPriority) ,XIO(PCmd_Prog) ][XIO(Wrk_ProgOperLock) ,XIO(Wrk_ProgOperSel) ][XIO(Cfg_PCmdLockAsLevel) ,XIO(PCmd_Lock) ][XIC(Cfg_HasOper) OTU(Wrk_Lock) ,XIC(Cfg_HasOperLocked) [XIO(Cfg_HasOper) ,XIC(Cfg_PCmdProgAsLevel) XIC(PCmd_Prog) ] OTL(Wrk_Lock) ]OTU(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[Clear both processed commands for next scan. Do not clear PCmd_Prog if Cfg_PCmdProgAsLevel is set.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Oper)XIO(Cfg_PCmdProgAsLevel)OTU(PCmd_Prog);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[OCmd_Lock when Program Commands have priority over Operator Commands:
If in Operator or not Locked, go to Operator Locked, but next rung wins.
]]>
</Comment>
<Text>
<![CDATA[XIC(OCmd_Lock)[XIO(Cfg_PCmdPriority) ,XIO(PCmd_Lock) ]XIC(Cfg_HasOperLocked)[XIO(Wrk_ProgOperSel) ,XIO(Wrk_ProgOperLock) ]OTU(Wrk_Prog)OTL(Wrk_Lock);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[If a Program Lock Command is received, if Program Locked exists and in Program
or NOT Locked, go to Program Locked.]]>
</Comment>
<Text>
<![CDATA[XIC(PCmd_Lock)[XIC(Cfg_PCmdPriority) ,XIO(OCmd_Lock) ]XIC(Cfg_HasProgLocked)[XIC(Wrk_ProgOperSel) ,XIO(Wrk_ProgOperLock) ]OTL(Wrk_Prog)OTL(Wrk_Lock);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[Clear both processed commands for next scan. Do not clear PCmd_Lock is Cfg_PCmdLockAsLevel is set.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Lock)XIO(Cfg_PCmdLockAsLevel)OTU(PCmd_Lock);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[Level signal state correction. Verifying signal low final states.]]>
</Comment>
<Text>
<![CDATA[LBL(AfterOPCmnds)XIC(Wrk_Prog)[XIC(Cfg_PCmdProgAsLevel) XIO(Wrk_Lock) XIO(PCmd_Prog) ,XIC(Cfg_PCmdLockAsLevel) XIO(PCmd_Lock) XIC(Wrk_Lock) OTU(Wrk_Lock) [XIC(Cfg_PCmdProgAsLevel) XIO(PCmd_Prog) ,XIO(Cfg_HasProg) ] ]OTU(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[Level signal state correction. Verifying signal high final states.]]>
</Comment>
<Text>
<![CDATA[XIC(Cfg_PCmdProgAsLevel)XIC(PCmd_Prog)XIO(Wrk_Prog)XIO(Wrk_Lock)OTL(Wrk_Prog);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[============================================================
MAINTENANCE AND OPERATOR COMMAND READIES
============================================================
This rung generates the "ORdy_" and "MRdy_" bits that signify to the
HMI that the corresponding command should "do" something
and the command button should be enabled on the display.

NOTE ON MAINTENANCE ACQUIRE: Ready for MCmd_Acq if Maintenance
is allowed and the internal Maintenance latch is NOT set.  However,
we need to display Ready even if latch IS set so that Sts_MAcqRcvd
can blink to reset an external Maintenance expiration timer!!!

#####  V4.10.00  2019-03-08:  Added XRdy_Acq, XRdy_Rel so External Acq/Rel can be used on HMI .  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_HasMaint) [OTE(MRdy_Acq) ,XIC(Wrk_Maint) OTE(MRdy_Rel) ] ,XIC(Cfg_HasMOoS) [XIC(Wrk_MOoS) OTE(MRdy_IS) ,XIO(Wrk_MOoS) OTE(MRdy_OoS) ] ,XIC(Cfg_HasExt) XIO(Cfg_ExtAcqAsLevel) [XIC(Wrk_Ext) OTE(XRdy_Rel) ,XIO(Wrk_Ext) XIO(Inp_ExtInh) OTE(XRdy_Acq) ] ,XIO(Wrk_Lock) XIC(Cfg_HasOperLocked) OTE(ORdy_Lock) ,[XIO(Wrk_Lock) XIC(Wrk_Prog) [XIC(Cfg_HasOper) XIO(Cfg_PCmdProgAsLevel) ,XIC(Cfg_HasOperLocked) [XIO(Cfg_PCmdProgAsLevel) ,XIC(PCmd_Prog) XIO(Cfg_PCmdPriority) ] ] ,XIC(Wrk_Lock) XIO(Wrk_Prog) XIC(Cfg_HasOper) [XIO(Cfg_PCmdLockAsLevel) ,XIO(PCmd_Lock) ] [XIO(Cfg_PCmdProgAsLevel) ,XIO(PCmd_Prog) ] ] OTE(ORdy_Oper) ,XIO(Wrk_Prog) [XIC(Wrk_Lock) OTE(ORdy_Unlock) ,[XIC(Cfg_HasProg) [XIO(Cfg_PCmdProgAsLevel) ,XIC(PCmd_Prog) ] ,XIC(Cfg_HasProgLocked) [XIO(Cfg_PCmdLockAsLevel) ,XIC(PCmd_Lock) ] ] OTE(ORdy_Prog) ] ,[XIO(Cfg_ProgNormal) XIC(ORdy_Oper) XIC(Wrk_Prog) ,XIC(Cfg_ProgNormal) XIC(ORdy_Prog) XIO(Wrk_Prog) ] OTE(ORdy_Normal) ];]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[============================================================
STATUS AND ENUMERATED STATUS GENERATION
============================================================
This rung provides bitmapped status for use on the HMI "Totem Pole" object:
.0 = Hand
.1 = Programmed Out of Service (always cleared here)
.2 = Maintenance Out of Service
.3 = Maintenance
.4= Override
.5 = External
.6 = Program Locked
.7 = Program
.8 = Operator Locked
.9 = Operator
In addition, the final selections of the Program / Operator selection latch
and the Prog/Oper lock latch are captured for use next scan.

#####  V4.10.00  2019-03-08:  Added XCmd_Acq, XCmd_Rel, Cfg_ExtAcqAsLevel, removed Inp_Ext.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Hand) OTE(Sts_bSrc.0) ,OTU(Sts_bSrc.1) ,XIC(Wrk_MOoS) OTE(Sts_bSrc.2) ,XIC(Wrk_Maint) OTE(Sts_bSrc.3) ,XIC(Inp_Ovrd) [XIC(Cfg_OvrdOverLock) ,XIO(Cfg_OvrdOverLock) [XIO(Wrk_Lock) ,XIC(Sts_bSrc.4) ] ] OTE(Sts_bSrc.4) ,XIC(Wrk_Ext) XIC(Cfg_HasExt) XIO(Inp_ExtInh) OTE(Sts_bSrc.5) ,XIC(Wrk_Prog) OTL(Wrk_ProgOperSel) [XIC(Wrk_Lock) OTE(Sts_bSrc.6) ,XIO(Wrk_Lock) OTE(Sts_bSrc.7) ] ,XIO(Wrk_Prog) OTU(Wrk_ProgOperSel) [XIC(Wrk_Lock) OTE(Sts_bSrc.8) ,XIO(Wrk_Lock) OTE(Sts_bSrc.9) ] ,XIC(Wrk_Lock) OTL(Wrk_ProgOperLock) ,XIO(Wrk_Lock) OTU(Wrk_ProgOperLock) ];]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[This rung and the next determine the final Command Source based on the
states of the inputs and internal working bits.  Individual Command Source
Status bits and an enumerated Status value are generated.

Between the internal working bits used above and the rules implemented here,
outside objects cannot manipulate the state of this object by setting/clearing its Status bits.

Public Status is generated for:
* Hand 4
* Out of Service 129
* Maintenance 8
* Override 16
* External 256
* Program 32
* Operator 64
* Program / Operator Lock status 33/65
* Command Source = Normal 34/66]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_Hand)OTE(Sts_Hand)OTE(Sts_eSrc.2);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[This rung determines the final Command Source based on requests and priorities.]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Hand)[XIC(Wrk_MOoS) OTE(Sts_OoS) OTE(Sts_eSrc.7) ,XIO(Wrk_MOoS) [XIC(Wrk_Maint) OTE(Sts_Maint) OTE(Sts_eSrc.3) ,XIO(Wrk_Maint) [XIC(Inp_Ovrd) [XIO(Wrk_Lock) ,XIC(Cfg_OvrdOverLock) ,XIC(Sts_Ovrd) ] OTE(Sts_Ovrd) OTE(Sts_eSrc.4) ,XIO(Sts_Ovrd) [XIC(Sts_bSrc.5) [XIO(Wrk_Lock) ,XIC(Cfg_ExtOverLock) ] OTE(Sts_Ext) OTE(Sts_eSrc.8) ,XIO(Sts_Ext) [XIC(Wrk_Prog) OTE(Sts_Prog) OTE(Sts_eSrc.5) ,XIO(Wrk_Prog) OTE(Sts_Oper) OTE(Sts_eSrc.6) ] [XIC(Wrk_Lock) OTE(Sts_eSrc.0) [XIC(Wrk_Prog) OTE(Sts_ProgLocked) ,XIO(Wrk_Prog) OTE(Sts_OperLocked) ] ,[XIC(Wrk_Prog) XIC(Cfg_ProgNormal) ,XIO(Wrk_Prog) XIO(Cfg_ProgNormal) ] OTE(Sts_Normal) XIO(Wrk_Lock) OTE(Sts_eSrc.1) ] ] ] ] ];]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[The final states of the internal Program / Operator selection latch and the
Prog/Oper Lock latch are made available as Status bits.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_ProgOperSel) OTE(Sts_ProgOperSel) ,XIC(Wrk_ProgOperLock) OTE(Sts_ProgOperLock) ];]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[Sts_ProgReqInh is set if it is not possible to go from the current selection
to Program (or Program Locked) by a request to go to Program (or Program Locked).]]>
</Comment>
<Text>
<![CDATA[[XIO(Sts_Prog) [XIO(Sts_Oper) ,XIC(Sts_OperLocked) ] [XIO(Sts_Ext) ,XIO(Cfg_HasProgLocked) ,XIC(Cfg_ExtOverLock) ] ,XIO(Cfg_HasProg) XIO(Cfg_HasProgLocked) ]OTE(Sts_ProgReqInh);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[Sts_ExtReqInh is set if it is not possible to go from the current selection
to External by a request to go to External.]]>
</Comment>
<Text>
<![CDATA[[XIO(Cfg_HasExt) ,XIC(Inp_ExtInh) ,XIO(Sts_Ext) [XIO(Sts_Oper) XIO(Sts_Prog) ,XIO(Cfg_ExtOverLock) [XIC(Sts_OperLocked) ,XIC(Sts_ProgLocked) ] ] ]OTE(Sts_ExtReqInh);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Sets internal state and enumerated / bit status to "not initialized".]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
P_CmdSrc:  Prescan Handling
============================================================
On powerup / prescan::
* Set the enumerated selection Status to "Not initialized" (zero);
* Set the bitmapped selection Status to "Not initializer" (bit .0);
* Flag the instruction to execute the initialization rungs when run.]]>
</Comment>
<Text>
<![CDATA[CLR(Sts_eSrc)CLR(Sts_bSrc)OTU(Wrk_Init);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_D4SD" Revision="4.10" RevisionExtension=".01 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2010-09-09T18:23:54.745Z" CreatedBy="Not Available" EditedDate="2019-10-17T17:27:51.319Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[2-, 3- or 4-State Device]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction controls and monitors feedback from a Discrete 2-State,
3-State or 4-State Device, and provides:
  *  Operator and Program Commands to select one of the 2, 3 or 4 states
  *  User-configurable text labels for the states
  *  Per-State setting, clearing or holding of four user-configurable outputs
  *  Per-State monitoring of four feedbacks (on, off or don't care) to confirm state
  *  Detection of failure to reach the target state (when feedbacks are used)
  *  Monitoring of Permissive conditions to allow commanding to each state
  *  Monitoring of Interlock conditions to return device to State 0
  *  Operation in Hand, Maintenance, Override, Program and Operator Modes
  *  Simulation, providing feedback of a working device while disabling output
       (keeping de-energized)
  *  Monitoring of I/O communication status
  *  Alarms for Fail to reach target state (if feedbacks are used), Device Failure
      (reported by device using an input), Interlock Trip, I/O Fault
  *  "Available" status for use by automation logic to know whether the
      device can be controlled by other objects.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, Program, External, Override, Maintenance, Out of
Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.10.00)
See 4.10 Release Notes for details.
* No changes, uprevved because P_CmdSrc 4.10.01 is used.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Changed availability to use input availability from interlocks.
* Added audible alert on commanded energize/state change.
* Added Inp_HornInh to disable Horn operation.
* Modified logic to correct confgurable shed action.
* Updated to P_CmdSrc V4.10.00.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-11)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added notify and unack count rollup for Channel object.
* Changed "Mode" to "Command Source" using P_CmdSrc 4.00.00.
* Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_AckReqd and Sts_ResetReqd for use by external objects.
* Changed delay / time configuration items to REAL seconds.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_FdbkA" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: Feedback A from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FdbkB" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: Feedback B from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FdbkC" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: Feedback C from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FdbkD" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: Feedback D from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_DeviceFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: Device Fault from device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PermOK0" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, device can be commanded to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBPermOK0" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, device can be commanded to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PermOK1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, device can be commanded to State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBPermOK1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, device can be commanded to State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PermOK2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, device can be commanded to State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBPermOK2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, device can be commanded to State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PermOK3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, device can be commanded to State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBPermOK3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, device can be commanded to State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlocks OK, 0=Not OK, go to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBIntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Interlocks OK, 0=Not OK, go to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkAvail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Interlock Availibility OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Communication Status 0=OK, 1=fail]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Sim" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Simulate working device; 0=Control actual device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Hand" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Hand" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_Ovrd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Ovrd" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_OvrdCmd" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Override Device Command: 0=None, 1=St.0, 2=St.1, 3=St.2, 4=St.3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ExtInh" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_ExtInh" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_HornInh" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Inhibit audible alert, 0 = Alllow audible alert]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset all fault conditions and latched Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_St0onShed" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Go to State 0 on Shed, 0=Hold position on Shed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_NumStates" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of device states (2..4)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt0Write" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: write output in state 0, Bit=0: leave in last state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[15]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt0State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if written) Bit=1: output set in State 0, Bit=0: output cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0001"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt1Write" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: write output in state 1, Bit=0: leave in last state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[15]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt1State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if written) Bit=1: output set in State 1, Bit=0: output cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0010"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt2Write" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: write output in state 2, Bit=0: leave in last state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[15]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt2State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if written) Bit=1: output set in State 2, Bit=0: output cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0100"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt3Write" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: write output in state 3, Bit=0: leave in last state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[15]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutSt3State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if written) Bit=1: output set in State 3, Bit=0: output cleared]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[8]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt0Check" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: Check Feedback in state 0, Bit=0: don't care]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt0State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if checking) Bit=1: Feedback is 1 in State 0, Bit=0: Feedback is 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0001"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt1Check" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: Check Feedback in state 1, Bit=0: don't care]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt1State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if checking) Bit=1: Feedback is 1 in State 1, Bit=0: Feedback is 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0010"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt2Check" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: Check Feedback in state 2, Bit=0: don't care]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt2State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if checking) Bit=1: Feedback is 1 in State 2, Bit=0: Feedback is 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0100"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt3Check" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bit=1: Check Feedback in state 3, Bit=0: don't care]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FdbkSt3State" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[(if checking) Bit=1: Feedback is 1 in State 3, Bit=0: Feedback is 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[8]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_1000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasPerm0Obj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_PermOK0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasPerm1Obj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_PermOK1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasPerm2Obj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_PermOK2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasPerm3Obj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_PermOK3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasIntlkObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Intlk is connected to Inp_IntlkOK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OperSt0Prio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=OCmd_St0 any time, 0=OCmd_St0 only when Oper selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtSt0Prio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=XCmd_St0 any time, 0=XCmd_St0 only when Ext selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New device OCmd resets shed latches and cleared alarms, 0=OCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_XCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New device XCmd resets shed latches and cleared alarms, 0=XCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OvrdPermIntlk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Override ignores Bypassable Perm/ Intlk; 0=always use Perm/Intlk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnFail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Go to State 0 and Alarm on Fail to reach position; 0=Alarm only on Fail]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnDeviceFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Go to State 0 and Alarm on Device Fault; 0=Alarm only on Device Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnIOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Go to State 0 and Alarm on I/O Fault; 0=Alarm only on I/O Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasFailAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to reach state Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasDeviceFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIntlkTripAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIOFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HornOnChange" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[0 = Horn on energize only, 1 = Horn on any state change]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Fail to reach state Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DeviceFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Fail to reach state Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DeviceFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail to reach state Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DeviceFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Device Fault Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_OutAPulseT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to pulse Output A (sec) (0=output held continuously)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutBPulseT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to pulse Output B (sec) (0=output held continuously)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutCPulseT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to pulse Output C (sec) (0=output held continuously)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDPulseT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to pulse Output D (sec) (0=output held continuously)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SimFdbkT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Delay to echo back reaching state when in Simulation (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="2.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_StartHornT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to sound audible on commanded start (sec) (0=disabled)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time after new state requested to reach that state before Fault (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="10.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PSet_Owner" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Owner Request ID (non-zero) or Release (zero)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_St0" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to set device to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_St1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to set device to State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_St2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to set device to State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_St3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to set device to State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Prog" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Prog" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Oper" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Oper" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Lock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Lock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Normal" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Normal" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to ResetShed Latches and Cleared Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_FailAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Fail to Reach Target Position Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Fail to Reach Target Position Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Fail to Reach Target Position Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Fail.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Fail to Reach Target Position Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DeviceFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Device Fault  Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DeviceFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DeviceFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DeviceFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DeviceFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="MCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.MCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="OCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.OCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_St0" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to set device to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_St1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to set device to State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_St2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to set device to State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_St3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to set device to State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Acq" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Acq" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to reset shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_A" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output A to Device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_B" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output B to Device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_C" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output C to Device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_D" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output D to Device]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Sound audible prior to commanded energize/ state change]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Cmd" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Command 0=None, 1=State 0, 2=State 1, 3=State 2, 4=State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Sts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Confirmed Sts 0=Powerup/Reset, 1=State0, 2=State1, 3=State2, 4=State3, 9=Moving]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=None, 16=PositionFail, 17=DeviceFault, 32=I/OFault, 34=CfgErr]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object + channel (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Owner" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Object Owner ID (0=not owned)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_St0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device commanded to and confirmed in State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_St1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device commanded to and confirmed in State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_St2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device commanded to and confirmed in State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_St3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device commanded to and confirmed in State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Moving" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device not yet confirmed in commended state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Sound audible prior to commanded energize/ state change]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Available" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device available for control by automation (Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Bypass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Bypassable Interlocks and Permissives are Bypassed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_BypActive" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Interlock / Permissive Bypassing Active (Bypassed or Maintenance)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NotRdy" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready, see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_CfgErr" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Configuration Error]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_EqpFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: External Equipment Fault (Fault or Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device Failure (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Intlk" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Interlock Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_IOFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: I/O Fault (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_OoS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device is Out of Service]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_PrioSt0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Oper/Ext Priority State 0 Command Requires Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Perm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Permissive Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintByp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device has a Maintenance Bypass function active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=One or more Alarms Shelved, Disabled or Suppressed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Feeback Check timer preset (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Sim" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Simulation timer preset (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Hand" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Hand" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OoS" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OoS" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Maint" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Maint" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ovrd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ovrd" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ext" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ext" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Prog" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Prog" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgLocked" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Oper" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Oper" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OperLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OperLocked" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Normal" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Normal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ExtReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ExtReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_MAcqRcvd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_MAcqRcvd" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device failed to reach commended state]]>
</Description>
</Parameter>
<Parameter Name="Alm_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Device failed to reach commended state]]>
</Description>
</Parameter>
<Parameter Name="Ack_Fail" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to reach commanded state Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to reach commanded state Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to reach commanded state Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Fail.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to reach commanded state alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_DeviceFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault (from Inp_DeviceFault)]]>
</Description>
</Parameter>
<Parameter Name="Alm_DeviceFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_DeviceFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_DeviceFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_DeviceFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_DeviceFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DeviceFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Device commanded to State 0 by an Interlock NOT OK (one-shot)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Device set to State 0 by an Interlock NOT OK]]>
</Description>
</Parameter>
<Parameter Name="Ack_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Comm Fault Status (0=OK, 1=Bad)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="MRdy_Rel" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.MRdy_Rel" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="ORdy_Unlock" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.ORdy_Unlock" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="P_D4SD" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_OutDPulseT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Output D Pulse Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutCPulseT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Output C Pulse Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutBPulseT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Output B Pulse Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutAPulseT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Output A Pulse Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Bypassable Permissives and Interlocks are Bypassed flag]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ActState" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Actual State (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Fail" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Device Fail to reach commanded position]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[20,'Dev Position Failure'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="DeviceFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Device Fault from device via input]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[18,'Dev-Reported Fault$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="CmdSrc" DataType="P_CmdSrc" ExternalAccess="Read/Write">
<Description>
<![CDATA[Control / Command Source Selection]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7649,2048,0,1,0,[8,'P_CmdSrc$00$00$00$00'],[6,'RA-BAS$00$00']]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_CmdSrc">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_ExtInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasOper" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasOperLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProg" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProgLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasExt" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMaint" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasMOoS" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_OvrdOverLock" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_ExtOverLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgPwrUp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgNormal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdPriority" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdProgAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdLockAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ExtAcqAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_eSrc" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Sts_bSrc" DataType="INT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Sts_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Maint" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ext" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Oper" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_OperLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperSel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ExtReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_MAcqRcvd" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_CmdSrc" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IOFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'I/O Fault$00$00$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IntlkTrip" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,500,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Interlock Trip$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ONS" DataType="SINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[One-Shot Store Bits]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Out" DataType="SINT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Outputs (buffered) as a SINT for byte-wise operations]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FdbkState" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[State(s) of device as shown by feedbacks]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'P_D4SD$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['P_D4SD']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[15,'Discrete Device$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="15">
<![CDATA['Discrete Device']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[20,'Discrete 2, 3 or 4 S$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="20">
<![CDATA['Discrete 2, 3 or 4 S']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_St3Text" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_St2Text" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_St1Text" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[2,'On$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="2">
<![CDATA['On']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_St0Text" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[3,'Off$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="3">
<![CDATA['Off']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PermOK3" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Permissives are OK to go to state 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PermOK2" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Permissives are OK to go to state 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PermOK1" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Permissives are OK to go to state 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PermOK0" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Permissives are OK to go to state 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_TgtState" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Target device state as a number (0, 1, 2 or 3)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time "moving" before going to target pos. in simulation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FailT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Failure Check timer (time to reach target position)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NewCmd" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=A state command has been received (even for same state)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PrevTgt" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Previous Target State (last scan)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Type identifier for HMI navigation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'P_D4SD$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['P_D4SD']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Sts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Level and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NotRdy" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Device Not Ready conditions excluding shed latches]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NotRdy1" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Device Not Ready excluding only Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NoLongerSim" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Switched from Simulated to Real Device this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=At least one Alarm or latched Shed requires Reset or Ack]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=At least one Alarm or latched Shed requires Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_St3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_St3, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_St2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_St2, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_St1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_St1, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_St0" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_St0, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Check, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Bypass, enable HMI button]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to reset shed latches and cleared alarms, plus  Acknowledge alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to reset shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_St3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to set device to State 3]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_St2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to set device to State 2]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_St1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to set device to State 1]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_St0" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to set device to State 0]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Check Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Bypass Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHornT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer for audible alert or start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHorn" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Sound audible prior to commanded energize/ state change]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_TgtStateTmp" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Target device state as a number (0, 1, 2 or 3) stored, before audible alert]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_AfterHornONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_AfterHornONS2" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Out of Service is asserted; Outputs OFF; Device Status shown based on feedbacks if possible, but Alarms inhibited]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
Handle "Programmed Out of Servie" Selection using the standard
P_CmdSrc AOI (EnableInFalse Routine, false scan required!).

#####  V4.00.00  2018-07-16:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(EnableIn)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[First-Come First-Served Ownership Arbitration still needs to happen, even when device is disabled.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA["Lurking" Commands are cleared, as well as Program Reset.

#####  V4.00.00  2018-07-16:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(PCmd_St0) OTU(PCmd_St1) OTU(PCmd_St2) OTU(PCmd_St3) ,OTU(OCmd_St0) OTU(OCmd_St1) OTU(OCmd_St2) OTU(OCmd_St3) ,OTU(MCmd_Bypass) OTU(MCmd_Check) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[The Override Command is set to NONE.]]>
</Comment>
<Text>
<![CDATA[CLR(Inp_OvrdCmd);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-16:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_St0) OTU(ORdy_St1) OTU(ORdy_St2) OTU(ORdy_St3) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_Reset) OTU(ORdy_ResetAckAll) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Clear the latched Shed faults, and reset the output pulse, fault, and simulation timers.]]>
</Comment>
<Text>
<![CDATA[[RES(Wrk_OutAPulseT) RES(Wrk_OutBPulseT) RES(Wrk_OutCPulseT) RES(Wrk_OutDPulseT) ,RES(Wrk_FailT) RES(Wrk_SimT) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Outputs are cleared when Disabled.
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[CLR(Wrk_Out)OTU(Out_A)OTU(Out_B)OTU(Out_C)OTU(Out_D)OTU(Out_Horn)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Show the device as Out of Service and Not Ready, not Available, and with no
Maintenance Bypass breadcrumb.
Clear remaining Status bits.
Show the enumerated device command as NONE.
Show the enumerated device status as UNKNOWN.
Show the enumerated device fault status as NONE.

#####  V4.00.00  2018-07-16:  Disable/Enable and NoMode replaced by P_CmdSrc Out of Service (OoS).  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Sts_St0) OTU(Sts_St1) OTU(Sts_St2) OTU(Sts_St3) ,OTU(Sts_Moving) OTU(Sts_Available) OTU(Sts_MaintByp) OTL(Sts_NotRdy) ,OTU(Nrdy_CfgErr) OTU(Nrdy_EqpFault) OTU(Nrdy_Fail) OTU(Nrdy_Intlk) ,OTU(Nrdy_IOFault) OTL(Nrdy_OoS) OTU(Nrdy_PrioSt0) OTU(Nrdy_Perm) ,CLR(Val_Cmd) CLR(Val_Sts) CLR(Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[If the device is OFF-SCAN (rung is false or EnableIn is false in FBD),
then show the alarms as "Parent object out of service".
Show the overall acknowledgement status.

#####  V4.00.00  2018-07-16:  Changed P_Mode to P_CmdSrc, added Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(Fail.Inp_OoS) P_Alarm(Fail) ,OTL(DeviceFault.Inp_OoS) P_Alarm(DeviceFault) ,OTL(IntlkTrip.Inp_OoS) P_Alarm(IntlkTrip) ,OTL(IOFault.Inp_OoS) P_Alarm(IOFault) ,CLR(Val_Notify) CLR(Val_NotifyAll) ,[XIC(Fail.Val_Notify.0) ,XIC(DeviceFault.Val_Notify.0) ,XIC(IntlkTrip.Val_Notify.0) ,XIC(IOFault.Val_Notify.0) ] OTL(Val_Notify.0) OTL(Val_NotifyAll.0) ,[XIC(Fail.Sts_AlmInh) ,XIC(DeviceFault.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ] OTE(Sts_AlmInh) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(20,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[MOV(20,SrcQ);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan: control / monitor 2-, 3- or 4-State device]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_D4SD:  PROCESS -- DISCRETE 4-STATE DEVICE
============================================================
Revision 4.10.01 Release  2019-10-17:  See V4.10.xx Release Notes for details.
V2.x, V3.x Revision History archived.
V4.00.00  2018-07-16:  Changed "Mode" to "Command Source". Changed Inf_ items
to HMI_, and added Cfg_Area for security. Added unacked alarm count.
Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
Aligned ready bit naming with command bit names.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_AckReqd and Sts_ResetReqd for use by external objects.
Changed delay / time configuration items to REAL seconds.
V4.10.00  2019-03-08:  Changed availability to use input availability from interlocks.
Added audible alert on commanded energize/state change.
Added Inp_HornInh to disable Horn operation.
Modified logic to correct confgigurable shed action.
Updated to P_CmdSrc V4.10.00. Added Cfg_HasMoreObj.
V4.10.01  2019-10-17:  No changes, uprevved because P_CmdSrc 4.10.01 is used.
============================================================
This Instruction controls and monitors feedback from
a Discrete 2-State, 3-State or 4-State Device, and provides:

*  Operator and Program Commands to select one of the 2, 3 or 4 states
*  User-configurable text labels for the states
*  Per-State setting, clearing or holding of four user-configurable outputs
*  Per-State monitoring of four feedbacks (on, off or don't care) to confirm state
*  Detection of failure to reach the target state (when feedbacks are used)
*  Monitoring of Permissive conditions to allow commanding to each state
*  Monitoring of Interlock conditions to return device to State 0
*  Simulation, providing feedback of a working device while
      disabling output (keeping de-energized)
*  Monitoring of I/O communication status
*  Alarms for Fail to reach target state (if feedbacks are used), Device Failure
(reported by device using an input), Interlock Trip, I/O Fault
*  "Available" status for use by automation logic to know whether
     the device can be controlled by other objects.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, Program, External, Override, Maintenance, Out of
Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-16:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_Desc,Cfg_Label)LOWER(Cfg_Tag,Cfg_Area)LOWER(Cfg_St0Text,Cfg_St1Text)LOWER(Cfg_St2Text,Cfg_St3Text)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND SOURCE PROCESSING
============================================================
This rung handles received Command Source selection Inputs and Commands:

NOTE:  All Commands for Command Source and Alarm are aliased directly to the
corresponding Commands in the contained P_CmdSrc and P_Alarm AOIs.

#####  V4.00.00  2018-07-16:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[This rung handles simple First-Come First-Served Ownership Arbitration.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
These rungs check Configuration data (such as timer presets) and distribute as needed.
Note that some Configuration data are used directly in-place.

Clamp the number of device states to be 2, 3 or 4.]]>
</Comment>
<Text>
<![CDATA[[GRT(Cfg_NumStates,4) MOV(4,Cfg_NumStates) ,LES(Cfg_NumStates,2) MOV(2,Cfg_NumStates) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Enter the time (in seconds) for the device to successfully turn ON before declaring a fault.
Enter the time (in seconds) for the device to successfully turn OFF before declaring a fault.

If the timer preset calcuated wraps negative (more than 2.14... million seconds), then use a default
limit value and report Bad Configuration.  Note that a negative timer preset will fault the controller!!!

#####  V4.00.00  2018-07-16:  Changed delay / time configuration items to REAL seconds.  #####
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####
#####  Added Inp_HornInh to disable Horn operation.  #####]]>
</Comment>
<Text>
<![CDATA[[[MUL(Cfg_FailT,1000.0,Wrk_FailT.PRE) XIC(Wrk_FailT.PRE.31) MOV(2147483647,Wrk_FailT.PRE) ,MUL(Cfg_OutAPulseT,1000.0,Wrk_OutAPulseT.PRE) XIC(Wrk_OutAPulseT.PRE.31) CLR(Wrk_OutAPulseT.PRE) ,MUL(Cfg_OutBPulseT,1000.0,Wrk_OutBPulseT.PRE) XIC(Wrk_OutBPulseT.PRE.31) CLR(Wrk_OutBPulseT.PRE) ,MUL(Cfg_OutCPulseT,1000.0,Wrk_OutCPulseT.PRE) XIC(Wrk_OutCPulseT.PRE.31) CLR(Wrk_OutCPulseT.PRE) ,MUL(Cfg_OutDPulseT,1000.0,Wrk_OutDPulseT.PRE) XIC(Wrk_OutDPulseT.PRE.31) CLR(Wrk_OutDPulseT.PRE) ,MUL(Cfg_StartHornT,1000.0,Wrk_StartHornT.PRE) XIC(Wrk_StartHornT.PRE.31) CLR(Wrk_StartHornT.PRE) ] OTE(Err_Timer) ,[XIC(Inp_HornInh) ,GRT(Cfg_StartHornT,1000.0) CLR(Cfg_StartHornT) ] CLR(Wrk_StartHornT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Enter the time (in seconds) to echo back the desired state when running in simulation

Handle timer preset invalid values as above.]]>
</Comment>
<Text>
<![CDATA[MUL(Cfg_SimFdbkT,1000.0,Wrk_SimT.PRE)XIC(Wrk_SimT.PRE.31)MOV(0,Wrk_SimT.PRE)OTE(Err_Sim);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[This rung generates a summary Bad Config status, simply an OR of the individual bits provided above
(in the Configuration handling section).]]>
</Comment>
<Text>
<![CDATA[[XIC(Err_Timer) ,XIC(Err_Sim) ]OTE(Nrdy_CfgErr);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE FEEDBACK HANDLING
============================================================
If the feedbacks are in the positions required by State 0 (ignoring any
Don't Care Feedbacks), then the device COULD be in STATE 0.
(It IS in State 0 if it's being commanded there, but multiple
states COULD have the same feedback configuration!)]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) [XIC(Cfg_FdbkSt0Check.0) [XIC(Inp_FdbkA) XIC(Cfg_FdbkSt0State.0) ,XIO(Inp_FdbkA) XIO(Cfg_FdbkSt0State.0) ] ,XIO(Cfg_FdbkSt0Check.0) ] [XIC(Cfg_FdbkSt0Check.1) [XIC(Inp_FdbkB) XIC(Cfg_FdbkSt0State.1) ,XIO(Inp_FdbkB) XIO(Cfg_FdbkSt0State.1) ] ,XIO(Cfg_FdbkSt0Check.1) ] [XIC(Cfg_FdbkSt0Check.2) [XIC(Inp_FdbkC) XIC(Cfg_FdbkSt0State.2) ,XIO(Inp_FdbkC) XIO(Cfg_FdbkSt0State.2) ] ,XIO(Cfg_FdbkSt0Check.2) ] [XIC(Cfg_FdbkSt0Check.3) [XIC(Inp_FdbkD) XIC(Cfg_FdbkSt0State.3) ,XIO(Inp_FdbkD) XIO(Cfg_FdbkSt0State.3) ] ,XIO(Cfg_FdbkSt0Check.3) ] ,XIC(Inp_Sim) [XIC(Wrk_SimT.DN) ,EQU(Wrk_ActState,0) ] EQU(Wrk_TgtState,0) ]OTE(Wrk_FdbkState.0);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[If the feedbacks are in the positions required by State 1 (ignoring any
Don't Care Feedbacks), then the device COULD be in STATE 1.
(It IS in State 1 if it's being commanded there, but multiple
states COULD have the same feedback configuration!)]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) [XIC(Cfg_FdbkSt1Check.0) [XIC(Inp_FdbkA) XIC(Cfg_FdbkSt1State.0) ,XIO(Inp_FdbkA) XIO(Cfg_FdbkSt1State.0) ] ,XIO(Cfg_FdbkSt1Check.0) ] [XIC(Cfg_FdbkSt1Check.1) [XIC(Inp_FdbkB) XIC(Cfg_FdbkSt1State.1) ,XIO(Inp_FdbkB) XIO(Cfg_FdbkSt1State.1) ] ,XIO(Cfg_FdbkSt1Check.1) ] [XIC(Cfg_FdbkSt1Check.2) [XIC(Inp_FdbkC) XIC(Cfg_FdbkSt1State.2) ,XIO(Inp_FdbkC) XIO(Cfg_FdbkSt1State.2) ] ,XIO(Cfg_FdbkSt1Check.2) ] [XIC(Cfg_FdbkSt1Check.3) [XIC(Inp_FdbkD) XIC(Cfg_FdbkSt1State.3) ,XIO(Inp_FdbkD) XIO(Cfg_FdbkSt1State.3) ] ,XIO(Cfg_FdbkSt1Check.3) ] ,XIC(Inp_Sim) [XIC(Wrk_SimT.DN) ,EQU(Wrk_ActState,1) ] EQU(Wrk_TgtState,1) ]OTE(Wrk_FdbkState.1);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[If the feedbacks are in the positions required by State 2 (ignoring any
Don't Care Feedbacks), then the device COULD be in STATE 2.
(It IS in State 2 if it's being commanded there, but multiple
states COULD have the same feedback configuration!)]]>
</Comment>
<Text>
<![CDATA[GEQ(Cfg_NumStates,3)[XIO(Inp_Sim) [XIC(Cfg_FdbkSt2Check.0) [XIC(Inp_FdbkA) XIC(Cfg_FdbkSt2State.0) ,XIO(Inp_FdbkA) XIO(Cfg_FdbkSt2State.0) ] ,XIO(Cfg_FdbkSt2Check.0) ] [XIC(Cfg_FdbkSt2Check.1) [XIC(Inp_FdbkB) XIC(Cfg_FdbkSt2State.1) ,XIO(Inp_FdbkB) XIO(Cfg_FdbkSt2State.1) ] ,XIO(Cfg_FdbkSt2Check.1) ] [XIC(Cfg_FdbkSt2Check.2) [XIC(Inp_FdbkC) XIC(Cfg_FdbkSt2State.2) ,XIO(Inp_FdbkC) XIO(Cfg_FdbkSt2State.2) ] ,XIO(Cfg_FdbkSt2Check.2) ] [XIC(Cfg_FdbkSt2Check.3) [XIC(Inp_FdbkD) XIC(Cfg_FdbkSt2State.3) ,XIO(Inp_FdbkD) XIO(Cfg_FdbkSt2State.3) ] ,XIO(Cfg_FdbkSt2Check.3) ] ,XIC(Inp_Sim) [XIC(Wrk_SimT.DN) ,EQU(Wrk_ActState,2) ] EQU(Wrk_TgtState,2) ]OTE(Wrk_FdbkState.2);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If the feedbacks are in the positions required by State 3 (ignoring any
Don't Care Feedbacks), then the device COULD be in STATE 3.
(It IS in State 3 if it's being commanded there, but multiple
states COULD have the same feedback configuration!)]]>
</Comment>
<Text>
<![CDATA[GEQ(Cfg_NumStates,4)[XIO(Inp_Sim) [XIC(Cfg_FdbkSt3Check.0) [XIC(Inp_FdbkA) XIC(Cfg_FdbkSt3State.0) ,XIO(Inp_FdbkA) XIO(Cfg_FdbkSt3State.0) ] ,XIO(Cfg_FdbkSt3Check.0) ] [XIC(Cfg_FdbkSt3Check.1) [XIC(Inp_FdbkB) XIC(Cfg_FdbkSt3State.1) ,XIO(Inp_FdbkB) XIO(Cfg_FdbkSt3State.1) ] ,XIO(Cfg_FdbkSt3Check.1) ] [XIC(Cfg_FdbkSt3Check.2) [XIC(Inp_FdbkC) XIC(Cfg_FdbkSt3State.2) ,XIO(Inp_FdbkC) XIO(Cfg_FdbkSt3State.2) ] ,XIO(Cfg_FdbkSt3Check.2) ] [XIC(Cfg_FdbkSt3Check.3) [XIC(Inp_FdbkD) XIC(Cfg_FdbkSt3State.3) ,XIO(Inp_FdbkD) XIO(Cfg_FdbkSt3State.3) ] ,XIO(Cfg_FdbkSt3Check.3) ] ,XIC(Inp_Sim) [XIC(Wrk_SimT.DN) ,EQU(Wrk_ActState,3) ] EQU(Wrk_TgtState,3) ]OTE(Wrk_FdbkState.3);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[[MOV(-1,Wrk_ActState) ,XIC(Wrk_FdbkState.0) EQU(Wrk_TgtState,0) MOV(0,Wrk_ActState) ,XIC(Wrk_FdbkState.1) EQU(Wrk_TgtState,1) MOV(1,Wrk_ActState) ,XIC(Wrk_FdbkState.2) EQU(Wrk_TgtState,2) MOV(2,Wrk_ActState) ,XIC(Wrk_FdbkState.3) EQU(Wrk_TgtState,3) MOV(3,Wrk_ActState) ];]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[============================================================
INTERLOCK / PERMISSIVE BYPASS / CHECK COMMAND HANDLING
============================================================
The Bypass Command bypasses the Bypassable Permissives and Interlocks.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Bypass)OTU(MCmd_Bypass)OTL(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[The Check Command enables checking of ALL
Permissives and Interlocks (cancels the bypass).]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Check)OTU(MCmd_Check)OTU(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[If the internal Bypass flag is set, Bypassable Interlocks and Permissives ARE BYPASSED.
Bypassing is ACTIVE if Bypass selected OR in Maintenance,
or in Override if Override Bypassing is configured.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Bypass) OTE(Sts_Bypass) ,XIC(Sts_Maint) ,XIC(Sts_Ovrd) XIC(Cfg_OvrdPermIntlk) ]OTE(Sts_BypActive);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[If a Maintenance Bypass function is active, display the Maintenance Bypass
Indicator (triangle symbol) on the graphic symbol.  Bypass functions are:
*  Interlock / Permissive Bypass function is enabled]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_Bypass)OTE(Sts_MaintByp);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[Ready for Interlock / Permissive Bypass if not bypassed.
Ready to cancel Bypass (resume checking) if bypassed.]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_Bypass) OTE(MRdy_Bypass) ,XIC(Wrk_Bypass) OTE(MRdy_Check) ];]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

This rung processes received Reset Commands from:

1.  The Operator via HMI Operator Command, or
2.  Higher-level strategies via Program Command
3.  Pushbuttons or other block via Input
4.  Resets initiated by other device Operator Commands (if configured to do so)

and forwards the Reset to ALL Alarms and latched Shed conditions.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(XCmd_Reset) OTU(XCmd_Reset) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ,[XIC(OCmd_St0) XIC(Wrk_PermOK0) ,XIC(OCmd_St1) XIC(Wrk_PermOK1) ,GEQ(Cfg_NumStates,3) XIC(OCmd_St2) XIC(Wrk_PermOK2) ,GEQ(Cfg_NumStates,4) XIC(OCmd_St3) XIC(Wrk_PermOK3) ] XIC(Cfg_OCmdResets) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,[XIC(XCmd_St0) XIC(Wrk_PermOK0) ,XIC(XCmd_St1) XIC(Wrk_PermOK1) ,GEQ(Cfg_NumStates,3) XIC(XCmd_St2) XIC(Wrk_PermOK2) ,GEQ(Cfg_NumStates,4) XIC(XCmd_St3) XIC(Wrk_PermOK3) ] XIC(Cfg_XCmdResets) XIC(Sts_Ext) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(PCmd_FailAck) ,OTL(PCmd_DeviceFaultAck) ,OTL(PCmd_IntlkTripAck) ,OTL(PCmd_IOFaultAck) ] ][OTL(Fail.PCmd_Reset) OTL(DeviceFault.PCmd_Reset) ,OTL(IntlkTrip.PCmd_Reset) OTL(IOFault.PCmd_Reset) ,XIC(Sts_Fail) RES(Wrk_FailT) ,OTU(Nrdy_PrioSt0) OTU(Nrdy_Fail) ,[XIO(Inp_IOFault) ,XIC(Inp_Sim) ] OTU(Nrdy_IOFault) ,[XIO(Inp_DeviceFault) ,XIC(Inp_Sim) ] OTU(Nrdy_EqpFault) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE COMMAND HANDLING
============================================================
The rungs in this section handle commands for this Device, received
in Operator, Program, Override and Maintenance.
(Hand command source is handled separately, below.

For a command to any state, permissives for that state must be OK.]]>
</Comment>
<Text>
<![CDATA[[[XIC(Inp_PermOK0) ,XIC(Sts_BypActive) ] XIC(Inp_NBPermOK0) OTE(Wrk_PermOK0) ,[XIC(Inp_PermOK1) ,XIC(Sts_BypActive) ] XIC(Inp_NBPermOK1) OTE(Wrk_PermOK1) ,[XIC(Inp_PermOK2) ,XIC(Sts_BypActive) ] XIC(Inp_NBPermOK2) OTE(Wrk_PermOK2) ,[XIC(Inp_PermOK3) ,XIC(Sts_BypActive) ] XIC(Inp_NBPermOK3) OTE(Wrk_PermOK3) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[The Device is READY to change state unless:
the device is disabled,
there is an error in device configuration,
interlocks are not OK,
permissives are not OK (for any move),
or there is any latched shed fault.
Shed faults include:
failure to reach target position, and,
if not in simulation, a device-reported fault or I/O fault.

#####  V4.00.00  2018-07-16:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_OoS) OTE(Nrdy_OoS) ,XIC(Nrdy_CfgErr) ,[XIO(Inp_IntlkOK) XIO(Sts_BypActive) ,XIO(Inp_NBIntlkOK) ] [NEQ(Wrk_TgtState,0) OTE(Sts_IntlkTrip) ,OTE(Nrdy_Intlk) ] ,XIO(Inp_Sim) [XIC(Inp_DeviceFault) OTE(Sts_DeviceFault) XIC(Cfg_ShedOnDeviceFault) OTL(Nrdy_EqpFault) ,XIC(Inp_IOFault) OTE(Sts_IOFault) XIC(Cfg_ShedOnIOFault) OTL(Nrdy_IOFault) ] ]OTE(Wrk_NotRdy);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[The Device is READY to change state unless:
the device is disabled,
there is an error in device configuration,
interlocks are not OK,
permissives are not OK (for any move),
or there is any latched shed fault.
Shed faults include:
failure to reach target position, and,
if not in simulation, a device-reported fault or I/O fault.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_NotRdy) ,XIC(Nrdy_PrioSt0) ,XIC(Nrdy_Fail) ,XIC(Nrdy_EqpFault) ,XIC(Nrdy_IOFault) ]OTE(Wrk_NotRdy1);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[[XIC(Wrk_NotRdy1) ,[EQU(Wrk_TgtState,0) XIO(Wrk_PermOK1) [XIO(Wrk_PermOK2) ,LES(Cfg_NumStates,3) ] [XIO(Wrk_PermOK3) ,LES(Cfg_NumStates,4) ] ,EQU(Wrk_TgtState,1) XIO(Wrk_PermOK0) [XIO(Wrk_PermOK2) ,LES(Cfg_NumStates,3) ] [XIO(Wrk_PermOK3) ,LES(Cfg_NumStates,4) ] ,EQU(Wrk_TgtState,2) XIO(Wrk_PermOK0) XIO(Wrk_PermOK1) [XIO(Wrk_PermOK3) ,LES(Cfg_NumStates,4) ] ,EQU(Wrk_TgtState,3) XIO(Wrk_PermOK0) XIO(Wrk_PermOK1) [XIO(Wrk_PermOK2) ,LES(Cfg_NumStates,3) ] ] OTE(Nrdy_Perm) ]OTE(Sts_NotRdy);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[If the device isn't "not ready" (it IS ready) and it's in Program,
then it is AVAILABLE to be controlled by automation (Program logic).
#####  V4.10.00  2019-03-08:  Changed availability to use input availability from interlocks.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_Prog)XIO(Nrdy_OoS)XIO(Nrdy_CfgErr)XIO(Nrdy_PrioSt0)XIO(Nrdy_Fail)XIO(Nrdy_EqpFault)XIO(Nrdy_IOFault)XIO(Nrdy_Perm)[[XIC(Inp_IntlkOK) ,XIC(Sts_BypActive) ] XIC(Inp_NBIntlkOK) ,XIC(Inp_IntlkAvail) ]OTE(Sts_Available);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[If a Device STATE 0 command is received in Operator, Program or Maintenance,
or if in Override and the Override State is STATE 0
mark the Device Target State as STATE 0.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_St0) OTU(OCmd_St0) [XIC(Sts_Oper) ,XIC(Sts_Maint) ,XIC(Cfg_OperSt0Prio) XIO(Sts_Oper) XIO(Sts_Maint) OTL(Nrdy_PrioSt0) ] ,XIC(XCmd_St0) OTU(XCmd_St0) [XIC(Sts_Ext) ,XIC(Cfg_ExtSt0Prio) XIO(Sts_Ext) OTL(Nrdy_PrioSt0) ] ,XIC(PCmd_St0) OTU(PCmd_St0) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,1) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]NEQ(Wrk_ActState,0)XIC(Wrk_PermOK0)XIO(Sts_NotRdy)[ONS(Wrk_ONS.0) OTL(Wrk_NewCmd) ,CLR(Wrk_TgtStateTmp) ];]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[If a Device STATE 1 command is received in Operator, Program or Maintenance,
or if in Override and the Override State is STATE 1
mark the Device Target State as STATE 1.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_St1) OTU(OCmd_St1) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,XIC(XCmd_St1) OTU(XCmd_St1) XIC(Sts_Ext) ,XIC(PCmd_St1) OTU(PCmd_St1) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,2) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]NEQ(Wrk_ActState,1)XIC(Wrk_PermOK1)XIO(Sts_NotRdy)[ONS(Wrk_ONS.1) OTL(Wrk_NewCmd) ,MOV(1,Wrk_TgtStateTmp) ];]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[If a Device STATE 2 command is received in Operator, Program or Maintenance,
or if in Override and the Override State is STATE 2
mark the Device Target State as STATE 2.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_St2) OTU(OCmd_St2) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,XIC(XCmd_St2) OTU(XCmd_St2) XIC(Sts_Ext) ,XIC(PCmd_St2) OTU(PCmd_St2) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,3) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]GEQ(Cfg_NumStates,3)NEQ(Wrk_ActState,2)XIC(Wrk_PermOK2)XIO(Sts_NotRdy)[ONS(Wrk_ONS.2) OTL(Wrk_NewCmd) ,MOV(2,Wrk_TgtStateTmp) ];]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[If a Device STATE 3 command is received in Operator, Program or Maintenance,
or if in Override and the Override State is STATE 3
mark the Device Target State as STATE 3.

######  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_St3) OTU(OCmd_St3) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,XIC(XCmd_St3) OTU(XCmd_St3) XIC(Sts_Ext) ,XIC(PCmd_St3) OTU(PCmd_St3) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,4) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]GEQ(Cfg_NumStates,4)NEQ(Wrk_ActState,3)XIC(Wrk_PermOK3)XIO(Sts_NotRdy)[ONS(Wrk_ONS.3) OTL(Wrk_NewCmd) ,MOV(3,Wrk_TgtStateTmp) ];]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[Set Start Horn on Commanded Change
Remove Siren Request When not Ready (even if permissives fall away)

#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_NewCmd) [XIC(Cfg_HornOnChange) ,EQU(Wrk_ActState,0) ] OTL(Wrk_StartHorn) ,XIC(Sts_NotRdy) OTU(Wrk_StartHorn) ];]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[Only after autible alert do we allow commanded stated to become the target state

#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_StartHorn) ONS(Wrk_AfterHornONS) ,XIC(Wrk_NewCmd) XIO(Cfg_HornOnChange) NEQ(Wrk_ActState,0) ONS(Wrk_AfterHornONS2) ]MOV(Wrk_TgtStateTmp,Wrk_TgtState);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[Highest Priority: HAND always wins:
If in Hand, have the device follow the feedback as closely as possible.
"As closely as possible" means:

* If the feedbacks match a unique state, set the device target to that state
(first four branches).

* If the feedbacks are NOT unique, then:
-  if the feedback for the current state is made or no feedbacks are made, stay in the current state
(no action, so no branch for this condition)

-  if multiple feedbacks are made but not the one for the current state, go to the lowest-numbered
state of the feedbacks that are made (bottom branch and its nested branches).
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Hand) ,XIO(Inp_Sim) ONS(Wrk_NoLongerSim) ,XIC(S:FS) ]OTU(Wrk_StartHorn)[EQU(Wrk_FdbkState,8) MOV(3,Wrk_TgtState) ,EQU(Wrk_FdbkState,4) MOV(2,Wrk_TgtState) ,EQU(Wrk_FdbkState,2) MOV(1,Wrk_TgtState) ,EQU(Wrk_FdbkState,1) MOV(0,Wrk_TgtState) ,NEQ(Wrk_FdbkState,1) NEQ(Wrk_FdbkState,2) NEQ(Wrk_FdbkState,4) NEQ(Wrk_FdbkState,8) [XIO(Wrk_FdbkState.0) ,NEQ(Wrk_TgtState,0) ] [XIO(Wrk_FdbkState.1) ,NEQ(Wrk_TgtState,1) ] [XIO(Wrk_FdbkState.2) ,NEQ(Wrk_TgtState,2) ,GEQ(Cfg_NumStates,3) ] [XIO(Wrk_FdbkState.3) ,NEQ(Wrk_TgtState,3) ,GEQ(Cfg_NumStates,4) ] [GEQ(Cfg_NumStates,3) XIC(Wrk_FdbkState.2) MOV(2,Wrk_TgtState) ,XIC(Wrk_FdbkState.1) MOV(1,Wrk_TgtState) ,XIC(Wrk_FdbkState.0) MOV(0,Wrk_TgtState) ] ]MOV(Wrk_TgtState,Wrk_PrevTgt);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[============================================================
SIMULATION AND FAIL TIMERS
============================================================
These rungs have the timers that are based on the determined output state.

This rung has the OFF state timers.
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[NEQ(Wrk_ActState,Wrk_TgtState)XIO(Wrk_StartHorn)[TON(Wrk_FailT,?,?) ,TON(Wrk_SimT,?,?) ];]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE FAIL TO REACH COMMANDED STATE DETECTION
============================================================
Run a Failure timer if the device is not in the commanded state.
If the timer times out, show the device as Failed to Reach Target State and raise an Alarm.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_FailT.DN)XIO(Sts_Maint)OTE(Sts_Fail);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[============================================================
SHED ON FAULT LOGIC
============================================================
This rung handles latching in of conditions which are configured to cause
device to shed (to State 0 or to de-energized -- see Cfg_St0onShed).]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_Fail)XIC(Cfg_ShedOnFail)OTL(Nrdy_Fail);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[If a shed condition is latched in above, set the device to State 0.
#####  V4.10.00  2019-03-08:  Modified logic to correct confgigurable shed action.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Nrdy_Fail) ,XIC(Nrdy_EqpFault) ,XIC(Nrdy_IOFault) ,XIC(Nrdy_Intlk) ,XIC(Nrdy_CfgErr) ,XIC(Nrdy_OoS) ]XIC(Cfg_St0onShed)CLR(Wrk_TgtState);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[Sound the horn when energising

#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_StartHorn) TON(Wrk_StartHornT,?,?) TON(Wrk_StartHornT,?,?) ,XIC(Wrk_StartHornT.DN) OTU(Wrk_StartHorn) ];]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE COMMAND ENUMERATED VALUE
============================================================
Val_Cmd is the command currently being processed:
0 = None
1 = State 0
2 = State 1
3 = State 2
4 = State 3]]>
</Comment>
<Text>
<![CDATA[[EQU(Wrk_ActState,Wrk_TgtState) CLR(Val_Cmd) ,NEQ(Wrk_ActState,Wrk_TgtState) [EQU(Wrk_TgtState,0) [[XIC(Nrdy_Fail) ,XIC(Nrdy_EqpFault) ,XIC(Nrdy_IOFault) ] XIC(Cfg_St0onShed) ,XIO(Wrk_StartHorn) ] MOV(1,Val_Cmd) ,EQU(Wrk_TgtState,1) XIO(Wrk_StartHorn) MOV(2,Val_Cmd) ,EQU(Wrk_TgtState,2) XIO(Wrk_StartHorn) MOV(3,Val_Cmd) ,EQU(Wrk_TgtState,3) XIO(Wrk_StartHorn) MOV(4,Val_Cmd) ] ];]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[============================================================
OUTPUT GENERATION
============================================================
These rungs set, clear, or don't touch the outputs for the current commanded state.

Outputs for State 0
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)EQU(Wrk_TgtState,0)[XIC(Wrk_NewCmd) ,NEQ(Wrk_TgtState,Wrk_PrevTgt) ]XIO(Wrk_StartHorn)MVM(Cfg_OutSt0State,Cfg_OutSt0Write,Wrk_Out);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[Outputs for State 1
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)EQU(Wrk_TgtState,1)[XIC(Wrk_NewCmd) ,NEQ(Wrk_TgtState,Wrk_PrevTgt) ]XIO(Wrk_StartHorn)MVM(Cfg_OutSt1State,Cfg_OutSt1Write,Wrk_Out);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[Outputs for State 2
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)EQU(Wrk_TgtState,2)[XIC(Wrk_NewCmd) ,NEQ(Wrk_TgtState,Wrk_PrevTgt) ]XIO(Wrk_StartHorn)MVM(Cfg_OutSt2State,Cfg_OutSt2Write,Wrk_Out);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[Outputs for State 3
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)EQU(Wrk_TgtState,3)[XIC(Wrk_NewCmd) ,NEQ(Wrk_TgtState,Wrk_PrevTgt) ]XIO(Wrk_StartHorn)MVM(Cfg_OutSt3State,Cfg_OutSt3Write,Wrk_Out);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_StartHorn)OTU(Wrk_NewCmd)MOV(Wrk_TgtState,Wrk_PrevTgt);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[For each Output that has a non-zero Pulse Time configuration,
turn off the output after it's been on for the Pulse Time.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Out.0) NEQ(Wrk_OutAPulseT.PRE,0) TON(Wrk_OutAPulseT,?,?) ,XIC(Wrk_OutAPulseT.DN) OTU(Wrk_Out.0) ,XIC(Wrk_Out.1) NEQ(Wrk_OutBPulseT.PRE,0) TON(Wrk_OutBPulseT,?,?) ,XIC(Wrk_OutBPulseT.DN) OTU(Wrk_Out.1) ,XIC(Wrk_Out.2) NEQ(Wrk_OutCPulseT.PRE,0) TON(Wrk_OutCPulseT,?,?) ,XIC(Wrk_OutCPulseT.DN) OTU(Wrk_Out.2) ,XIC(Wrk_Out.3) NEQ(Wrk_OutDPulseT.PRE,0) TON(Wrk_OutDPulseT,?,?) ,XIC(Wrk_OutDPulseT.DN) OTU(Wrk_Out.3) ];]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[If the device is in Simulation, or if a fault causes the device
to shed and Shed to State 0 is NOT configured, turn off the outputs.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_Sim)CLR(Wrk_Out);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Comment>
<![CDATA[This rung copies the output bits from the internal SINT (used for
doing byte-wise updates above) to the four individual BOOL (bit) Outputs.

(NOTE:  These are copeid rather than aliased because the Wrk_Out bits are
only written as needed.  Buffering keeps writes to Out_A, etc., from
affecting the internal state of the instruction instance.)
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Out.0) OTE(Out_A) ,XIC(Wrk_Out.1) OTE(Out_B) ,XIC(Wrk_Out.2) OTE(Out_C) ,XIC(Wrk_Out.3) OTE(Out_D) ,XIC(Wrk_StartHorn) OTE(Out_Horn) ];]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE STATUS GENERATION
============================================================
This rung generates the Device positon status bits.
#####  V4.10.00  2019-03-08:  Added Horn Status.  #####]]>
</Comment>
<Text>
<![CDATA[[EQU(Wrk_ActState,-1) OTE(Sts_Moving) ,EQU(Wrk_ActState,0) OTE(Sts_St0) ,EQU(Wrk_ActState,1) OTE(Sts_St1) ,EQU(Wrk_ActState,2) OTE(Sts_St2) ,EQU(Wrk_ActState,3) OTE(Sts_St3) ,XIC(Wrk_StartHorn) OTE(Sts_Horn) ];]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Comment>
<![CDATA[============================================================
OPERATOR COMMAND READIES
============================================================
If the device is in Operator or Maintenance, and if it is NOT "not ready",
then it is ready to go to any state it's not already going to, IF the
Permissives for that state are OK (accounting for bypassing).

#####  V4.00.00  2018-07-16:  Aligned ready bit naming with command bit names.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_NotRdy)XIO(Nrdy_Perm)[XIO(Sts_NotRdy) ,XIC(Cfg_OCmdResets) ][[XIC(Sts_Oper) ,XIC(Sts_Maint) ,XIC(Cfg_OperSt0Prio) ] XIO(Sts_St0) XIC(Wrk_PermOK0) OTE(ORdy_St0) ,[XIC(Sts_Oper) ,XIC(Sts_Maint) ] [XIO(Sts_St1) XIC(Wrk_PermOK1) OTE(ORdy_St1) ,GEQ(Cfg_NumStates,3) XIO(Sts_St2) XIC(Wrk_PermOK2) OTE(ORdy_St2) ,GEQ(Cfg_NumStates,4) XIO(Sts_St3) XIC(Wrk_PermOK3) OTE(ORdy_St3) ] ];]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
The various alarms are ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1), EXCEPT:
* If every implemented state DOES NOT CHECK ANY FEEDBACKS, the Fail
alarm will never occur and should not exist.  (If any state checks feedbacks,
the Fail alarm must be allowed to exist.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(DeviceFault.PCfg_AllowExist) OTL(IntlkTrip.PCfg_AllowExist) OTL(IOFault.PCfg_AllowExist) ,[NEQ(Cfg_FdbkSt0Check,0) ,NEQ(Cfg_FdbkSt0Check,0) ,GEQ(Cfg_NumStates,3) NEQ(Cfg_FdbkSt2Check,0) ,EQU(Cfg_NumStates,4) NEQ(Cfg_FdbkSt3Check,0) ] OTE(Fail.PCfg_AllowExist) ];]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Comment>
<![CDATA[Let the Alarm instance know if this object is taken Out of Service

#####  V4.00.00  2018-07-16:  Now using P_CmdSrc, including Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(CmdSrc.Sts_OoS)OTE(Fail.Inp_OoS)OTE(DeviceFault.Inp_OoS)OTE(IntlkTrip.Inp_OoS)OTE(IOFault.Inp_OoS);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Comment>
<![CDATA[Handle Device Failed to Reach Position Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(Fail);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Comment>
<![CDATA[Handle Device-Reported Fault Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(DeviceFault);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Comment>
<![CDATA[Handle Interlock Trip Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IntlkTrip);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Comment>
<![CDATA[Handle I/O Fault Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IOFault);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).]]>
</Comment>
<Text>
<![CDATA[[XIC(Fail.Sts_AlmInh) ,XIC(DeviceFault.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[This rung generates a summary Bad Config status, simply an OR of the individual bits provided above
(in the Configuration handling section).]]>
</Comment>
<Text>
<![CDATA[[XIC(Nrdy_CfgErr) ,[XIC(Fail.Sts_Err) ,XIC(DeviceFault.Sts_Err) ,XIC(IntlkTrip.Sts_Err) ,XIC(IOFault.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Comment>
<![CDATA[This rung generates the enumerated Device Status:
0 = Powerup / Unknown
1=Confirmed in State 0
2 = Confirmed in State 1
3 = Confirmed in State 2
4 = Confirmed in State 3
5 = Moving to new target State
10 = Horn

And this rung generates the enumerated Device Fault Status:
0 = none
16 = Failed to reach commanded position
17 = Device Fail (from input)
32 = I/O Fault
34 = Config Error

#####  V4.00.00  2018-07-16:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  V4.10.00  2019-03-08:  Added Horn Status.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_St0) MOV(1,Wrk_Sts) ,XIC(Sts_St1) MOV(2,Wrk_Sts) ,XIC(Sts_St2) MOV(3,Wrk_Sts) ,XIC(Sts_St3) MOV(4,Wrk_Sts) ,XIC(Sts_Moving) MOV(9,Wrk_Sts) ,XIC(Sts_Horn) MOV(10,Wrk_Sts) ,XIC(Nrdy_Fail) MOV(16,Wrk_Fault) ,XIC(Nrdy_EqpFault) MOV(17,Wrk_Fault) ,[XIC(Sts_IOFault) ,XIC(Nrdy_IOFault) ] MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration.]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_SrcQ) ,EQU(Cfg_FdbkSt0Check,0) EQU(Cfg_FdbkSt1Check,0) [EQU(Cfg_FdbkSt1Check,0) ,LES(Cfg_NumStates,3) ] [EQU(Cfg_FdbkSt2Check,0) ,LES(Cfg_NumStates,4) ] MOV(2,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(9,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[MOV(SrcQ_IO,SrcQ);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-07-16:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) ,GRT(Fail.Val_Notify,Wrk_Notify) MOV(Fail.Val_Notify,Wrk_Notify) ,GRT(DeviceFault.Val_Notify,Wrk_Notify) MOV(DeviceFault.Val_Notify,Wrk_Notify) ,GRT(IntlkTrip.Val_Notify,Wrk_Notify) MOV(IntlkTrip.Val_Notify,Wrk_Notify) ,GRT(IOFault.Val_Notify,Wrk_Notify) MOV(IOFault.Val_Notify,Wrk_Notify) ,[XIC(Fail.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(DeviceFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IntlkTrip.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IOFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTE(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_Notify,Val_NotifyAll) MOV(Wrk_UnackAlmC,Val_UnackAlmC) ];]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-07-16:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_AckReqd and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Fail.Sts_RdyAck) ,XIC(DeviceFault.Sts_RdyAck) ,XIC(IntlkTrip.Sts_RdyAck) ,XIC(IOFault.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(Fail.Sts_RdyReset) ,XIC(DeviceFault.Sts_RdyReset) ,XIC(IntlkTrip.Sts_RdyReset) ,XIC(IOFault.Sts_RdyReset) ,XIC(Nrdy_PrioSt0) ,XIC(Nrdy_Fail) ,XIC(Nrdy_EqpFault) XIO(Sts_DeviceFault) ,XIC(Nrdy_IOFault) XIO(Sts_IOFault) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear Ownership, clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, set the Ownership to NO OWNER (0).]]>
</Comment>
<Text>
<![CDATA[CLR(PSet_Owner)CLR(Val_Owner);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA["Lurking" Commands not handled elsewhere are cleared.

#####  V4.00.00  2018-07-16:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(OCmd_St0) OTU(OCmd_St1) OTU(OCmd_St2) OTU(OCmd_St3) ,OTU(XCmd_St0) OTU(XCmd_St1) OTU(XCmd_St2) OTU(XCmd_St3) ,OTU(PCmd_St0) OTU(PCmd_St1) OTU(PCmd_St2) OTU(PCmd_St3) ,CLR(Inp_OvrdCmd) ,OTU(Wrk_NewCmd) OTU(MCmd_Bypass) OTU(MCmd_Check) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-16:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_St0) OTU(ORdy_St1) OTU(ORdy_St2) OTU(ORdy_St3) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_Reset) OTU(ORdy_ResetAckAll) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Clear the latched Shed faults.]]>
</Comment>
<Text>
<![CDATA[OTU(Nrdy_PrioSt0)OTU(Nrdy_Fail)OTU(Nrdy_EqpFault)OTU(Nrdy_IOFault);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Outputs are cleared on Prescan.
#####  V4.10.00  2019-03-08:  Added audible alert on commanded energize/state change.  #####]]>
</Comment>
<Text>
<![CDATA[CLR(Wrk_Out)OTU(Out_A)OTU(Out_B)OTU(Out_C)OTU(Out_D)OTU(Out_Horn)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Show the enumerated device command as NONE.
Show the enumerated device status as POWERUP / UNKNOWN.]]>
</Comment>
<Text>
<![CDATA[CLR(Val_Cmd)CLR(Val_Sts);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_DIn" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2004-09-26T01:40:40.210Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:11:20.775Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Discrete Input]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This instruction monitors a discrete (1 / 0) input and checks for alarm conditions.

The Inp_Gate input must be set (=1, its default value) and the alarm enabled for
the Target Disagree alarm to occur.  This alarm will not occur until the Inp_Gate
input has been set for the Gate Delay (Cfg_GateDly) time.  The Gate is used to
enable the alarm when some other condition is true; for example, a high vibration
switch should only generate a Target Disagree alarm when the associated motor
has been running long enough to stabilize.

The Target Disagree alarm is generated when the Inp_PV (process variable)
input is different from the Inp_Target (target) input.  The Target indicates the
"normal" condition.  For example, a flow switch should indicate flow when a
pump is running and should not indicate flow when a pump is stopped.  The
pump run status is used as the Target input, and when the switch does not
match the target (within the allotted time), the Target Disagree Alarm (e.g.,
Flow Switch Failure) is generated.

NOTE: the Inp_PV is inverted when the rung condition is false -- this allows the
input to be a condition on the rung with P_DIn rather than mapped into Inp_PV.
See P_DIn reference manual for details.

This instruction includes a substitute PV capability for a manually-entered state.
This may be useful when a sensor is out for repair or for simulation and testing.

Alarms are provided by P_Alarm AOI instances.
Target Disagree Status gating provided by a P_Gate AOI instance.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-01)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added notify and unack count rollup for Channel object.
* Added I/O Fault alarm.
* Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by external objects.
* Changed delay time configuration items to REAL seconds.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_PV" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal (process variable) from Sensor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Comm Status or Quality 1=Bad, 0=OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PVNotify" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Related PV object alarm prio and ack status (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Target" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target State of Input (Disagree Status if not in Target State)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Gate" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagreeGate.Inp_Gate" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Gate Condition (=1 to enable Disagree Status)]]>
</Description>
</Parameter>
<Parameter Name="Inp_Sim" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Use simulated PV (Set_SimPV); 0=Use Input (Inp_PV)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset Alarm requiring reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_NoSubstPV" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Disallow selection of Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_NormTextVis" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Display state text in "normal" state (= target), 0=hide (some HMI objects)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasTgtDisagreeAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_TgtDisagreeResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm is latched in, requires Reset Command to clear]]>
</Description>
</Parameter>
<Parameter Name="Cfg_TgtDisagreeAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm must be acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIOFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm is latched in, requires Reset Command to clear]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm must be acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Cfg_TgtDisagreeSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target Disagree Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target Disagree Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_Debounce" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time Input Sts must maintain state (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_GateDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="TgtDisagreeGate.Cfg_GateDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time Inp_Gate must be true before Disagree Status is checked (sec)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_TgtDisagreeOnDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="TgtDisagreeGate.Cfg_OnDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time for Input to disagree with Target to raise Status (sec)]]>
</Description>
</Parameter>
<Parameter Name="Cfg_TgtDisagreeOffDly" TagType="Alias" Usage="Input" Radix="Float" AliasFor="TgtDisagreeGate.Cfg_OffDly" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum time for Input to agree with Target to clear Status (sec)]]>
</Description>
</Parameter>
<Parameter Name="Set_SimPV" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[PV used in Simulation (Inp_Sim=1)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset all latched Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_TgtDisagreeAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge the Target Disagree Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_TgtDisagreeSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress the Target Disagree Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_TgtDisagreeUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress the Target Disagree Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_TgtDisagreeUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="TgtDisagree.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve the Target Disagree Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge the I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress the I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress the I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve the I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Sts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Confirmed Sts 0=PV Good, 6=PV Bad, 7=Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=none, 16=Tgt Disagree, 32=I/O comms., 34=CfgErr]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Level and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Discrete Input Status (incl. Debounce, Manual Override, if used)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PV" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Discrete Input Status (actual, not subject to Override)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_SubstPV" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Using Substitute PV (Input being overridden)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_InpPV" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Using Input PV (normal)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PVBad" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Input Comm Status/ Quality (0=OK, 1=Bad)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintByp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device has a Maintenance Bypass function active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=One or more Alarms Shelved, Disabled or Suppressed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Invalid Timer Preset (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_TgtDisagreeCmp" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagreeGate.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input vs. Target comparicon result 1=Disagree]]>
</Description>
</Parameter>
<Parameter Name="Sts_TgtDisagreeGate" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagreeGate.Sts_Gate" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Target Disagree Gate Delay Status, 1=done]]>
</Description>
</Parameter>
<Parameter Name="Sts_TgtDisagree" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Input is not in Target state]]>
</Description>
</Parameter>
<Parameter Name="Alm_TgtDisagree" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Input is not in Target state]]>
</Description>
</Parameter>
<Parameter Name="Ack_TgtDisagree" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_TgtDisagreeDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_TgtDisagreeShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_TgtDisagreeSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="TgtDisagree.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Target Disagree Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Input communication fault (Inp_IOFault = 1)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Input communication fault]]>
</Description>
</Parameter>
<Parameter Name="Ack_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="P_DIn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_DIn$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_DIn']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[14,'Discrete Input$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="14">
<![CDATA['Discrete Input']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[14,'Discrete Input$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="14">
<![CDATA['Discrete Input']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Status" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Status (after Manual Override selection)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TgtDisagree" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target Disagree Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,750,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'Target Disagree$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="750"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FallT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer to ensure Status LOW time on falling edge]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RiseT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer to ensure Status HIGH time on rising edge]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal flag: Using Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_1StText" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in PV=1 State]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[2,'On$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="2">
<![CDATA['On']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_0StText" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Text to display in PV=0 State]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[3,'Off$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="3">
<![CDATA['Off']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Sts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_DIn$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_DIn']]>
</DefaultData>
</LocalTag>
<LocalTag Name="TgtDisagreeGate" DataType="P_Gate" ExternalAccess="Read/Write">
<Description>
<![CDATA[Target Disagree Condition Gate/Delay]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],[0,0,0],[0,0,0],[15,'Target Disagree$00$00$00$00$00'],[6,'RA-BAS$00$00$00$00$00$00'],[6,'P_Gate$00$00$00$00$00$00$00$00$00$00'],[16,'Gating Condition$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Gate">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Gate" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_GateDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OnDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_OffDly" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Gate" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Gate" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object only (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="IOFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,480,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'Alarm Condition$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="480"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset and Acknowledge all Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset all latched Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_InpPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to use Input PV (normal)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to use Substitute PV (override input)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_ResetAckAll (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_InpPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_InpPV (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_SubstPV (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MSet_SubstPV" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance-Entered Substitute PV]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ErrDebounce" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Error in Debounce Timer configuration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Same as main Logic routine, except Inp is inverted (for use in LD logic)]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
ENABLE_IN_FALSE ROUTINE
============================================================
This logic is identical to the main LOGIC Routine, except that the
Inp_PV signal is inverted (Rung 6).  This is to support Ladder Diagram
instances of the form:    XIC (discrete input)   P_DIn (P_DIn Tag)
============================================================
POWERUP / INVALID STATE HANDLING
============================================================
All internal Work (state) bits maintain states through a power cycle and are
independent.  No Powerup / Invalid State Handling logic is required.
============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands:

NOTE:  Operator Commands for P_Alarm are sent directly to the contained AOI.

MCmd_SubstPV: Maintenance Command to select Maintenance-entered substitute PV

Do not allow this Command if Cfg_NoSubstPV is set.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_SubstPV)OTU(MCmd_SubstPV)XIO(Cfg_NoSubstPV)OTL(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[MCmd_InpPV: Maintenance Command to cancel Substitute PV and return to Live Input PV.]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_InpPV) OTU(MCmd_InpPV) ,XIC(Cfg_NoSubstPV) ]OTU(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Show the Substitute / Input PV Status, and if Substitute PV
is selected, show the Maintenance Bypass breadcrumb.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_SubstPV) OTE(Sts_SubstPV) ,XIO(Wrk_SubstPV) OTE(Sts_InpPV) ,XIC(Sts_SubstPV) OTE(Sts_MaintByp) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Commands for Substitue PV and Input PV are available
based on the current state of the internal toggle bit.]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_NoSubstPV)[XIO(Wrk_SubstPV) OTE(MRdy_SubstPV) ,XIC(Wrk_SubstPV) OTE(MRdy_InpPV) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION
============================================================

These rungs get Configuration data (such as timer presets) and distribute as needed.
Note that some Configuration data are used directly in-place.

Enter the time (in seconds) the Status must remain in each state (debounce time).
This time is used in a rising-edge debounce timer and a falling-edge debounce timer.

Enter the time (in seconds) the alarm Gate must be true before alarm detection is activated.

Enter the On-Delay and Off-Delay times (in seconds) for the Target Disagree Status
(which feeds the Target Disagree Alarm).

If the timer preset calcuated wraps negative (more than 2.14... million seconds), then establish
a valid limit value for the Preset.  Note that a negative timer preset will fault the controller!!!

#####  V4.00.00  2018-06-25:  Changed delay time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[MUL(Cfg_Debounce,1000.0,Wrk_RiseT.PRE) XIC(Wrk_RiseT.PRE.31) CLR(Wrk_RiseT.PRE) OTE(Wrk_ErrDebounce) ,MOV(Wrk_RiseT.PRE,Wrk_FallT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####
#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(TgtDisagree.PCmd_Ack) ,OTL(IOFault.PCmd_Ack) ] ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ][OTL(TgtDisagree.PCmd_Reset) ,OTL(IOFault.PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[============================================================
DISCRETE INPUT PROCESSING
============================================================

Sts_PVBad:  If the I/O communication / data quality is OK,
or in Simulation or substituted, show NO Bad PV Status.

If the I/O communication is faulted or data quality is BAD and we're NOT
in Simulation or using substitute PV, show the Bad PV Status.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_IOFault)XIO(Inp_Sim)OTE(Sts_IOFault)OTE(Sts_PVBad);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[The Process Variable Status (Sts_PV) bit shows the state of the selected input,
regardless of the settings of Mode.

@@@@@  NOTE:  Inp_PV is INVERTED when this instruction is scanned false!!!  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIO(Inp_PV) ,XIC(Inp_Sim) XIC(Set_SimPV) ]OTE(Sts_PV);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[The Simulated PV Setting tracks the selected PV for bumpless transfer into Simulation.

NOTE:  Tracking must be done with latch/unlatch instructions to keep the 
Set_SimPV setting retentive through a power cycle.
In order to avoid overwriting asynchronous inputs, the Set_SimPV bit is only written
when Simulation is NOT selected (live PV is used).]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)[XIC(Sts_PV) OTL(Set_SimPV) ,XIO(Sts_PV) OTU(Set_SimPV) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The Status (Sts) bit shows the state of the selected input (after debounce, below).
This rung selects which PV is used: the input/simulation PV or the substitute PV.
In normal operation, it's the state of the Input (Sts_PV).
In Substitute PV, it's the state of the entered Substitute PV (Oper or Prog).]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_SubstPV) XIC(Sts_PV) ,XIC(Wrk_SubstPV) XIC(MSet_SubstPV) ]OTE(Wrk_Status);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[These two rungs debounce the selected PV, ensuring the Status stays in
each state a minimum time, while not delaying the Status on transition after an
extended period of time in the prior state.

@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Status) XIO(Wrk_FallT.TT) ,XIC(Wrk_RiseT.TT) ]TON(Wrk_RiseT,?,?)TON(Wrk_RiseT,?,?);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_Status) XIO(Wrk_RiseT.TT) ,XIC(Wrk_FallT.TT) ]TON(Wrk_FallT,?,?)TON(Wrk_FallT,?,?);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[The Rising Edge triggered timer ENABLE bit (sealed in using the Timing bit)
is our debounced input.  Pass it along as the Status.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_RiseT.EN)OTE(Sts);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[Finally, if we are NOT using the Substitute PV, have it track the
debounced Status for bumpless transfer to Substitute.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SubstPV)[XIO(Sts) OTU(MSet_SubstPV) ,XIC(Sts) OTL(MSet_SubstPV) ];]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[============================================================
TARGET DISAGREE STATUS GENERATION
============================================================
If the Input is not in the target state, generate a Target
Disagree comparison status.  This status is then gated
(with a gate delay) and has an on-delay and off-delay
before feeding the final Target Disagree status bit.]]>
</Comment>
<Text>
<![CDATA[[[XIO(Sts) XIC(Inp_Target) ,XIC(Sts) XIO(Inp_Target) ] OTE(Sts_TgtDisagreeCmp) ,P_Gate(TgtDisagreeGate) ,XIC(TgtDisagreeGate.Out) OTE(TgtDisagree.Inp) ];]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
Both alarms are ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1).

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####
#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[OTL(TgtDisagree.PCfg_AllowExist)OTL(IOFault.PCfg_AllowExist);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[Handle Alarm Processing using the standard P_Alarm AOI]]>
</Comment>
<Text>
<![CDATA[P_Alarm(TgtDisagree);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[Handle Alarm Processing using the standard P_Alarm AOI

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IOFault);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(TgtDisagree.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad timer presets are determined in the Configuration logic above.
Bad Alarm configuration is determined by the P_Alarm instruction.

Then a summary Bad Config status is provided, simply an OR of the individual bits.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Wrk_ErrDebounce) ,XIC(TgtDisagreeGate.Sts_Err) ] OTE(Err_Timer) ,[XIC(TgtDisagree.Sts_Err) ,XIC(IOFault.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[MOV(1,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(10,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(SrcQ_IO,Wrk_SrcQ) ,XIC(Sts_SubstPV) MOV(18,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ) ];]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[This rung generates the enumerated Device Status:
0 = Normal (PV Good)
6 = PV Bad
7 = Substitute PV

And this rung generates the enumerated Device Fault Status:
0 = none
16 = Target Disagree
32 = I/O Comms Fault
34 = Config Error

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_PVBad) MOV(6,Wrk_Sts) ,XIC(Sts_SubstPV) MOV(7,Wrk_Sts) ,XIC(Sts_TgtDisagree) MOV(16,Wrk_Fault) ,XIC(Sts_IOFault) MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####
#####  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) OTU(Wrk_Notify.0) ,GRT(TgtDisagree.Val_Notify,Wrk_Notify) MOV(TgtDisagree.Val_Notify,Wrk_Notify) ,GRT(IOFault.Val_Notify,Wrk_Notify) MOV(IOFault.Val_Notify,Wrk_Notify) ,[XIC(TgtDisagree.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IOFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_UnackAlmC,Val_UnackAlmC) MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[Roll up the notification from the input Channel object.

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached PV object.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(Inp_PVNotify,Wrk_Notify) MVM(Inp_PVNotify,2#1111_1110,Wrk_Notify) ,XIC(Inp_PVNotify.0) OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-06-25:  Added separate rung for Rdy_ bits, for new I/O Fault alarm.  #####
#####  Aligned ready bit naming with command bit names.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(TgtDisagree.Sts_RdyAck) ,XIC(IOFault.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(TgtDisagree.Sts_RdyReset) ,XIC(IOFault.Sts_RdyReset) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan - status is updated and alarms are generated]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_DIn:  PROCESS -- DISCRETE INPUT
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x Revision History archived.
V4.00.00  2018-06-25:  Added I/O Fault alarm.
Changed Inf_ items to HMI_, and added Cfg_Area for security.
Added notify and unack count rollup for Channel object.
Deleted Cfg_PCmdClear.  All Program Commands are now self-clearing.
Aligned ready bit naming with command bit names.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_ResetReqd for use by external objects.
Changed delay time configuration items to REAL seconds.
V4.10.00  2019-03-08:  Added Cfg_HasMoreObj.
============================================================
This Instruction monitors a Discrete Input from a flow switch, motor vibration
switch, or any other discrete signal, and provides:

*  PV Status, with configurable names for the 0- and 1-states
* Input debounce for both the rising and falling transitions of the PV input
* An I/O Fault input.  An I/O Fault Alarm is raised when this input is true
*  A "Target" input -- the Target Disagree Alarm is raised when the PV input is not in
the same state as the Target for a configurable period of time
*  A Target Disagree "Gate" signal (with delay), used to enable the Alarm under
appropriate process conditions
* Commands to inhibit or enable alarms
* Setting of a simulated input signal for process simulation
* Selection of Substitute PV (by Maintenance personnel) or normal PV

Alarms are provided by P_Alarm AOI instances.
Target Disagree Status gating is provided by a P_Gate AOI instance.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-06-25:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)CONCAT(Cfg_Desc,Cfg_Label,Cfg_Tag)CONCAT(Cfg_0StText,Cfg_1StText,Cfg_Area)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands:

NOTE:  Operator Commands for P_Alarm are sent directly to the contained AOI.

MCmd_SubstPV: Maintenance Command to select Maintenance-entered substitute PV

Do not allow this Command if Cfg_NoSubstPV is set.]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)XIC(MCmd_SubstPV)OTU(MCmd_SubstPV)XIO(Cfg_NoSubstPV)OTL(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[MCmd_InpPV: Maintenance Command to cancel Substitute PV and return to Live Input PV.]]>
</Comment>
<Text>
<![CDATA[[XIC(MCmd_InpPV) OTU(MCmd_InpPV) ,XIC(Cfg_NoSubstPV) ]OTU(Wrk_SubstPV);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Show the Substitute / Input PV Status, and if Substitute PV
is selected, show the Maintenance Bypass breadcrumb.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_SubstPV) OTE(Sts_SubstPV) ,XIO(Wrk_SubstPV) OTE(Sts_InpPV) ,XIC(Sts_SubstPV) OTE(Sts_MaintByp) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Commands for Substitue PV and Input PV are available
based on the current state of the internal toggle bit.]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_NoSubstPV)[XIO(Wrk_SubstPV) OTE(MRdy_SubstPV) ,XIC(Wrk_SubstPV) OTE(MRdy_InpPV) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION
============================================================

These rungs get Configuration data (such as timer presets) and distribute as needed.
Note that some Configuration data are used directly in-place.

Enter the time (in seconds) the Status must remain in each state (debounce time).
This time is used in a rising-edge debounce timer and a falling-edge debounce timer.

Enter the time (in seconds) the alarm Gate must be true before alarm detection is activated.

Enter the On-Delay and Off-Delay times (in seconds) for the Target Disagree Status
(which feeds the Target Disagree Alarm).

If the timer preset calcuated wraps negative (more than 2.14... million seconds), then establish
a valid limit value for the Preset.  Note that a negative timer preset will fault the controller!!!

#####  V4.00.00  2018-06-25:  Changed delay time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[MUL(Cfg_Debounce,1000.0,Wrk_RiseT.PRE) XIC(Wrk_RiseT.PRE.31) CLR(Wrk_RiseT.PRE) OTE(Wrk_ErrDebounce) ,MOV(Wrk_RiseT.PRE,Wrk_FallT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####
#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(TgtDisagree.PCmd_Ack) ,OTL(IOFault.PCmd_Ack) ] ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ][OTL(TgtDisagree.PCmd_Reset) ,OTL(IOFault.PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[============================================================
DISCRETE INPUT PROCESSING
============================================================

Sts_PVBad:  If the I/O communication / data quality is OK,
or in Simulation or substituted, show NO Bad PV Status.

If the I/O communication is faulted or data quality is BAD and we're NOT
in Simulation or using substitute PV, show the Bad PV Status.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_IOFault)XIO(Inp_Sim)OTE(Sts_IOFault)OTE(Sts_PVBad);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[The Process Variable Status (Sts_PV) bit shows the state of the selected input,
regardless of the settings of Mode.]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIC(Inp_PV) ,XIC(Inp_Sim) XIC(Set_SimPV) ]OTE(Sts_PV);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The Simulated PV Setting tracks the selected PV for bumpless transfer into Simulation.

NOTE:  Tracking must be done with latch/unlatch instructions to keep the 
Set_SimPV setting retentive through a power cycle.
In order to avoid overwriting asynchronous inputs, the Set_SimPV bit is only written
when Simulation is NOT selected (live PV is used).]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)[XIC(Sts_PV) OTL(Set_SimPV) ,XIO(Sts_PV) OTU(Set_SimPV) ];]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[The Status (Sts) bit shows the state of the selected input (after debounce, below).
This rung selects which PV is used: the input/simulation PV or the substitute PV.
In normal operation, it's the state of the Input (Sts_PV).
In Substitute PV, it's the state of the entered Substitute PV (Oper or Prog).]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_SubstPV) XIC(Sts_PV) ,XIC(Wrk_SubstPV) XIC(MSet_SubstPV) ]OTE(Wrk_Status);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[These two rungs debounce the selected PV, ensuring the Status stays in
each state a minimum time, while not delaying the Status on transition after an
extended period of time in the prior state.

@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Status) XIO(Wrk_FallT.TT) ,XIC(Wrk_RiseT.TT) ]TON(Wrk_RiseT,?,?)TON(Wrk_RiseT,?,?);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[@@@@@  NOTE: Doubled TON/TOF is used to ensure that  @@@@@
@@@@@  .DN bit transitions on same scan if Preset = 0 !  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_Status) XIO(Wrk_RiseT.TT) ,XIC(Wrk_FallT.TT) ]TON(Wrk_FallT,?,?)TON(Wrk_FallT,?,?);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[The Rising Edge triggered timer ENABLE bit (sealed in using the Timing bit)
is our debounced input.  Pass it along as the Status.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_RiseT.EN)OTE(Sts);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[Finally, if we are NOT using the Substitute PV, have it track the
debounced Status for bumpless transfer to Substitute.]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_SubstPV)[XIO(Sts) OTU(MSet_SubstPV) ,XIC(Sts) OTL(MSet_SubstPV) ];]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[============================================================
TARGET DISAGREE STATUS GENERATION
============================================================
If the Input is not in the target state, generate a Target
Disagree comparison status.  This status is then gated
(with a gate delay) and has an on-delay and off-delay
before feeding the final Target Disagree status bit.]]>
</Comment>
<Text>
<![CDATA[[[XIO(Sts) XIC(Inp_Target) ,XIC(Sts) XIO(Inp_Target) ] OTE(Sts_TgtDisagreeCmp) ,P_Gate(TgtDisagreeGate) ,XIC(TgtDisagreeGate.Out) OTE(TgtDisagree.Inp) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
The alarm is ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1).

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####
#####  V4.00.00  2018-06-25:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[OTL(TgtDisagree.PCfg_AllowExist)OTL(IOFault.PCfg_AllowExist);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[Handle Alarm Processing using the standard P_Alarm AOI]]>
</Comment>
<Text>
<![CDATA[P_Alarm(TgtDisagree);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[Handle Alarm Processing using the standard P_Alarm AOI

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IOFault);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(TgtDisagree.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad timer presets are determined in the Configuration logic above.
Bad Alarm configuration is determined by the P_Alarm instruction.

Then a summary Bad Config status is provided, simply an OR of the individual bits.

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Wrk_ErrDebounce) ,XIC(TgtDisagreeGate.Sts_Err) ] OTE(Err_Timer) ,[XIC(TgtDisagree.Sts_Err) ,XIC(IOFault.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED STATUS VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[MOV(1,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(10,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(SrcQ_IO,Wrk_SrcQ) ,XIC(Sts_SubstPV) MOV(18,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ) ];]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[This rung generates the enumerated Device Status:
0 = Normal (PV Good)
6 = PV Bad
7 = Substitute PV

And this rung generates the enumerated Device Fault Status:
0 = none
16 = Target Disagree
32 = I/O Comms Fault
34 = Config Error

#####  V4.00.00  2018-06-25:  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_PVBad) MOV(6,Wrk_Sts) ,XIC(Sts_SubstPV) MOV(7,Wrk_Sts) ,XIC(Sts_TgtDisagree) MOV(16,Wrk_Fault) ,XIC(Sts_IOFault) MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####
#####  Added I/O Fault alarm.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) OTU(Wrk_Notify.0) ,GRT(TgtDisagree.Val_Notify,Wrk_Notify) MOV(TgtDisagree.Val_Notify,Wrk_Notify) ,GRT(IOFault.Val_Notify,Wrk_Notify) MOV(IOFault.Val_Notify,Wrk_Notify) ,[XIC(TgtDisagree.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IOFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_UnackAlmC,Val_UnackAlmC) MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[Roll up the notification from the input Channel object.

#####  V4.00.00  2018-06-25:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached PV object.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(Inp_PVNotify,Wrk_Notify) MVM(Inp_PVNotify,2#1111_1110,Wrk_Notify) ,XIC(Inp_PVNotify.0) OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-06-25:  Added separate rung for Rdy_ bits, for new I/O Fault alarm.  #####
#####  Aligned ready bit naming with command bit names.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(TgtDisagree.Sts_RdyAck) ,XIC(IOFault.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(TgtDisagree.Sts_RdyReset) ,XIC(IOFault.Sts_RdyReset) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, clear any "lurking" Commands.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Reset)OTU(OCmd_ResetAckAll)OTU(MCmd_InpPV)OTU(MCmd_SubstPV);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_Motor" Revision="4.10" RevisionExtension=".01 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-03-27T19:50:50.098Z" CreatedBy="Not Available" EditedDate="2019-10-16T20:55:49.380Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Single Speed Motor]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction controls and monitors a single-speed motor
(FVNR, soft-start, etc.) and provides:
  * Monitoring of run feedback, display of actual motor status
  * Detection of Failure to Start, Failure to Stop
  * Monitoring of a Permissive condition to allow starting
  * Monitoring of an Interlock condition to stop / prevent starting
  * Audible warning on start with configurable delay time
  * Simulation, providing feedback of a working motor while disabling outputs
  * Monitoring of I/O communication faults
  * Alarms for Fail to Start, Fail to Stop, Interlock Trip, I/O Fault
  * Options to shed (stop motor) on Fail to Start or I/O Fault
  * Operation from Hand, Maintenance, Override, Program and Operator command sources
  * Option to automatically reset faults and alarms when operator commands motor to start or stop
  * Supports HMI "breadcrumbs" for Alarm Inhibited, Bad Configuration,
     Not Ready, Maintenance Bypass Active
  * "Available" status for use by automation logic to know whether motor can be controlled by other objects.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, Program, External, Override, Maintenance, Out of
Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.10.00)
See 4.10 Release Notes for details.
* Corrected handling of Jog and Horn on shed conditions.
* Modified to lock out jog when jog time expires until jog commands are cleared.
* Corrected handling of outputs in Hand.
* Modified to account for overlapping Horn and Jog times

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.02)
See 4.10 Release Notes for details.
* Changed Sts_Available to use input availability from interlocks.
* Added Horn Status and Horn Inhibit.
* Updated to P_CmdSrc V4.10.00.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.00 Release Notes for details.
* Corrected handling Allow Local when horn is enabled.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-11)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added jog function.
* Added notify and unack count rollup for Channel object.
* Changed "Mode" to "Command Source" using P_CmdSrc 4.00.00
   added External Commands (XCmds) and Settings (XSet).
* Added output for audible alert prior to motor starting when commanded.
* Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
* Aligned ready bit naming with command bit names.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by external objects.
* Changed delay / time configuration items to REAL seconds.
* Updated Val_Sts to common enumeration across all motors and drives.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_RunFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Signal: RUN feedback from motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_PermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, motor can start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBPermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, motor can start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlocks OK, motor can start/run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBIntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Interlocks OK, motor can start/run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkAvail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Interlock Availibility OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_OvldNotify" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Related Overload object alarm prio and ack status (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Communication Status 0=OK, 1=fail]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Sim" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Simulate working motor; 0=Start/Stop/ Monitor actual motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Hand" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Hand" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_Ovrd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Ovrd" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_OvrdCmd" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Override Mode Command: 0=None, 1=Stop, 2=Start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ExtInh" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_ExtInh" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_HornInh" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Inhibit audible alert, 0 = Alllow audible alert]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset Shed Latches and Cleared Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasJog" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor Jog Command enabled/visible, 0=Motor Jog Command not allowed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasRunFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor provides run feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_UseRunFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor run feedback should be used for failure checking]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AllowLocal" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Allow Local Start/Stop without alarm, 0=Start/Stop from HMI/prog only]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasPermObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Enable navigation to permissive object]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasIntlkObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Enable navigation to interlock object]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasResInhObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Enable navigation to restart inhibit object]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasRunTimeObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Enable navigation to run time object]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasOvldObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Enable navigation to overload object]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OperStopPrio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=OCmd_Stop any time, 0=OCmd_Stop only when Oper selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtStopPrio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=XCmd_Stop any time, 0=XCmd_Stop only when Ext selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New motor OCmd resets shed latches and cleared alarms, 0=OCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_XCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New motor XCmd resets shed latches and cleared alarms, 0=XCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OvrdPermIntlk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Override ignores Bypassable Perm/ Intlk; 0=always use Perm/Intlk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnFailToStart" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Stop Motor and Alarm on Fail to Start; 0=Alarm only on Fail to Start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnIOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Stop Motor and Alarm on I/O Fault; 0=Alarm only on I/O Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasFailToStartAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasFailToStopAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIntlkTripAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIOFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail To Start Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail To Stop Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_StartHornT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to sound audible on commanded start (sec) (0=disabled)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SimFdbkT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Feedback delay in Simulation (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="2.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailToStartT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time after Start for running feedback before Fault (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="10.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailToStopT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time after Stop for stopped feedback (=0) before Fault (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="10.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaxJogT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maximum jog time (sec, 0=unlimited)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PSet_Owner" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Owner Request ID (non-zero) or Release (zero)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Start" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Start Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Stop" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Stop Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Prog" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Prog" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Oper" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Oper" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Lock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Lock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Normal" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Normal" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to ResetShed Latches and Cleared Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_FailToStartAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Comnmand to Unshelve Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="MCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.MCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="OCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.OCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Start" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Start Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Stop" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Stop Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Jog" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Jog Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Acq" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Acq" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to reset shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Run" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Run Motor, 0=Stop Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Start Motor, 0=Motor left in current state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Stop" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Stop Motor, 0=Motor left in current state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Sound audible prior to commanded motor start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Cmd" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Command 0=None, 1=Stop, 2=Start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fdbk" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Feedback 0=Stopped, 1=Running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Sts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Sts: 0=? 1=Stopped 2=RunFwd 3=RunRev 4=RunSlow 5=StartFwd 6=StartRev 7=StartSlow 8=JogFwd 9=JogRev 10=Sopping]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=None, 16=Fail to Start, 17 = Fail to Stop, 32=I/O Fault, 34=Config Error]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object + channel (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Owner" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Object Owner ID (0=not owned)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor Horn Active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Stopped" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor requested to stop and is confirmed stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Starting" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor requested to run and awaiting run feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Running" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor requested to run and is confirmed running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Stopping" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor requested to stop and awaiting stopped feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Jogging" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor requested to Jog]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Available" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor available for control by automation (Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Bypass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Bypassable Interlocks and Permissives are Bypassed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_BypActive" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Bypassing Active (Bypassed or Maintenance)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NotRdy" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready, see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_CfgErr" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Configuration Error]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device Failure (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Intlk" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Interlock Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_IOFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: I/O Fault (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_OoS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device is Out of Service]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Perm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Permissive Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_PrioStop" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Oper/Ext Priority Stop Requires Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintByp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A Maintenance Bypass is Active, display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An Alarm is Shelved, Disabled or Suppressed: display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Start/Stop Check timer preset (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Sim" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Simulation timer preset (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Hand" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Hand" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OoS" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OoS" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Maint" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Maint" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ovrd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ovrd" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ext" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ext" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Prog" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Prog" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgLocked" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Oper" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Oper" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OperLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OperLocked" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Normal" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Normal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ExtReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ExtReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_MAcqRcvd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_MAcqRcvd" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor Failed to Start (one-shot)]]>
</Description>
</Parameter>
<Parameter Name="Alm_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor Failed to Stop]]>
</Description>
</Parameter>
<Parameter Name="Alm_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor stopped by an Interlock NOT OK (one-shot)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Motor stopped by an Interlock NOT OK]]>
</Description>
</Parameter>
<Parameter Name="Ack_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Comm Fault Status (0=OK, 1=Bad)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="MRdy_Rel" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.MRdy_Rel" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="ORdy_Unlock" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.ORdy_Unlock" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="P_Motor" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="CmdSrc" DataType="P_CmdSrc" ExternalAccess="Read/Write">
<Description>
<![CDATA[Control / Command Source Selection]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7649,0,0,1,0,[8,'P_CmdSrc$00$00$00$00'],[6,'RA-BAS$00$00']]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_CmdSrc">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_ExtInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasOper" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasOperLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProg" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProgLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasExt" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMaint" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasMOoS" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_OvrdOverLock" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_ExtOverLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgPwrUp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgNormal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdPriority" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdProgAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdLockAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ExtAcqAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_eSrc" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Sts_bSrc" DataType="INT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Sts_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Maint" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ext" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OperLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperSel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ExtReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_MAcqRcvd" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_CmdSrc" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IOFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'I/O Fault$00$00$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IntlkTrip" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,500,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Interlock Trip$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="FailToStop" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Motor Failed to Stop Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Failed to Stop$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="FailToStart" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Motor Failed to Start Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'Failed to Start$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Motor$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Motor']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[13,'Motor Control$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="13">
<![CDATA['Motor Control']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[18,'Single Speed Motor$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="18">
<![CDATA['Single Speed Motor']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Run" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Motor should be "running", 0=should be "stopped"]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimRunT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Simulation Delay until Running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StopT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Stop Check Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Start Check Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimStopT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Simulation Delay until Stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RunFdbk" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Run Feedback based on mode, simulation, etc. 1=running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Bypassable Permissives and Interlocks are Bypassed flag]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Cmd" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Cmd]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Sts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Retrigger" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Maint Start issued while running or Stop while stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Type identifier for HMI navigation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Motor$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Motor']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Level and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RetrigONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Retrigger on Oper/Ext stop One-Shot Store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NotRdy" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Device Not Ready conditions excluding shed latches]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StopInhT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Local Stop Inhibit Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartInhT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Local Start Inhibit Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NoLongerSim" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Switched from Simulated to Real Motor this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHorn" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Sound audible prior to commanded motor start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHornT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer for audible alert or start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_JogT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Jog Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Jog" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Jog Motor, 0=Motor not jogging]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Stop" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Stop Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Start" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Start Motor]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to reset shed latches and cleared alarms, plus  Acknowledge alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to reset shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Jog" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Jog motor (not cleared by instruction!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Check (not bypass) all Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Bypass all Bypassable Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PermOK" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Permissives and NB Permissive OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_ResetAckAll (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Jog" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Jog (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Stop" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Stop (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Start" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Start (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Check (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Bypass (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Out of Service is asserted; Outputs OFF; Run Status shown but Alarms inhibited]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
Handle "Programmed Out of Servie" Selection using the standard
P_CmdSrc AOI (EnableInFalse Routine, false scan required!).

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(EnableIn)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[First-Come First-Served Ownership Arbitration still needs to happen, even when device is disabled.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA["Lurking" Operator and Program Commands are cleared.
(Lurking Acknowledge Commands are left to perform their action.)

#####  V4.00.00  2018-07-09:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Command Source and Commands. Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(OCmd_Start) OTU(OCmd_Stop) OTU(OCmd_Jog) ,OTU(XCmd_Start) OTU(XCmd_Stop) OTU(XCmd_Jog) ,OTU(PCmd_Start) OTU(PCmd_Stop) ,OTU(MCmd_Bypass) OTU(MCmd_Check) ,CLR(Inp_OvrdCmd) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(XCmd_Reset) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-09:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Command Source and Commands. Added Jog function.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_Start) OTU(ORdy_Stop) OTU(ORdy_Jog) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_ResetAckAll) OTU(ORdy_Reset) OTU(Sts_RdyAck) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[The Motor Status bits show the state of the motor,
regardless of Mode, EVEN IF OFF-SCAN!]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)XIC(Inp_RunFdbk)XIC(Cfg_UseRunFdbk)OTE(Sts_Running)MOV(1,Val_Fdbk);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[If the motor is not Running, it's Stopped.]]>
</Comment>
<Text>
<![CDATA[XIO(Sts_Running)OTE(Sts_Stopped)CLR(Val_Fdbk);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Reset the fault condition and simulation / command retrigger timers.]]>
</Comment>
<Text>
<![CDATA[RES(Wrk_StartT)RES(Wrk_StopT)RES(Wrk_SimRunT)RES(Wrk_SimStopT);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Set motor to Stop in Programmed Out of Service (PooS).

#####  V4.00.00  2018-07-03:  Added Jog function, Audible Alert on start.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_Run)OTU(Wrk_Jog)OTU(Out_Start)OTL(Out_Stop)OTU(Out_Run)OTU(Out_Horn);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[Show the motor as Disabled and Not Ready, not Available, and with no
Maintenance Bypass breadcrumb.
Clear remaining Status bits.
Show the enumerated motor command as NONE.
Show the enumerated motor status as STOPPED or RUNNING.
Show the enumerated motor fault status as NONE.

#####  V4.00.00  2018-07-09:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  Added Jog function.  Updated Val_Sts to common enumeration across all motors and drives.  #####
#####  V4.10.00  2019-03-25:  Added Horn Status.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(Sts_NotRdy) OTU(Sts_Available) OTU(Sts_MaintByp) ,OTU(Nrdy_CfgErr) OTU(Nrdy_Fail) OTU(Nrdy_Intlk) ,OTL(Nrdy_OoS) OTU(Nrdy_IOFault) OTU(Nrdy_Perm) OTU(Nrdy_PrioStop) ,OTU(Sts_Starting) OTU(Sts_Stopping) OTU(Sts_Horn) ,XIC(Sts_Stopped) MOV(1,Val_Sts) ,XIC(Sts_Running) MOV(2,Val_Sts) ,CLR(Val_Cmd) CLR(Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[If the device is OFF-SCAN (rung is false or EnableIn is false in FBD),
then show the alarms as "Parent object out of service".
Show the overall acknowledgement status.

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc, added Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(FailToStart.Inp_OoS) P_Alarm(FailToStart) ,OTL(FailToStop.Inp_OoS) P_Alarm(FailToStop) ,OTL(IntlkTrip.Inp_OoS) P_Alarm(IntlkTrip) ,OTL(IOFault.Inp_OoS) P_Alarm(IOFault) ,CLR(Val_Notify) CLR(Val_NotifyAll) ,[XIC(FailToStart.Val_Notify.0) ,XIC(FailToStop.Val_Notify.0) ,XIC(IntlkTrip.Val_Notify.0) ,XIC(IOFault.Val_Notify.0) ] OTL(Val_Notify.0) OTL(Val_NotifyAll.0) ,[XIC(FailToStart.Sts_AlmInh) ,XIC(FailToStop.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ] OTE(Sts_AlmInh) ];]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(1,Wrk_SrcQ) ,XIO(Cfg_HasRunFdbk) MOV(2,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(9,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[MOV(20,SrcQ);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan: control / monitor single speed motor]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_Motor:  PROCESS -- MOTOR (single speed, on/off)
============================================================
Revision 4.10.01 Release  2019-10-16:  See V4.10.xx Release Notes for details.
V1.x, V2.x, V3.x Revision History archived.
V4.00.00  2018-07-09:  Changed "Mode" to "Command Source". Added audible alert
on commanded start. Changed Inf_ items to HMI_, and added Cfg_Area
for security. Added unacked alarm count. Added Jog function. Deleted
Cfg_PCmdClear; all Program Commands are now self-clearing.
Aligned ready bit naming with command bit names.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_ResetReqd for use by external objects.
Changed delay / time configuration items to REAL seconds.
Updated Val_Sts to common enumeration across all motors and drives.
V4.00.02  2018-10-30:  Corrected handling Allow Local when horn is enabled. 
V4.10.00  2019-03-25:  Changed Sts_Available to use input availability from
interlocks. Added Horn Status, Horn Inhibit. Updated to
P_CmdSrc V4.10.00. Added Cfg_HasMoreObj.
V4.10.01  2019-10-16:  Corrected handling of Jog and Horn on shed conditions. Modified to lock out jog
when jog time expires until jog commands are cleared. Corrected handling of outputs
in Hand. Modified to account for overlapping Horn and Jog times
============================================================
This Instruction controls and monitors a single-speed motor
(FVNR, soft-start, etc.) and provides:

*  Monitoring of run feedback, display of actual motor status
*  Detection of Failure to Start, Failure to Stop
*  Monitoring of a Permissive condition to allow starting
* Monitoring of an Interlock condition to stop / prevent starting
* Simulation, providing feedback of a working motor while disabling outputs
* Monitoring of I/O communication faults
* Alarms for Fail to Start, Fail to Stop, Interlock Trip, I/O Fault
* Options to shed (stop motor) on Fail to Start or I/O Fault
* Option to automatically reset faults and alarms when operator commands
motor to start or stop
* Supports HMI "breadcrumbs" for Alarm Inhibited, Bad Configuration,
Not Ready, Maintenance Bypass Active
* "Available" status for use by automation logic to know whether motor
can be controlled by other objects.
* Horn output for audible alert prior to starting motor.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, External, Program, External, Override, Maintenance,
Out of Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-09:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_Desc,Cfg_Label)LOWER(Cfg_Tag,Cfg_Area)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[This rung handles received Command Source selection Inputs and Commands:

NOTE:  All Commands for Command Source and Alarm are aliased directly to the
corresponding Commands in the contained P_CmdSrc and P_Alarm AOIs.

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[This rung handles simple First-Come First-Served Ownership Arbitration.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
If the device is configured to not HAVE device feedback input (engineer),
it cannot be USE the feedback for fail checking (maintenance).]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_HasRunFdbk)OTU(Cfg_UseRunFdbk)OTU(Cfg_AllowLocal);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[These rungs get Configuration data (such as timer presets) and distribute as needed.
Note that some Configuration data are used directly in-place.

Enter the time (in seconds) for the motor to successfully start before declaring a fault.
Enter the time (in seconds) for the motor to successfully stop before declaring a fault.

If the timer preset calcuated wraps negative (more than 2.14... million seconds), then use a default
limit value and report Bad Configuration.  Note that a negative timer preset will fault the controller!!!

#####  V4.00.00  2018-07-09:  Added audible alert prior to commanded start.  #####
#####  Added Jog function. Changed delay / time configuration items to REAL seconds.  #####
#####  V4.10.00  2019-03-25:  Added Horn Inhibit.  #####
#####  V4.10.01  2019-10-16:  Modified to account for overlapping Horn and Jog times.  #####]]>
</Comment>
<Text>
<![CDATA[[[MUL(Cfg_FailToStartT,1000.0,Wrk_StartT.PRE) XIC(Wrk_StartT.PRE.31) MOV(2147483647,Wrk_StartT.PRE) ,MUL(Cfg_FailToStopT,1000.0,Wrk_StopT.PRE) XIC(Wrk_StopT.PRE.31) MOV(2147483647,Wrk_StopT.PRE) ,[GRT(Cfg_StartHornT,1000.0) CLR(Cfg_StartHornT) ,MUL(Cfg_StartHornT,1000.0,Wrk_StartHornT.PRE) ,XIC(Inp_HornInh) CLR(Wrk_StartHornT.PRE) ] XIC(Wrk_StartHornT.PRE.31) CLR(Wrk_StartHornT.PRE) ,CPT(Wrk_JogT.PRE,Cfg_MaxJogT*1000.0+Wrk_StartHornT.PRE) XIC(Wrk_JogT.PRE.31) CLR(Wrk_JogT.PRE) ] OTE(Err_Timer) ,MOV(Wrk_StartT.PRE,Wrk_StartInhT.PRE) MOV(Wrk_StopT.PRE,Wrk_StopInhT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Enter the time (in seconds) to echo back the desired state when running in simulation

Handle timer preset invalid values as above.]]>
</Comment>
<Text>
<![CDATA[[MUL(Cfg_SimFdbkT,1000,Wrk_SimRunT.PRE) XIC(Wrk_SimRunT.PRE.31) MOV(0,Wrk_SimRunT.PRE) OTE(Err_Sim) ,MOV(Wrk_SimRunT.PRE,Wrk_SimStopT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE FEEDBACK PROCESSING
============================================================
If the device is being simulated or has no feedback,
use the simulation timers to provide "fake" feedback.

If the motor is NOT being simulated and it HAS and IS USING a run feedback,
use the state of the run feedback input as the motor run state.]]>
</Comment>
<Text>
<![CDATA[[[XIC(Inp_Sim) ,XIO(Cfg_UseRunFdbk) ] [XIC(Wrk_SimRunT.DN) OTL(Wrk_RunFdbk) ,XIC(Wrk_SimStopT.DN) OTU(Wrk_RunFdbk) ] ,XIO(Inp_Sim) XIC(Cfg_UseRunFdbk) [XIC(Inp_RunFdbk) OTL(Wrk_RunFdbk) ,XIO(Inp_RunFdbk) OTU(Wrk_RunFdbk) ] ,XIC(Sts_Hand) XIO(Cfg_UseRunFdbk) OTU(Wrk_RunFdbk) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Val_Fdbk is the current state of the device feedback, as seen on the AOI's Inputs:
0 = Stopped
1 = Running]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_RunFdbk) CLR(Val_Fdbk) ,XIC(Wrk_RunFdbk) MOV(1,Val_Fdbk) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[============================================================
INTERLOCK / PERMISSIVE BYPASS / CHECK COMMAND HANDLING
============================================================
The Bypass Command bypasses the Bypassable Permissives and Interlocks.

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc. Bypass now a Maintenance function.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Bypass)OTU(MCmd_Bypass)OTL(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The Check Command enables checking of ALL
Permissives and Interlocks (cancels the bypass).

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc. Bypass now a Maintenance function.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Check)OTU(MCmd_Check)OTU(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If the internal Bypass flag is set, Bypassable Interlocks and Permissives ARE BYPASSED.
Bypassing is ACTIVE if Bypass selected OR in Maintenance Mode,
or in Override Mode if Override Bypassing is configured.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Bypass) OTE(Sts_Bypass) ,XIC(Sts_Maint) ,XIC(Sts_Ovrd) XIC(Cfg_OvrdPermIntlk) ]OTE(Sts_BypActive);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[If a Maintenance Bypass function is active, display the Maintenance Bypass
Indicator (triangle symbol) on the graphic symbol.  Bypass functions are:
*  Interlock / Permissive Bypass function is enabled
*  Motor HAS run feedback designated by engineer, but
maintenance has selected to NOT USE run feedback]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Bypass) ,XIC(Cfg_HasRunFdbk) XIO(Cfg_UseRunFdbk) ]OTE(Sts_MaintByp);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[Ready for Interlock / Permissive Bypass if not bypassed.
Ready to cancel Bypass (resume checking) if bypassed.

#####  V4.00.00  2018-07-09:  Changed P_Mode to P_CmdSrc. Bypass now a Maintenance function.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_Bypass) OTE(MRdy_Bypass) ,XIC(Wrk_Bypass) OTE(MRdy_Check) ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

This rung processes received Reset Commands from:

1.  The Operator via HMI Operator Command, or
2.  Higher-level strategies via Program Command
3.  Pushbuttons or other block via Input
4.  Resets initiated by other device Operator Commands (if configured to do so)
and forwards the Reset to ALL Alarms and latched Shed conditions.

#####  V4.00.00  2018-07-09:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Command Source and Commands.  Added Jog.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(XCmd_Reset) OTU(XCmd_Reset) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ,[XIC(OCmd_Start) ,XIC(OCmd_Stop) ,XIC(OCmd_Jog) XIC(Cfg_HasJog) ] XIC(Cfg_OCmdResets) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,[XIC(XCmd_Start) ,XIC(XCmd_Stop) ,XIC(XCmd_Jog) XIC(Cfg_HasJog) ] XIC(Cfg_XCmdResets) XIC(Sts_Ext) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(PCmd_FailToStartAck) ,OTL(PCmd_FailToStopAck) ,OTL(PCmd_IntlkTripAck) ,OTL(PCmd_IOFaultAck) ] ][OTL(FailToStart.PCmd_Reset) OTL(FailToStop.PCmd_Reset) OTL(IntlkTrip.PCmd_Reset) OTL(IOFault.PCmd_Reset) ,XIC(Sts_FailToStart) RES(Wrk_StartT) ,XIC(Sts_FailToStop) RES(Wrk_StopT) ,OTU(Nrdy_PrioStop) OTU(Nrdy_Fail) ,[XIO(Inp_IOFault) ,XIC(Inp_Sim) ] OTU(Nrdy_IOFault) ];]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[============================================================
MOTOR START / STOP COMMAND HANDLING
============================================================
In preparation for the Start / Stop logic that follows, this rung
stashes away the Permissive status in reusable bits.
#####  V4.00.00 2018-07-09:  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_PermOK) ,XIC(Sts_BypActive) ]XIC(Inp_NBPermOK)OTE(Wrk_PermOK);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[The Motor is NOT READY TO RUN if:
* Interlocks are not OK and not bypassed;
* Non-bypassable Interlocks are not OK;
* Permissives are not OK and not bypassed,
or Non-Bypassable Permissives are not OK, 
and the motor is not already starting or running;
* There's an I/O failure and the motor is NOT being simulated;
* The motor has a Fail to Start or Fail to Stop that has not been reset;

#####  V4.00.00  2018-07-09:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Err_Timer) ,XIC(Err_Sim) ] OTE(Nrdy_CfgErr) ,XIC(Sts_OoS) OTE(Nrdy_OoS) ,[XIO(Inp_IntlkOK) XIO(Sts_BypActive) ,XIO(Inp_NBIntlkOK) ] [[XIC(Wrk_Run) ,XIC(Wrk_Jog) ] XIO(Sts_Hand) OTE(Sts_IntlkTrip) ,OTE(Nrdy_Intlk) ] ,XIO(Wrk_PermOK) XIO(Sts_Starting) XIO(Sts_Running) OTE(Nrdy_Perm) ,XIC(Inp_IOFault) XIO(Inp_Sim) OTE(Sts_IOFault) XIC(Cfg_ShedOnIOFault) OTL(Nrdy_IOFault) ]OTE(Wrk_NotRdy);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[============================================================
MOTOR START / STOP COMMAND HANDLING
============================================================
The Motor is NOT READY TO RUN if:
* Interlocks are not OK and not bypassed;
* Non-bypassable Interlocks are not OK;
* Permissives are not OK and not bypassed,
or Non-Bypassable Permissives are not OK, 
and the motor is not already starting or running;
* There's an I/O failure and the motor is NOT being simulated;
* The motor has a Fail to Start or Fail to Stop that has not been reset;
* The motor is disabled by Maintenance.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_NotRdy) ,XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ]OTE(Sts_NotRdy);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[The motor is AVAILABLE to be run by automation if it is in PROGRAM
Mode and the "Not Ready" status is cleared.
#####  V4.10.00  2019-03-08:  Changed Sts_Available to use input availability from interlocks.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_Prog)XIO(Nrdy_PrioStop)XIO(Nrdy_Fail)XIO(Nrdy_IOFault)XIO(Nrdy_CfgErr)XIO(Nrdy_OoS)XIO(Nrdy_Perm)[[XIC(Inp_IntlkOK) ,XIC(Sts_BypActive) ] XIC(Inp_NBIntlkOK) ,XIC(Inp_IntlkAvail) ]OTE(Sts_Available);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[If we're not timing an HMI or programmed Start or Stop,
and there's no sealed-in fail-to-start or fail-to-stop,
and if Local Start/Stop Control is permitted,
and if we are using run feedback (not in simulation),
detect a local start or stop transition and track state with it.
(Don't track the Start if conditions do not allow the motor to run.)

#####  V4.00.00 2018-07-09:  Added Jog function.  #####
#####  V4.00.02 2018-10-30: Corrected handling Allow Local when horn is enabled.  #####
]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_StartInhT.TT)XIO(Wrk_StartHornT.TT)XIO(Wrk_StopInhT.TT)XIO(Sts_FailToStart)XIO(Sts_FailToStop)XIC(Cfg_AllowLocal)XIC(Cfg_UseRunFdbk)XIO(Inp_Sim)XIO(Wrk_Jog)[XIC(Inp_RunFdbk) XIO(Sts_NotRdy) OTL(Wrk_Run) ,XIO(Inp_RunFdbk) OTU(Wrk_Run) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[These next several rungs, in priority order, determine whether
the Motor should be running, jogging or stopped.

If a Motor START command is received in Operator, Program or Maintenance
Mode, or if in Override Mode and the Override State is RUN, mark the Motor to RUN.
Permissives must be OK or bypassed to start the Motor (Interlocks are checked below...).
(Modes are mutually exclusive, thus handling the priority.)

#####  V4.00.00  2018-07-09:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####   Added audible alert prior to commanded start.  #####
#####  Added Jog function. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Start) OTU(OCmd_Start) [XIC(Sts_Oper) ,XIC(Sts_Maint) OTL(Wrk_Retrigger) RES(Wrk_SimRunT) ] ,XIC(XCmd_Start) OTU(XCmd_Start) XIC(Sts_Ext) ,XIC(PCmd_Start) OTU(PCmd_Start) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,2) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]XIO(Sts_NotRdy)XIO(Wrk_Jog)[[XIO(Wrk_Run) OTL(Wrk_StartHorn) ,XIC(CmdSrc.Sts_Maint) ] OTL(Wrk_Retrigger) RES(Wrk_SimRunT) ,OTL(Wrk_Run) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[This rung determines if the Motor SHOULD BE JOGGING. This is when:

* The Operator is requesting to Jog
* The Motor is in OPER or MAINT
* Permissives and Interlocks are OK or bypassed if in OPER
* Non-Bypassable Interlocks and Permissives are OK,
* The Motor is Ready (or in simulation), AND
* The Motor is not otherwise requested to RUN

#####  V4.00.00 2018-07-09:  Added Jog function. Deleted Cfg_PCmdClear.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Jog) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,XIC(XCmd_Jog) XIC(Sts_Ext) ]XIO(Sts_NotRdy)XIC(Wrk_PermOK)XIO(Wrk_Run)OTL(Wrk_Jog)OTL(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[If the motor is being jogged, run the Jog Timer.

#####  V4.00.00 2018-07-09:  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_Jog)TON(Wrk_JogT,?,?);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[If we are sounding the audible start alert (start command accepte) and we lose
the permissive before actually starting the motor, cancel the start

#####  V4.00.00  2018-07-09:  Added audible alert prior to commanded start.  #####
#####  Added Jog function.  #####
]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StartHorn)XIO(Wrk_PermOK)OTU(Wrk_Run)OTU(Wrk_Jog)OTU(OCmd_Jog)OTU(XCmd_Jog)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[If the motor is changed to a Mode other than Oper or Maint,
or if the Jog command goes away,
or if the Jog command does not clear within the Maximum Jog Time,
stop jogging.

#####  V4.00.00 2018-07-09:  Added Jog function. Deleted Cfg_PCmdClear.  #####
#####  Added External Command Source and Commands.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIO(OCmd_Jog) [XIC(Sts_Oper) ,XIC(Sts_Maint) ] ,XIO(XCmd_Jog) XIC(Sts_Ext) ,XIO(Sts_Oper) XIO(Sts_Maint) XIO(Sts_Ext) ,XIO(Cfg_HasJog) ] OTU(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ]OTU(OCmd_Jog)OTU(XCmd_Jog);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[If a Motor STOP command is received in Operator, Program or Maintenance
Mode, or if in Override Mode and the Override State is STOP,
mark the Motor TO STOP (jogging or running).

#####  V4.00.00  2018-07-09:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added Jog function. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Stop) OTU(OCmd_Stop) [[XIC(Sts_Maint) ,XIC(Sts_Oper) ] ,XIC(Cfg_OperStopPrio) XIO(Sts_Oper) XIO(Sts_Maint) OTL(Nrdy_PrioStop) ] ,XIC(XCmd_Stop) OTU(XCmd_Stop) [XIC(Sts_Ext) ,XIC(Cfg_ExtStopPrio) XIO(Sts_Ext) OTL(Nrdy_PrioStop) ] ,XIC(PCmd_Stop) OTU(PCmd_Stop) XIC(Sts_Prog) ,EQU(Inp_OvrdCmd,1) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ,XIC(Wrk_NotRdy) ,[XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ] XIO(Sts_Hand) ][[XIC(Wrk_Run) ,[XIC(Sts_Oper) ,XIC(Sts_Maint) ,XIC(Sts_Ext) ] ONS(Wrk_RetrigONS) ] OTL(Wrk_Retrigger) RES(Wrk_SimStopT) ,OTU(Wrk_Run) OTU(Wrk_Jog) OTU(Wrk_StartHorn) ,OTU(OCmd_Jog) OTU(XCmd_Jog) ];]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[Higher Priority: HAND always beats Oper, Prog, Ovrd, Maint:
If in Hand, have the Motor follow the Run Feedback.]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Hand) ,XIO(Inp_Sim) ONS(Wrk_NoLongerSim) ,XIC(S:FS) ][XIC(Wrk_RunFdbk) OTL(Wrk_Run) ,XIO(Wrk_RunFdbk) OTU(Wrk_Run) ];]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[If anything stops the motor, also stop the pre-start audible.

#####  V4.00.00  2018-07-09:  Added audible alert prior to commanded start.  #####
#####  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_Run)XIO(Wrk_Jog)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[============================================================
MOTOR START HORN TIMING
============================================================
Sound the horn for the configured time on a start or a jog.

#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan it is enabled if its preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Run) ,XIC(Wrk_Jog) ][XIC(Wrk_StartHorn) TON(Wrk_StartHornT,?,?) TON(Wrk_StartHornT,?,?) ,XIC(Wrk_StartHornT.DN) OTU(Wrk_StartHorn) ];]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[============================================================
MOTOR START SIMULATION AND FAIL TO START DETECTION
============================================================
If the motor SHOULD BE RUNNING, run a Start Timer to check for Fail to Start, and run a
Simulation Timer to provide simulated run feedback if needed.

#####  V4.00.00  2018-07-09:  Added audible alert prior to commanded start.  #####
#####  Added Jog function.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan it is enabled if its preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Run) ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] ]XIO(Wrk_StartHorn)[TON(Wrk_StartT,?,?) ,TON(Wrk_SimRunT,?,?) TON(Wrk_SimRunT,?,?) ,XIO(Wrk_RunFdbk) TON(Wrk_StartInhT,?,?) ,XIC(Wrk_SimRunT.DN) OTU(Wrk_Retrigger) ];]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[If the Start Timer times out and the motor run feedback (or simulated feedback) never showed up,
show the motor as "FAILED TO START"]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StartT.DN)XIO(Wrk_RunFdbk)XIO(Sts_Maint)OTE(Sts_FailToStart);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[============================================================
MOTOR STOP SIMULATION AND FAIL TO STOP DETECTION
============================================================
If the motor SHOULD BE STOPPED, run a Stop Timer to check for Fail to Stop, and run a
Simulation Timer to provide simulated run feedback off (stop feedback) if needed.

#####  V4.00.00  2018-07-09:  Added Jog function.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan it is enabled if its preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_Run)[XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ][TON(Wrk_StopT,?,?) ,TON(Wrk_SimStopT,?,?) TON(Wrk_SimStopT,?,?) ,XIC(Wrk_RunFdbk) TON(Wrk_StopInhT,?,?) ,XIC(Wrk_SimStopT.DN) OTU(Wrk_Retrigger) ];]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[If the Stop Timer times out and the motor run feedback (or simulated feedback) never showed "stopped",
show the motor as "FAILED TO STOP"]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StopT.DN)XIC(Wrk_RunFdbk)XIO(Sts_Maint)OTE(Sts_FailToStop);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[============================================================
SHED ON FAULT LOGIC
============================================================
This rung handles latching in of conditions which are configured to cause
motor to shed (de-energize).]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_FailToStart)XIC(Cfg_ShedOnFailToStart)OTL(Nrdy_Fail);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[If a shed condition is latched in above, de-energize the motor.

#####  V4.10.01  2019-10-16:  Corrected handling of Jog and Horn on shed conditions.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ]XIO(Sts_Hand)OTU(Wrk_Run)OTU(Wrk_Jog)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE COMMAND ENUMERATED VALUE
============================================================
Val_Cmd is the command currently being processed:
0 = None
1 = Stop
2 = Start
4 = Jog

#####  V4.00.00  2018-07-09:  Added Jog function.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Cmd) ,XIO(Wrk_Run) [XIC(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] MOV(1,Wrk_Cmd) ,XIC(Wrk_Run) [XIO(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] MOV(2,Wrk_Cmd) ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] MOV(4,Wrk_Cmd) ,MOV(Wrk_Cmd,Val_Cmd) ];]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[============================================================
OUTPUT GENERATION
============================================================
If the motor is NOT SIMULATED, generate the appropriate outputs for the motor.

If the motor should be running, is not faulted and not in hardwired control, energice Out_Run.
Also, energize Out_Start until we get feedback that the motor is running.

If the motor should be stopped and is not in hardwired control and the feedback shows the motor
is NOT stopped, or if the motor is Faulted or Disabled, energize the Out_Stop output to stop the motor.

#####  V4.00.00  2018-07-09:  Added audible alert prior to commanded start.  #####
#####  Added Jog function.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####
#####  Corrected handling of output in Hand.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)[XIO(Sts_NotRdy) XIO(Wrk_StartHorn) [XIC(Wrk_Run) ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] ] [OTE(Out_Run) ,XIO(Sts_Hand) [XIO(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] OTE(Out_Start) ] ,XIO(Wrk_Run) [XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ] [XIC(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ,XIC(Wrk_NotRdy) ] XIO(Sts_Hand) OTE(Out_Stop) ,XIC(Wrk_StartHorn) XIO(Sts_Hand) OTE(Out_Horn) ];]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE STATUS GENERATION
============================================================
These rungs generate the Starting, Running, Stopping and Stopped Status bits.

If the motor is in HAND and HAS NO RUN FEEDBACK, its state is meaningless;
turn off ALL the Sts_xxx states!!!!!

If the motor is commanded to run (Output on) and the feedback doesn't yet show it running,
the motor is STARTING.

If the motor is commanded to run (Output on) and the feedback shows it running,
the motor is RUNNING.

If the motor is commanded to stoop (Output off) and the feedback still shows it running,
the motor is STOPPING.

If the motor is commanded to stop (Output off) and the feedback shows it has stopped,
the motor is STOPPED.

If the audible alert is active, show the Status as HORN.

#####  V4.00.00  2018-07-09:  Added Jog function.  #####
#####  V4.10.00  2019-03-25  Added Horn Status.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Sts_Hand) ,XIC(Cfg_UseRunFdbk) ][XIO(Wrk_StartHorn) XIC(Wrk_Run) XIO(Wrk_Jog) [XIO(Wrk_RunFdbk) OTE(Sts_Starting) ,XIC(Wrk_RunFdbk) OTE(Sts_Running) ] ,XIO(Wrk_Run) [XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ] [XIC(Wrk_RunFdbk) OTE(Sts_Stopping) ,XIO(Wrk_RunFdbk) OTE(Sts_Stopped) ] ,XIO(Wrk_StartHorn) XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] OTE(Sts_Jogging) ,XIC(Wrk_StartHorn) OTE(Sts_Horn) ];]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[============================================================
OPERATOR COMMAND READIES
============================================================
Ready to Start if in Operator Manual, Stopped, and Permissives and Interlocks are OK.

Ready to Stop if in Operator Manual and (Running or Starting).

#####  V4.00.00  2018-07-09:  Aligned ready bit naming with command bit names.  #####
#####  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_NotRdy)[XIO(Sts_NotRdy) ,XIC(Cfg_OCmdResets) ][[XIC(Sts_Oper) ,XIC(Sts_Maint) ] [[XIC(Sts_Stopped) ,XIC(Sts_Maint) XIC(Sts_Running) ] OTE(ORdy_Start) ,XIC(Cfg_HasJog) XIO(Wrk_Run) XIC(Wrk_PermOK) OTE(ORdy_Jog) ] ,[XIC(Sts_Oper) ,XIC(Sts_Maint) ,XIC(Cfg_OperStopPrio) ] XIO(Sts_Stopping) OTE(ORdy_Stop) ];]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
The various alarms are ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1), EXCEPT:
* If the motor DOES NOT HAVE RUN FEEDBACK, the Fail to Start and Fail to Stop
alarms will never occur and should not exist.  (If feedback exists, 
the Fail alarms must be allowed to exist.)

#####  V4.00.00  2018-07-09:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(IntlkTrip.PCfg_AllowExist) OTL(IOFault.PCfg_AllowExist) ,XIC(Cfg_HasRunFdbk) OTE(FailToStart.PCfg_AllowExist) OTE(FailToStop.PCfg_AllowExist) ];]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[Let the Alarm instance know if this object is taken Out of Service

#####  V4.00.00  2018-07-09:  Now using P_CmdSrc, including Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(CmdSrc.Sts_OoS)OTE(FailToStart.Inp_OoS)OTE(FailToStop.Inp_OoS)OTE(IntlkTrip.Inp_OoS)OTE(IOFault.Inp_OoS);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[Handle Motor Failed to Start Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(FailToStart);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[Handle Motor Failed to Stop Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(FailToStop);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[Handle Interlock Trip Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IntlkTrip);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Comment>
<![CDATA[Handle I/O Fault Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IOFault);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).]]>
</Comment>
<Text>
<![CDATA[[XIC(FailToStart.Sts_AlmInh) ,XIC(FailToStop.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Comment>
<![CDATA[This rung generates a summary Bad Config status, simply an OR of the individual bits provided above
(in the Configuration handling section).]]>
</Comment>
<Text>
<![CDATA[[XIC(Err_Timer) ,XIC(Err_Sim) ,[XIC(FailToStart.Sts_Err) ,XIC(FailToStop.Sts_Err) ,XIC(IntlkTrip.Sts_Err) ,XIC(IOFault.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(1,Wrk_SrcQ) ,XIO(Cfg_HasRunFdbk) MOV(2,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(9,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[MOV(SrcQ_IO,Wrk_SrcQ) ,XIC(Cfg_HasRunFdbk) XIO(Cfg_UseRunFdbk) MOV(18,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ) ];]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Comment>
<![CDATA[Val_Sts is the current device status, as determined by this AOI,
based on its knowledge of commands executed and feedback.
(This is the status that should be monitored by, for example, FT Historian.)
0 = Powerup / Unknown
1 = Stopped
2 = Running Forward
3 = Running Reverse
4 = Running Slow
5 = Starting Forward
6 = Starting Reverse
7 = Starting Slow
8 = Jogging Forward
9 = Jogging Reverse
10 = Stopping
14 = Horn

Val_Fault is the current device fault status, as determined by this AOI,
based on its knowledge of commands executed and feedback.
(This is the fault status that should be monitored by, for example, FT Historian.)
0 = None
16 = Fail to Start
17 = Fail to Stop
32 = I/O Fault (from Input)
34 = Configuration Error

#####  V4.00.00  2018-07-09:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  Added Jog function.  Updated Val_Sts to common enumeration across all motors and drives.  #####
#####  V4.10.00  2019-03-25:  Added Horn Status.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_Stopped) MOV(1,Wrk_Sts) ,XIC(Sts_Running) MOV(2,Wrk_Sts) ,XIC(Sts_Starting) MOV(5,Wrk_Sts) ,XIC(Sts_Jogging) MOV(8,Wrk_Sts) ,XIC(Sts_Stopping) MOV(10,Wrk_Sts) ,XIC(Sts_Horn) MOV(14,Wrk_Sts) ,XIC(Nrdy_Fail) MOV(16,Wrk_Fault) ,XIC(Sts_FailToStop) MOV(17,Wrk_Fault) ,[XIC(Sts_IOFault) ,XIC(Nrdy_IOFault) ] MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-07-09:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) OTU(Wrk_Notify.0) ,GRT(FailToStart.Val_Notify,Wrk_Notify) MOV(FailToStart.Val_Notify,Wrk_Notify) ,GRT(FailToStop.Val_Notify,Wrk_Notify) MOV(FailToStop.Val_Notify,Wrk_Notify) ,GRT(IntlkTrip.Val_Notify,Wrk_Notify) MOV(IntlkTrip.Val_Notify,Wrk_Notify) ,GRT(IOFault.Val_Notify,Wrk_Notify) MOV(IOFault.Val_Notify,Wrk_Notify) ,[XIC(FailToStart.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(FailToStop.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IntlkTrip.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IOFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_UnackAlmC,Val_UnackAlmC) ];]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Comment>
<![CDATA[Roll up the notification from the associated Overload Relay object.

#####  V4.00.00  2018-07-09:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count including attached Overload object.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(Inp_OvldNotify,Wrk_Notify) MVM(Inp_OvldNotify,2#1111_1110,Wrk_Notify) ,XIC(Inp_OvldNotify.0) OTL(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_NotifyAll) ];]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if a latched Shed condition requires a reset in order to run the motor;
* if that reset or any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-07-09:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(FailToStart.Sts_RdyAck) ,XIC(FailToStop.Sts_RdyAck) ,XIC(IntlkTrip.Sts_RdyAck) ,XIC(IOFault.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(FailToStart.Sts_RdyReset) ,XIC(FailToStop.Sts_RdyReset) ,XIC(IntlkTrip.Sts_RdyReset) ,XIC(IOFault.Sts_RdyReset) ,XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) XIO(Sts_IOFault) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear Ownership, clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, set the Ownership to NO OWNER (0).]]>
</Comment>
<Text>
<![CDATA[CLR(PSet_Owner)CLR(Val_Owner);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA["Lurking" Commands not handled elsewhere are cleared.

#####  V4.00.00  2018-07-09:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(OCmd_Start) OTU(OCmd_Stop) OTU(OCmd_Jog) ,OTU(XCmd_Start) OTU(XCmd_Stop) OTU(XCmd_Jog) ,OTU(PCmd_Start) OTU(PCmd_Stop) ,OTU(MCmd_Bypass) OTU(MCmd_Check) ,CLR(Inp_OvrdCmd) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(XCmd_Reset) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-09:  Removed Disable, Enable; now handled as OoS, IS.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_Start) OTU(ORdy_Stop) OTU(ORdy_Jog) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_Reset) OTU(ORdy_ResetAckAll) OTU(Sts_RdyAck) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Internal latches are de-energized on Prescan.

#####  V4.00.00  2018-07-09:  Added Jog function.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_Run)OTU(Wrk_Jog)OTU(Wrk_RunFdbk);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Clear the latched Shed faults.]]>
</Comment>
<Text>
<![CDATA[OTU(Nrdy_PrioStop)OTU(Nrdy_Fail)OTU(Nrdy_IOFault);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Outputs are cleared on Prescan.

#####  V4.00.00  2018-07-09:  Added Autible Alert on start.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(Out_Run)OTU(Out_Start)OTU(Out_Stop)OTU(Out_Horn);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[On Prescan, clear the following:
Val_Cmd (no command active)
Val_Fdbk (device position not determined)
Val_Sts (device status powerup / unknown)]]>
</Comment>
<Text>
<![CDATA[CLR(Val_Cmd)CLR(Val_Fdbk)CLR(Val_Sts);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_VSD" Revision="4.10" RevisionExtension=".01 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-03-27T19:50:50.098Z" CreatedBy="Not Available" EditedDate="2019-10-16T21:26:33.694Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Variable Speed Drive]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction controls and monitors a Variable-Speed (AC or DC) Drive
and provides:

*  Starting drive, stopping drive, jogging drive, setting speed reference and setting direction
*  Monitoring of run feedback, display of actual drive status, including accel, decel, direction, speed
*  Detection of Failure to Start, Failure to Stop, Drive Fault/Not Ready
*  Monitoring of Permissive conditions to allow starting
*  Monitoring of Interlock conditions to stop drive or prevent starting
*  Simulation, providing feedback of a working drive while disabling outputs
*  Monitoring of I/O communication faults
*  Alarms for Fail to Start, Fail to Stop, Interlock Trip, Drive Fault/Not Ready, I/O Fault
*  Operation in Hand, Maintenance, Override, Program and Operator Modes
*  "Available" status for use by automation logic to know whether drive
      can be controlled by other objects.
*  Horn output for audible alert prior to starting motor.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, External, Program, Override, Maintenance, Out of
Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.10.00)
See 4.10 Release Notes for details.
* Corrected handling of Start Horn on shed conditions.
* Modified to lock out jog when jog time expires until jog commands are cleared
* Modified to handle overlapping Horn and Jog times.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.02)
See 4.10 Release Notes for details.
* Changed availability to use input availability from interlocks.
* Added Horn Status, Horn Inhibit.
* Updated to P_CmdSrc V4.10.00.
* Modified simulated run feedback to handle run at zero speed ref.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.00 Release Notes for details.
* Corrected handling Allow Local when horn is enabled.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-11)
See 4.00 Release Notes for details.
* Changed "Mode" to "Command Source".
* Added audible alert on commanded start.  Added unacked alarm count.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Changed Start / Stop / Fwd / Rev / Jog to StartFwd / StartRev /Stop / JogFwd / JogRev.
* Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyAck and Sts_RdyReset for use by external objects.
* Aligned ready bit naming with command bit names.
* Added configurable decimal places for display on HMI.
* Modifications to Output Datalink clamp limit restrictions / checking.
* Changed delay / time configuration items to REAL seconds.
* Updated Val_Sts to common enumeration across all motors and drives.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Ref_FaultCodeList" TagType="Base" DataType="P_DescList" Dimensions="1" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Tag containing List of Fault Codes (DINT) and their Descriptions (STRING)]]>
</Description>
</Parameter>
<Parameter Name="Inp_SpeedFdbk" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedbak in Drive Units (typ. 0-32767 = 0 to max freq.)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_LastFaultCode" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Most recent drive fault code (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Datalink" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Auxiliary Signal (datalink) Input in Drive (raw) Units]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Ready" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is ready to run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Running" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is Running (active)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_CommandDir" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is commanded Forward, 0=Drive is commanded Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ActualDir" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is running Forward, 0=Drive is running Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Accelerating" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is accelerating]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Decelerating" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is decelerating]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Alarm" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive has an Alarm Condition (see drive display or manual)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Faulted" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive has Faulted (see drive display or manual)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_AtSpeed" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive is at commanded speed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FwdPermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, drive can start Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_FwdNBPermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, drive can start Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_RevPermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissives OK, drive can start Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_RevNBPermOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Permissives OK, motor can start Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlocks OK, drive can start/run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_NBIntlkOK" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Non-Bypassable Interlocks OK, drive can start/run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IntlkAvail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Interlock Availibility OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_IOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Communication Status 0=OK, 1=fail]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Sim" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Simulate working drive; 0=Start/Stop/ Monitor actual drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Hand" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Hand" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_Ovrd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_Ovrd" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_OvrdCmd" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Override Command: 0=None, 1=Stop, 2=Start Fwd 3=Start Rev]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_OvrdSpeed" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Value to set Speed Reference in Override Mode (SpeedRef EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_OvrdOutDatalink" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Value to set Output Datalink in Override Mode (OutDatalink EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_ExtInh" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.Inp_ExtInh" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="Inp_HornInh" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1 = Inhibit audible alert, 0 = Alllow audible alert]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset Shed Latches and Cleared Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasReverse" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive can be run reverse, 0=Forward only]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasJog" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Jog Command enabled/visible, 0=Drive Jog Command not allowed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_AllowLocal" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Allow Local Start/Stop without alarm, 0=Start/Stop from HMI/prog only]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasRunFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive provides feedback signal on Inp_Running when running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_UseRunFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive run feedback should be used for failure checking]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasSpeedFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive provides speed feedback on Inp_SpeedFdbk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_UseSpeedFdbk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive speed determines running state, 0=state determined by drive Active input bit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasInpDatalink" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=A signal is connected to Inp_Datalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasOutDatalink" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=A signal is connected to Out_Datalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasFwdPermObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_FwdPerm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasRevPermObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Perm is connected to Inp_RevPerm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasIntlkObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_Intlk is connected to Inp_Intlk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasResInhObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_ResInh Restart Inhibit is connected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasRunTimeObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI a P_RunTime is connected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SetTrack" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Settings track for unselected sources, 0=no tracking]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SetTrackOvrdHand" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Prog/Oper/Ext Settings track Override/Hand]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OperStopPrio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=OCmd_Stop any time, 0=OCmd_Stop only when Oper selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtStopPrio" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=XCmd_Stop any time, 0=XCmd_Stop only when Ext selected]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New drive OCmd resets shed latches and cleared alarms, 0=OCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_XCmdResets" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=New drive XCmd resets shed latches and cleared alarms, 0=XCmdReset req'd.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OvrdPermIntlk" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Override ignores Bypassable Perm/ Intlk; 0=always use Perm/Intlk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnFailToStart" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Stop Motor and Alarm on Fail to Start; 0=Alarm only on Fail to Start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ShedOnIOFault" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Stop Motor and Alarm on I/O Fault; 0=Alarm only on I/O Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SimScaleEU" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=In simulation, scale Speed Ref EU to Speed Fdbk EU]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SimScaleRaw" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=In simulation, scale Speed Ref EU to raw, then raw to Speed Fdbk EU]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_DecPlcs" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of decimal places for speed ref/fdbk display (0..6)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpDLDecPlcs" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of decimal places for Input Datalink display (0..6)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDLDecPlcs" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of decimal places for Output Datalink display (0..6)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="2"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasFailToStartAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasFailToStopAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIntlkTripAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasDriveFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_HasIOFaultAlm" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Exists" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm exists and will be checked]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset requied to clear Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DriveFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultResetReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_ResetReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset required to clear I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DriveFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultAckReqd" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_AckReqd" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Acknowledge required for I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStartSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail To Start Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_FailToStopSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Fail To Stop Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IntlkTripSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_DriveFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Drive Fault Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_IOFaultSeverity" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.Cfg_Severity" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm Severity: 1..250=Low, 251..500=Medium, 501..750=High, 751..1000=Urgent]]>
</Description>
</Parameter>
<Parameter Name="Cfg_MinSpdRef" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum Speed Reference in EU (for limiting)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaxSpdRef" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maximum Speed Reference in EU (for limiting)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[6.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="60.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedRefRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Reference Minimum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedRefRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Reference Maximum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3.27670000e+004]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="32767.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedRefEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Reference Minimum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedRefEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Reference Maximum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.30000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="130.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedFdbkRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedback Minimum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedFdbkRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedback Maximum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[3.27670000e+004]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="32767.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedFdbkEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedback Minimum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SpeedFdbkEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedback Maximum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.30000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="130.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpDatalinkRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Datalink Minimum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpDatalinkRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Datalink Maximum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.09500000e+003]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4095.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpDatalinkEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Datalink Minimum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_InpDatalinkEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Input Datalink Maximum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.09500000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="409.5"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Minimum Output Datalink in EU (for limiting)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maximum Output Datalink in EU (for limiting)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="100.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkRawMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output Datalink Minimum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkRawMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output Datalink Maximum in Drive (raw) Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.09500000e+003]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4095.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkEUMin" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output Datalink Minimum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OutDatalinkEUMax" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Output Datalink Maximum in Engineering Units (for scaling)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.09500000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="409.5"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_StartHornT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to sound audible on commanded start (sec) (0=disabled)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SimRampT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to ramp speed fdbk when in Simulation (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="10.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailToStartT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time after Start to get Run Feedback before Fault (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="15.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FailToStopT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time after Stop to drop Run Feedback before Fault (sec)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.50000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="15.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ResetPulseT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time to pulse Out_Reset to clear drive fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[2.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="2.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_MaxJogT" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maximum jog time (sec, 0=unlimited)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OperKeep" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper keeps control in Prog / Ext: .0=Reference, .1=Start/Stop/Fwd/ Rev, .3=OutDatalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ProgKeep" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Prog keeps control in Oper / Ext: .0=Reference, .1=Start/Stop/Fwd/ Rev, .3=OutDatalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ExtKeep" TagType="Base" DataType="SINT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Ext keeps control in Prog / Oper: .0=Reference, .1=Start/Stop/Fwd/ Rev, .3=OutDatalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Binary" Value="2#0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="PSet_SpeedRef" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Setting of Speed Reference (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PSet_OutDatalink" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Setting of Output Datalink (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PSet_Owner" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Owner Request ID (non-zero) or Release (zero)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XSet_SpeedRef" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Setting of Speed Reference (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="XSet_OutDatalink" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Setting of Output Datalink (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_StartFwd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Start Drive Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_StartRev" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Start Drive Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Stop" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Stop Drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Prog" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Prog" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Oper" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Oper" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Lock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Lock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Normal" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.PCmd_Normal" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset drive fault and all Alarms requiring Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_FailToStartAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStartUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStart.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_FailToStopUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="FailToStop.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IntlkTripUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IntlkTrip.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Interlock Trip Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DriveFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DriveFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DriveFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_DriveFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="DriveFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve Drive Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultAck" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Acknowledge I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultSuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Suppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Suppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnsuppress" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unsuppress" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unsuppress I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="PCmd_IOFaultUnshelve" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="IOFault.PCmd_Unshelve" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Unshelve I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="MCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.MCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="OCmd_Unlock" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.OCmd_Unlock" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_StartFwd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Start Drive Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_StartRev" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Start Drive Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Stop" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Stop Drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_JogFwd" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Jog Drive Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_JogRev" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[External Command to Jog Drive Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="XCmd_Acq" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Acq" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Rel" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="CmdSrc.XCmd_Rel" Required="false" Visible="false" ExternalAccess="Read/Write"/>
<Parameter Name="XCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Ext Cmd to clear shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_SpeedRef" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Drive Speed Reference in Drive Units (typ. 0-32767 = 0 to max freq.)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Datalink" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Auxiliary Signal (datalink) Output in Drive (raw) Units]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Run" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Start/Run Drive, 0=Stop Drive (for held starter type)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Stop" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Stop Drive, 0=drive left in current state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Start Drive, 0=drive left in current state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Jog" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Jog drive at Jog Speed, -->0=stop jogging]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_ClearFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Attempt to clear Drive Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Fwd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Set drive direction to Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Rev" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Set drive direction to Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Sound audible prior to commanded motor start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedRef" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Speed Reference (target) to drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedFdbk" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Speed Feedback (actual) from drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_InpDatalink" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Input Datalink value from drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_OutDatalink" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Output Datalink value to drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedRefEUMin" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Minimum of Speed Reference = MIN (Cfg_SpeedFdbkEUMin, Cfg_SpeedFdbkEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedRefEUMax" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Maximum of Speed Reference = MAX (Cfg_SpeedFdbkEUMin, Cfg_SpeedFdbkEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.30000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="130.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedFdbkEUMin" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Minimum of Speed Feedback = MIN (Cfg_SpeedFdbkEUMin, Cfg_SpeedFdbkEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SpeedFdbkEUMax" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Maximum of Speed Feedback = MAX (Cfg_SpeedFdbkEUMin, Cfg_SpeedFdbkEUMax)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.30000000e+002]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="130.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_LastFaultCode" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Most recent drive fault code (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ_IO" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary I/O (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="SrcQ" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Source and Quality of primary Val/Sts (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Cmd" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Command 0=None, 1=Stop, 2=StartFwd 3=StartRev 4=JogFwd 5=JogRev]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fdbk" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Feedback 0=Stopped, 1=Running Fwd 2=Running Rev 3=Accelerating 4=Decelerating]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Sts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Sts: 0=? 1=Stopped 2=RunFwd 3=RunRev 4=RunSlow 5=StartFwd 6=StartRev 7=StartSlow 8=JogFwd 9=JogRev 10=Stopping]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fault" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Fault Status 0=None, 16=Fail to Start, 17 = Fail to Stop, 18=Drive Fault, 32=I/O Fault, 34=Config Error]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_NotifyAll" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest Alarm prio and ack status this object + channel (enum)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_UnackAlmC" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Count of Unacknowledged Alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Owner" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Object Owner ID (0=not owned)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Stopped" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to stop and is confirmed stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_StartingFwd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to run forward and awaiting run feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_StartingRev" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to run reverse and awaiting run feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RunningFwd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to run and is confirmed running forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RunningRev" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to run and is confirmed running reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_StoppingFwd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive running forward requested to stop and awaiting stopped feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_StoppingRev" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive running reverse requested to stop and awaiting stopped feedback]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_JoggingFwd" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to Jog Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_JoggingRev" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive requested to Jog Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Horn" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Motor Horn Active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_CommandDir" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive commanded to Forward, 0=Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_ActualDir" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive Actual direction is Forward, 0=Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Accel" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive is Accelerating]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Decel" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive is Decelerating]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NotReady" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive is Not Ready (cannot be started)
Check alarms, stops, faults]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive has an Alarm (see drive display or manual)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AtSpeed" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive is running at reference speed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_SpeedLimited" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Speed Reference Setting exceeds configured Max/Min limit]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Available" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Drive available for control by automation (Prog)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Bypass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Bypassable Interlocks and Permissives are Bypassed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_BypActive" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Bypassing Active (Bypassed or Maintenance)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NotRdy" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready, see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_CfgErr" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Configuration Error]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_DriveNR" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Note Ready: Drive Not Ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device Failure (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Intlk" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Interlock Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_IOFault" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: I/O Fault (Shed Requires Reset)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_OoS" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Device is Out of Service]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Perm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Permissive Not OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_PrioStop" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device Not Ready: Oper/Ext Priority Stop Requires Reset]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Nrdy_Trip" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Device not Ready: Deivce Tripped (Drive Fault)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_MaintByp" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A Maintenance Bypass is Active, display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_AlmInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An Alarm is Shelved, Disabled or Suppressed, display icon]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: see detail bits for reason]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Timer" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Invalid Check or Reset Pulse Time (use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Sim" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: simulation timer preset: use 0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_Alarm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Alarm Min On Time, Shelf Time, Severity]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_FdbkRaw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Erron in Config: Speed Fdbk Raw Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_FdbkEU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Speed Fdbk EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_RefLim" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Speed Ref Limit Min > Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_RefEU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Speed Ref EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_RefRaw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Speed Ref Raw Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_InpDLRaw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Input Datalink Raw Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_InpDLEU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Input Datalink EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_OutDLLim" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Output Datalink Limits Min > Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_OutDLEU" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Output Datalink EU Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Err_OutDLRaw" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Output Datalink Raw Min = Max]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Hand" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Hand" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OoS" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OoS" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Maint" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Maint" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ovrd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ovrd" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Ext" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Ext" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Prog" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Prog" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgLocked" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Oper" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Oper" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_OperLocked" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_OperLocked" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Normal" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_Normal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ExtReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ExtReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ProgReqInh" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_ProgReqInh" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_MAcqRcvd" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.Sts_MAcqRcvd" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched alarm or shed condition is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_RdyAck" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=An alarm is ready to be acknowledged]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Failed to Start (One-Shot)]]>
</Description>
</Parameter>
<Parameter Name="Alm_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fail to Start Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_FailToStart" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStartSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStart.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Start Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Failed to Stop]]>
</Description>
</Parameter>
<Parameter Name="Alm_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fail to Stop Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_FailToStop" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_FailToStopSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="FailToStop.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Fail to Stop Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive was stopped by an Interlock NOT OK (One-Shot)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Drive stopped by an Interlock NOT OK]]>
</Description>
</Parameter>
<Parameter Name="Ack_IntlkTrip" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IntlkTripSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IntlkTrip.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Trip Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_DriveFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault (see drive display or manual)]]>
</Description>
</Parameter>
<Parameter Name="Alm_DriveFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Alarm: Drive Fault (see drive display or manual)]]>
</Description>
</Parameter>
<Parameter Name="Ack_DriveFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_DriveFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_DriveFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_DriveFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="DriveFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Drive Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Inp" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Comm Fault Status (0=OK, 1=Bad)]]>
</Description>
</Parameter>
<Parameter Name="Alm_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Alm" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm]]>
</Description>
</Parameter>
<Parameter Name="Ack_IOFault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Ack" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been acknowledged]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultDisabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Disabled" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Disabled by Maintenance]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultShelved" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Shelved" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Shelved by Operator]]>
</Description>
</Parameter>
<Parameter Name="Sts_IOFaultSuppressed" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="IOFault.Suppressed" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=I/O Fault Alarm has been Suppressed by Program]]>
</Description>
</Parameter>
<Parameter Name="MRdy_Rel" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.MRdy_Rel" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="ORdy_Unlock" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="CmdSrc.ORdy_Unlock" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="P_VSD" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="CmdSrc" DataType="P_CmdSrc" ExternalAccess="Read/Write">
<Description>
<![CDATA[Drive Mode Selection]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7649,0,0,1,0,[8,'P_CmdSrc$00$00$00$00'],[6,'RA-BAS$00$00']]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_CmdSrc">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_ExtInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasOper" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasOperLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProg" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasProgLocked" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasExt" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMaint" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasMOoS" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_OvrdOverLock" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_ExtOverLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgPwrUp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ProgNormal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdPriority" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdProgAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_PCmdLockAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ExtAcqAsLevel" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_eSrc" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Sts_bSrc" DataType="INT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Sts_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Maint" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ext" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OperLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperSel" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgOperLock" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ExtReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_MAcqRcvd" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_IS" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_CmdSrc" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IOFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[I/O Fault Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'I/O Fault$00$00$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="IntlkTrip" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Trip Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,500,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Interlock Trip$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="500"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="FailToStop" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Drive Failed to Stop Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Failed to Stop$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="FailToStart" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Drive Failed to Start Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'Failed to Start$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_VSD$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_VSD']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[19,'Motor Speed Control$00']]]>
</DefaultData>
<DefaultData Format="String" Length="19">
<![CDATA['Motor Speed Control']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[20,'Variable Speed Drive$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="20">
<![CDATA['Variable Speed Drive']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Run" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Drive should be "running", 0=should be "stopped"]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartRetrigT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time to pulse start output on start command retrigger (Maint)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StopRetrigT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time to pulse stop output on stop command retrigger (Maint)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RunFdbk" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Run Feedback based on mode, simulation, etc. 1=running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Notify]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal Bypassable Permissives and Interlocks are Bypassed flag]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="DriveFault" DataType="P_Alarm" ExternalAccess="Read/Write">
<Description>
<![CDATA[Drive Faulted Alarm]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[961,1000,0,5,0,0,0,[0,5000,0],[0,5000,0],[0,0,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[11,'Drive Fault$00$00$00$00$00$00$00$00$00'],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="P_Alarm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_Exists" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_AckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowShelve" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowDisable" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_Severity" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Cfg_MaxShelfT" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Cfg_AlmMinOnT" DataType="DINT" Radix="Decimal" Value="5"/>
<DataValueMember Name="PCfg_AllowExist" DataType="BOOL" Value="1"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Ack" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Suppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Notify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_MinToUnshelve" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Alm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack" DataType="BOOL" Value="1"/>
<DataValueMember Name="Shelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Suppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Disabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Severity" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Alarm" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_SpeedRefEU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Reference Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[2,'Hz$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="2">
<![CDATA['Hz']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SpeedRef" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Working copy of Speed Reference (for limiting)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Rev" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Working (internal) Direction 1=Reverse 0=Forward (default)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Jog" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Jog Drive, 0=Drive not jogging]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ResetT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Reset Output Pulse Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ResetONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[One-Shot to fire Reset Timer to ensure min. output ON time.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_SpeedFdbkEU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Speed Feedback Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[2,'Hz$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="2">
<![CDATA['Hz']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_OutDatalinkLabel" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Datalink Output Label displayed on faceplate]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_InpDatalinkLabel" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Datalink Input Label displayed on faceplate]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_OutDatalinkEU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Datalink Output Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_InpDatalinkEU" DataType="STRING_8" ExternalAccess="Read/Write">
<Description>
<![CDATA[Datalink Input Engineering Units for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OutDatalink" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Selected Output Datalink setting]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_RevText" DataType="STRING_16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Name for Reverse Direction, e.g., "Down", "Reverse"]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'Reverse$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['Reverse']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_FwdText" DataType="STRING_16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Name for Forward Direction, e.g., "Up", "Forward"]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'Forward$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['Forward']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StopT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Stop Check Timer (for Fail to Stop)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Start Check Timer (for Fail to Start)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Cmd" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Cmd]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Sts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fault" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fault]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Retrigger" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Maint Start issued while running or Stop while stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Step" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Amount to change simulated Speed Fdbk this scan (ramp)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ScanTime" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Seconds since previous scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ScanT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Scan Timer (milliseconds, always runs)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,2147483647,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2147483647"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimFdbkTgt" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Speed Ref converted to Speed Fdbk units for simulation: target speed fdbk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Type identifier for HMI navigation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[5,'P_VSD$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="5">
<![CDATA['P_VSD']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_JogT" DataType="TIMER" ExternalAccess="Read Only">
<Description>
<![CDATA[Jog Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FaultDescFSC" DataType="CONTROL" ExternalAccess="None">
<Description>
<![CDATA[FSC control for Fault Code List search]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,1,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="CONTROL">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="POS" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="EU" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
<DataValueMember Name="EM" DataType="BOOL" Value="0"/>
<DataValueMember Name="ER" DataType="BOOL" Value="0"/>
<DataValueMember Name="UL" DataType="BOOL" Value="0"/>
<DataValueMember Name="IN" DataType="BOOL" Value="0"/>
<DataValueMember Name="FD" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_FaultDesc" DataType="STRING_40" ExternalAccess="Read Only">
<Description>
<![CDATA[Description of Drive Fault (given LastFaultCode)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperKeep3ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Oper Keep bit 3 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperKeep1ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Oper Keep bit 1 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperKeep0ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Oper Keep bit 0 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgKeep3ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Prog Keep bit 3 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgKeep1ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Prog Keep bit 1 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgKeep0ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Prog Keep bit 0 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimScaleEUONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Cfg_SimScaleEU became true this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SimScaleRawONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Cfg_SimScaleRaw became true this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SrcQ" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Register for building Source / Quality enumeration]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_Notify" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[Current Alarm Level and Acknowledgement (enumeration)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NotRdyONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Assert Stop on One-Shot of Sts_NotRdy]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NotRdy" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Device Not Ready conditions excluding shed latches]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartInhT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Local Start Inhibit Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StopInhT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Local Stop Inhibit Timer]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NoLongerSim" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Switched from Simulated to Real Drive this scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Hand" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Perform Hand Mode alignment with actual device state]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_UnackAlmC" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_UnackAlmC]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHornT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer for audible alert or start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_StartHorn" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Sound audible prior to commanded motor start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RevPermOK" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Reverse Permissives and NB Permissive OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FwdPermOK" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Forward Permissives and NB Permissive OK]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to reset shed latches and cleared alarms, plus  Acknowledge alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Oper Cmd to clear shed latches and cleared alarms]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_JogRev" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Jog Drive Reverse (not cleared by instruction!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_JogFwd" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Jog Drive Forward (not cleared by instruction!)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Stop" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Stop Drive]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_StartRev" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Start Drive Reverse]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_StartFwd" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Start Drive Forward]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Check (not bypass) all Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Bypass all Bypassable Interlocks and Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OSet_OutDatalink" DataType="REAL" Radix="Float" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Setting of Output Datalink (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OSet_SpeedRef" DataType="REAL" Radix="Float" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Setting of Speed Reference (EU)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_ResetAckAll" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_ResetAckAll (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_JogRev" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_JogRev (enabled HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_JogFwd" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_JogFwd (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Stop" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Stop (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_StartRev" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_StartRev (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_StartFwd" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_StartFwd (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_OSet" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OSets (other than Speed Ref) (enables data entry fields)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_SpeedRef" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OSet_SpeedRef (enables data entry field)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Check" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Check (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MRdy_Bypass" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for MCmd_Bypass (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtKeep3ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Ext Keep bit 3 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtKeep1ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Ext Keep bit 1 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtKeep0ONS" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Ext Keep bit 0 one-shot store]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtHas3" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[External has Output Datalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtHas1" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[External has Commands]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ExtHas0" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[External has Speed Reference]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgHas3" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Program has Output Datalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgHas1" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Program has Commands]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_ProgHas0" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Program has Speed Reference]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperHas3" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Operator has Output Datalink]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperHas1" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Operator has Commands]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_OperHas0" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Operator has Speed Reference]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Out of Service is asserted; Outputs OFF; Run Status shown but Alarms inhibited]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
Handle "Programmed Out of Servie" Selection using the standard
P_CmdSrc AOI (EnableInFalse Routine, false scan required!).

#####  V4.00.00  2018-07-13:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(EnableIn)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[First-Come First-Served Ownership Arbitration still needs to happen, even when device is disabled.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA["Lurking" Operator and Program Commands are cleared.
(Lurking Acknowledge Commands are left to perform their action.)

#####  V4.00.00  2018-07-13:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(OCmd_StartFwd) OTU(OCmd_StartRev) OTU(OCmd_Stop) ,OTU(OCmd_JogFwd) OTU(OCmd_JogRev) ,OTU(XCmd_StartFwd) OTU(XCmd_StartRev) OTU(XCmd_Stop) ,OTU(XCmd_JogFwd) OTU(XCmd_JogRev) ,OTU(PCmd_StartFwd) OTU(PCmd_StartRev) OTU(PCmd_Stop) ,OTU(MCmd_Bypass) OTU(MCmd_Check) ,CLR(Inp_OvrdCmd) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(XCmd_Reset) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-13:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Command Source and Commands. Added Jog function.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_StartFwd) OTU(ORdy_StartRev) OTU(ORdy_Stop) OTU(ORdy_JogFwd) OTU(ORdy_JogRev) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_ResetAckAll) OTU(ORdy_Reset) OTU(Sts_RdyAck) OTU(ORdy_SpeedRef) OTU(ORdy_OSet) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[============================================================
VALUES PROCESSING
============================================================
This rung outputs instruction Values:

Val_SpeedFdbk (actual running speed), if not in simulation,
from Input.  If in simulation, simulate disabled drive (stopped).]]>
</Comment>
<Text>
<![CDATA[[[EQU(Cfg_SpeedFdbkRawMax,Cfg_SpeedFdbkRawMin) OTE(Err_FdbkRaw) ,EQU(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) OTE(Err_FdbkEU) ] ,XIO(Inp_Sim) XIO(Err_FdbkRaw) CPT(Val_SpeedFdbk,Cfg_SpeedFdbkEUMin+(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)/(Cfg_SpeedFdbkRawMax-Cfg_SpeedFdbkRawMin)*(Inp_SpeedFdbk-Cfg_SpeedFdbkRawMin)) ,[XIC(Inp_Sim) ,XIC(Err_FdbkRaw) ] CLR(Val_SpeedFdbk) ];]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[This rung publishes the Values for the scaled speed feedback range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the VSD and PID ranges are in lockstep.]]>
</Comment>
<Text>
<![CDATA[[GEQ(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMin,Val_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMax,Val_SpeedFdbkEUMax) ,LES(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMin,Val_SpeedFdbkEUMax) MOV(Cfg_SpeedFdbkEUMax,Val_SpeedFdbkEUMin) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Inputs, including Input Datalink, are updated, even on false rung!

If the Input Datalink is used, scale the value and report errors.
If not used, set value to zero.]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_HasInpDatalink) [[EQU(Cfg_InpDatalinkRawMax,Cfg_InpDatalinkRawMin) OTE(Err_InpDLRaw) ,EQU(Cfg_InpDatalinkEUMax,Cfg_InpDatalinkEUMin) OTE(Err_InpDLEU) ] ,XIO(Err_InpDLRaw) CPT(Val_InpDatalink,Cfg_InpDatalinkEUMin+(Cfg_InpDatalinkEUMax-Cfg_InpDatalinkEUMin)/(Cfg_InpDatalinkRawMax-Cfg_InpDatalinkRawMin)*(Inp_Datalink-Cfg_InpDatalinkRawMin)) ] ,[XIO(Cfg_HasInpDatalink) ,XIC(Err_InpDLRaw) ] CLR(Val_InpDatalink) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[These are the only Config Error bits we're checking in EnableInFalse.
Still, generate the summary Sts_Err for breadcrumb and Val_Sts.]]>
</Comment>
<Text>
<![CDATA[[XIC(Err_FdbkRaw) ,XIC(Err_FdbkEU) ,XIC(Err_InpDLRaw) ,XIC(Err_InpDLEU) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[The Running Forward / Running Reverse Status bits showsif the drive is running,
even though the drive is Out of Service (Prog) by being on a false rung.

#####  V4.00.00  2018-07-13:  Changed Running/Stoppped / Forward/Reverse  #####
#####  to Running Fwd / Running Rev / Stopped.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)[XIC(Cfg_UseRunFdbk) XIC(Inp_Running) ,XIO(Cfg_UseRunFdbk) CMP(ABS(Val_SpeedFdbk)>(0.001*Cfg_SpeedFdbkEUMax)) ][XIC(Inp_ActualDir) OTE(Sts_RunningFwd) ,XIO(Inp_ActualDir) OTE(Sts_RunningRev) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The Stopped Status (Sts_Stopped) bit shows if the drive is stopped,
even though the drive is Out of Service (Prog) by being on a false rung.

#####  V4.00.00  2018-07-13:  Changed Running/Stoppped / Forward/Reverse  #####
#####  to Running Fwd / Running Rev / Stopped.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Sts_RunningFwd)XIO(Sts_RunningRev)OTE(Sts_Stopped);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[The remaining actual drive status bits are passed through to Status,
even though the drive is Out of Service (Prog) by being on a false rung.]]>
</Comment>
<Text>
<![CDATA[[[XIO(Inp_Sim) XIC(Inp_ActualDir) ,XIC(Inp_Sim) XIO(Wrk_Rev) ] OTE(Sts_ActualDir) ,[XIO(Inp_Sim) XIC(Inp_CommandDir) ,XIC(Inp_Sim) XIO(Wrk_Rev) ] OTE(Sts_CommandDir) ,XIO(Inp_Sim) [XIC(Inp_Accelerating) OTE(Sts_Accel) ,XIC(Inp_Decelerating) OTE(Sts_Decel) ,XIC(Inp_AtSpeed) OTE(Sts_AtSpeed) ,XIO(Inp_Ready) OTE(Sts_NotReady) OTE(Nrdy_DriveNR) ] ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[If the drive is Faulted, this rung finds the Fault Description for
the given Fault Code within the Reference Fault Code List 
(In/Out Parameter).  (The same Fault Code List tag
can be referenced by ALL instances of this instruction
that use the fault code -- same drive class!!!)

1.  Find the number of entries in the Fault Code List (Array SIZE).
2.  Search (FSC) the Fault Code List for a matching Code.
3.  If found, copy the corresponding Description to Val_FaultDesc.
4.  If NOT found, copy list entry zero ("No Help Available for this code").]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_DriveFault)[RES(Wrk_FaultDescFSC) SIZE(Ref_FaultCodeList,0,Wrk_FaultDescFSC.LEN) ,FSC(Wrk_FaultDescFSC,?,?,ALL,Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Code=Inp_LastFaultCode) ,XIC(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Desc,Val_FaultDesc,1) ,XIO(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[0].Desc,Val_FaultDesc,1) ];]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[Val_Fdbk is the current state of the device feedback, as seen on the AOI's Inputs:
0 = Stopped
1 = Running Forward
2 = Running Reverse
3 = Accelerating
4 = Decelerating

#####  V4.00.00  2018-07-13:  Changed Running/Stoppped / Forward/Reverse  #####
#####  to Running Fwd / Running Rev / Stopped.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Stopped) XIO(Sts_Accel) XIO(Sts_Decel) CLR(Val_Fdbk) ,XIC(Sts_RunningFwd) MOV(1,Val_Fdbk) ,XIC(Sts_RunningRev) MOV(2,Val_Fdbk) ,XIC(Sts_Accel) MOV(3,Val_Fdbk) ,XIC(Sts_Decel) MOV(4,Val_Fdbk) ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[When Out of Service, set drive to stop.]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_Run)OTU(Wrk_Jog);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[Reset the fault and command retrigger timers.]]>
</Comment>
<Text>
<![CDATA[RES(Wrk_StartT)RES(Wrk_StopT)RES(Wrk_JogT)RES(Wrk_StartRetrigT)RES(Wrk_StopRetrigT);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[Set drive to Stop in Programmed Out of Service (PooS).

#####  V4.00.00  2018-07-03:  Added Audible Alert on start.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Out_Start) OTL(Out_Stop) OTU(Out_Run) OTU(Out_Jog) ,OTU(Out_Fwd) OTU(Out_Rev) OTU(Out_ClearFault) OTU(Out_Horn) ,CLR(Out_SpeedRef) CLR(Out_Datalink) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[============================================================
REMAINING DRIVE VALUES AND STATUS
============================================================
This rung copies a number of values from the drive directly
to their final Value and Status output parameters.]]>
</Comment>
<Text>
<![CDATA[NEQ(Inp_LastFaultCode,0)MOV(Inp_LastFaultCode,Val_LastFaultCode);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[If the drive is Faulted, this rung finds the Fault Description for
the given Fault Code within the Reference Fault Code List 
(In/Out Parameter).  (The same PF75x Fault Code List
can be referenced by ALL instances of this instruction!!!)

1.  Find the number of entries in the Fault Code List (Array SIZE).
2.  Search (FSC) the Fault Code List for a matching Code.
3.  If found, copy the corresponding Description to Val_FaultDesc.
4.  If NOT found, copy list entry zero ("No Help Available for this code").

And if the drive is not faulted, clear the Val_FaultDesc string.]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_DriveFault) [RES(Wrk_FaultDescFSC) SIZE(Ref_FaultCodeList,0,Wrk_FaultDescFSC.LEN) ,FSC(Wrk_FaultDescFSC,?,?,ALL,Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Code=Val_LastFaultCode) ,XIC(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Desc,Val_FaultDesc,1) ,XIO(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[0].Desc,Val_FaultDesc,1) ] ,XIO(Sts_DriveFault) FLL(0,Val_FaultDesc,1) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[Show the drive as Out of Service and Not Ready, not Available, and with no
Maintenance Bypass breadcrumb.
Clear speed reference and output datalink values.
Show the enumerated drive command as NONE.
Show the enumerated drive status as STOPPED, RUNNING FORWARD, OR RUNNING REVERSE.
Show the enumberated drive fault status as NONE, except show
as CONFIG ERR if there is a configuration error.

#####  V4.00.00  2018-07-13:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  Updated Val_Sts to common enumeration across all motors and drives.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(Sts_NotRdy) OTU(Sts_Available) OTU(Sts_MaintByp) ,OTL(Nrdy_OoS) OTU(Nrdy_Intlk) OTU(Nrdy_Perm) ,OTU(Nrdy_PrioStop) OTU(Nrdy_Fail) OTU(Nrdy_IOFault) ,OTU(Sts_StartingFwd) OTU(Sts_StoppingFwd) OTU(Sts_JoggingFwd) OTU(Sts_Horn) ,CLR(Val_SpeedRef) ,XIC(Sts_Stopped) MOV(1,Val_Sts) ,XIC(Sts_RunningFwd) MOV(2,Val_Sts) ,XIC(Sts_RunningRev) MOV(3,Val_Sts) ,CLR(Val_Cmd) CLR(Val_Fault) ,XIC(Sts_Err) OTE(Nrdy_CfgErr) MOV(34,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_SrcQ) ,[XIO(Cfg_HasRunFdbk) ,XIO(Cfg_HasSpeedFdbk) ] MOV(1,Wrk_SrcQ) ,XIO(Cfg_HasRunFdbk) XIO(Cfg_HasSpeedFdbk) MOV(2,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(9,Wrk_SrcQ) ,[XIC(Err_FdbkRaw) ,XIC(Err_FdbkEU) ] MOV(35,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[MOV(20,SrcQ);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[If the device is OFF-SCAN (rung is false or EnableIn is false in FBD),
then show the alarms as "Parent object out of service".
Show the overall acknowledgement status.

#####  V4.00.00  2018-07-13:  Changed P_Mode to P_CmdSrc, added Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(FailToStart.Inp_OoS) P_Alarm(FailToStart) ,OTL(FailToStop.Inp_OoS) P_Alarm(FailToStop) ,OTL(IntlkTrip.Inp_OoS) P_Alarm(IntlkTrip) ,OTL(DriveFault.Inp_OoS) P_Alarm(DriveFault) ,OTL(IOFault.Inp_OoS) P_Alarm(IOFault) ,CLR(Val_Notify) CLR(Val_NotifyAll) ,[XIC(FailToStart.Val_Notify.0) ,XIC(FailToStop.Val_Notify.0) ,XIC(IntlkTrip.Val_Notify.0) ,XIC(DriveFault.Val_Notify.0) ,XIC(IOFault.Val_Notify.0) ] OTL(Val_Notify.0) OTL(Val_NotifyAll.0) ,[XIC(FailToStart.Sts_AlmInh) ,XIC(FailToStop.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(DriveFault.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ] OTE(Sts_AlmInh) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Normal Scan: control / monitor Variable-Speed Drive]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_VSD :  PROCESS -- VARIABLE SPEED DRIVE
============================================================
Revision 4.10.01 Release  2019-10-16:  See V4.10.xx Release Notes for details.
V1.x, V2.x, V3.x Revision History archived.
V4.00.00  2018-07-13:  Changed "Mode" to "Command Source".
Added audible alert on commanded start.  Added unacked alarm count.
Changed Inf_ items to HMI_, and added Cfg_Area for security.
Changed Start / Stop / Fwd / Rev / Jog to StartFwd / StartRev /Stop / JogFwd / JogRev.
Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyAck and Sts_ResetReqd for use by external objects.
Aligned ready bit naming with command bit names.
Added configurable decimal places for display on HMI.
Modifications to Output Datalink clamp limit restrictions / checking.
Changed delay / time configuration items to REAL seconds.
Updated Val_Sts to common enumeration across all motors and drives.
V4.00.02  2018-10-30:  Corrected handling Allow Local when horn is enabled
V4.10.00  2019-03-25:  Changed availability to use input availability from interlocks.
Added Horn Status, Horn Inhibit. Updated to P_CmdSrc V4.10.00.
Modified simulated run feedback to handle run at zero speed ref.
Added Cfg_HasMoreObj.
V4.10.01  2019-10-16:  Corrected handling of Start Horn on shed conditions.
Modified to lock out jog when jog time expires until jog commands
are cleared. Modified to handle overlapping Horn and Jog times.
============================================================
This Instruction controls and monitors a Variable-Speed Drive (AC or DC) and provides:

*  Starting, stopping, jogging of drive, setting speed reference and direction
*  Monitoring of run feedback, display of actual drive status, including accel, decel, direction, speed
*  Detection of Failure to Start, Failure to Stop, Drive Fault
*  Monitoring of Permissive conditions to allow starting
* Monitoring of Interlock conditions to stop / prevent starting
* Simulation, providing feedback of a working drive while disabling outputs
* Monitoring of I/O communication faults
* Alarms for Fail to Start, Fail to Stop, Interlock Trip, Drive Fault, I/O Fault
* Option to automatically reset faults and alarms when operator commands
motor to start or stop
* Supports HMI "breadcrumbs" for Alarm Inhibited, Bad Configuration,
Not Ready, Maintenance Bypass Active
* "Available" status for use by automation logic to know whether motor
can be controlled by other objects.
* Horn output for audible alert prior to starting motor.

Command Sources are arbitrated by a P_CmdSrc Add-On Instruction instance.
Command Sources: Operator, External, Program, External, Override, Maintenance,
Out of Service, Hand.  Alarms are provided by P_Alarm Add-On Instruction instances.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-13:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)[LOWER(Cfg_Desc,Cfg_Label) LOWER(Cfg_Tag,Cfg_Area) LOWER(Cfg_FwdText,Cfg_RevText) LOWER(Cfg_SpeedRefEU,Cfg_SpeedFdbkEU) ,LOWER(Cfg_InpDatalinkLabel,Cfg_InpDatalinkEU) LOWER(Cfg_OutDatalinkLabel,Cfg_OutDatalinkEU) LOWER(HMI_Lib,HMI_Type) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[This rung handles received Command Source selection Inputs and Commands:

NOTE:  All Commands for Command Source and Alarm are aliased directly to the
corresponding Commands in the contained P_CmdSrc and P_Alarm AOIs.

#####  V4.00.00  2018-07-13:  Changed P_Mode to P_CmdSrc.  #####]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)P_CmdSrc(CmdSrc);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[This rung handles simple First-Come First-Served Ownership Arbitration.
If a requestor supplies a non-zero Owner ID and the current owner is NONE (zero),
Ownership is assigned to the requesting ID.  When that requestor sets the Owner ID back
to zero, Ownership is relinquished back to NONE.]]>
</Comment>
<Text>
<![CDATA[[EQU(PSet_Owner,0) ,EQU(Val_Owner,0) ]MOV(PSet_Owner,Val_Owner);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
CONFIGURATION PROCESSING
============================================================
If the device is configured to not HAVE device feedback input (engineer),
it cannot be USE the feedback for fail checking (maintenance).]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_HasRunFdbk)OTU(Cfg_UseRunFdbk)OTU(Cfg_AllowLocal);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[If the device is configured to not HAVE speed feedback input (engineer),
it cannot be USE the feedback (maintenance).]]>
</Comment>
<Text>
<![CDATA[XIO(Cfg_HasSpeedFdbk)OTU(Cfg_UseSpeedFdbk);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND SOURCE PROCESSING: "ASPECT" OWNERSHIP
============================================================
Using the Command Source determined above, and the Cfg_OperKeep,
Cfg_ProgKeep and Cfg_ExtKeep bits, determine who
(Oper, Prog or Ext) "owns" each of the Device's "aspects":
Speed Reference (.0), Start/Stop (.1), and Output Datalink (.3).

The bits within Cfg_OperKeep, Cfg_ProgKeep and Cfg_ExtKeep determine
which "aspects" (sub-functions of this AOI) are retained by the Operator,
by the Program, or by the External command source when either of the
other command sources is selected.

All aspects (functions) may be "kept" (basically locking the Oper/Prog/Ext
selections, rendering the Command Source selection moot.
(You get to explain how it works to your operators!!!).
However, it is NOT allowed to have any given aspect "kept" by more than
one source.  This rung ensures that no aspect is "kept" by multiple sources.

#####  V4.00.00  2018-07-13:  Using P_CmdSrc, added External command source.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_OperKeep.0) ONS(Wrk_OperKeep0ONS) OTU(Cfg_ProgKeep.0) OTU(Cfg_ExtKeep.0) ,XIC(Cfg_OperKeep.1) ONS(Wrk_OperKeep1ONS) OTU(Cfg_ProgKeep.1) OTU(Cfg_ExtKeep.1) ,XIC(Cfg_OperKeep.3) ONS(Wrk_OperKeep3ONS) OTU(Cfg_ProgKeep.3) OTU(Cfg_ExtKeep.3) ,XIC(Cfg_ProgKeep.0) ONS(Wrk_ProgKeep0ONS) OTU(Cfg_OperKeep.0) OTU(Cfg_ExtKeep.0) ,XIC(Cfg_ProgKeep.1) ONS(Wrk_ProgKeep1ONS) OTU(Cfg_OperKeep.1) OTU(Cfg_ExtKeep.1) ,XIC(Cfg_ProgKeep.3) ONS(Wrk_ProgKeep3ONS) OTU(Cfg_OperKeep.3) OTU(Cfg_ExtKeep.3) ,XIC(Cfg_ExtKeep.0) ONS(Wrk_ExtKeep0ONS) OTU(Cfg_ProgKeep.0) OTU(Cfg_OperKeep.0) ,XIC(Cfg_ExtKeep.1) ONS(Wrk_ExtKeep1ONS) OTU(Cfg_ProgKeep.1) OTU(Cfg_OperKeep.1) ,XIC(Cfg_ExtKeep.3) ONS(Wrk_ExtKeep3ONS) OTU(Cfg_ProgKeep.3) OTU(Cfg_OperKeep.3) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[These three rungs determine who actually currently owns the various aspects of the drive:
the Operator, the Program, or the External command source.

These rungs help simplify the logic later, removing the repetition of these branch structures!

#####  V4.00.00  2018-07-13:  Using P_CmdSrc, added External command source.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Sts_Oper) XIO(Cfg_ProgKeep.0) XIO(Cfg_ExtKeep.0) ,XIC(Sts_Maint) ,[XIC(Sts_Prog) ,XIC(Sts_Ext) ] XIC(Cfg_OperKeep.0) ] OTE(Wrk_OperHas0) ,[XIC(Sts_Oper) XIO(Cfg_ProgKeep.1) XIO(Cfg_ExtKeep.1) ,XIC(Sts_Maint) ,[XIC(Sts_Prog) ,XIC(Sts_Ext) ] XIC(Cfg_OperKeep.1) ] OTE(Wrk_OperHas1) ,[XIC(Sts_Oper) XIO(Cfg_ProgKeep.3) XIO(Cfg_ExtKeep.3) ,XIC(Sts_Maint) ,[XIC(Sts_Prog) ,XIC(Sts_Ext) ] XIC(Cfg_OperKeep.3) ] OTE(Wrk_OperHas3) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[[[XIC(Sts_Prog) XIO(Cfg_OperKeep.0) XIO(Cfg_ExtKeep.0) ,[XIC(Sts_Oper) ,XIC(Sts_Ext) ] XIC(Cfg_ProgKeep.0) ] OTE(Wrk_ProgHas0) ,[XIC(Sts_Prog) XIO(Cfg_OperKeep.1) XIO(Cfg_ExtKeep.1) ,[XIC(Sts_Oper) ,XIC(Sts_Ext) ] XIC(Cfg_ProgKeep.1) ] OTE(Wrk_ProgHas1) ,[XIC(Sts_Prog) XIO(Cfg_OperKeep.3) XIO(Cfg_ExtKeep.3) ,[XIC(Sts_Oper) ,XIC(Sts_Ext) ] XIC(Cfg_ProgKeep.3) ] OTE(Wrk_ProgHas3) ];]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[[[XIC(Sts_Ext) XIO(Cfg_ProgKeep.0) XIO(Cfg_OperKeep.0) ,[XIC(Sts_Prog) ,XIC(Sts_Oper) ] XIC(Cfg_ExtKeep.0) ] OTE(Wrk_ExtHas0) ,[XIC(Sts_Ext) XIO(Cfg_ProgKeep.1) XIO(Cfg_OperKeep.1) ,[XIC(Sts_Prog) ,XIC(Sts_Oper) ] XIC(Cfg_ExtKeep.1) ] OTE(Wrk_ExtHas1) ,[XIC(Sts_Ext) XIO(Cfg_ProgKeep.3) XIO(Cfg_OperKeep.3) ,[XIC(Sts_Prog) ,XIC(Sts_Oper) ] XIC(Cfg_ExtKeep.3) ] OTE(Wrk_ExtHas3) ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[These rungs get Configuration data (such as timer presets) and distribute as needed.
Note that some Configuration data are used directly in-place.

Enter the time (in seconds) for the Drive to successfully start before declaring a fault.
Enter the time (in seconds) for the Drive to successfully stop before declaring a fault.
Enter the time (in seconds) for the Drive Fault Reset output to be pulsed when a reset is received.
(The reset pulse time is also used for pulsing Start or Stop
output on a start or stop command retrigger in Maintenance.)

If the timer preset calcuated wraps negative (more than 2.14... million seconds), then max out the
or clear the Timer Preset (as appropriate) and flag it.  Note that a negative timer preset will fault the controller!!!

#####  V4.00.00  2018-07-13:  Added audible alert prior to commanded start.  #####
#####  Changed delay / time configuration items to REAL seconds.  #####
#####  V4.10.00  2019-03-25:  Added Inp_HornInh to disable Horn operation.  #####
#####  V4.10.01  2019-10-16:  Modified to handle overlapping Horn and Jog times.  #####]]>
</Comment>
<Text>
<![CDATA[[[MUL(Cfg_FailToStartT,1000.0,Wrk_StartT.PRE) XIC(Wrk_StartT.PRE.31) MOV(2147483647,Wrk_StartT.PRE) ,MUL(Cfg_FailToStopT,1000.0,Wrk_StopT.PRE) XIC(Wrk_StopT.PRE.31) MOV(2147483647,Wrk_StopT.PRE) ,MUL(Cfg_ResetPulseT,1000.0,Wrk_ResetT.PRE) XIC(Wrk_ResetT.PRE.31) CLR(Wrk_ResetT.PRE) ,[GRT(Cfg_StartHornT,1000.0) CLR(Cfg_StartHornT) ,MUL(Cfg_StartHornT,1000.0,Wrk_StartHornT.PRE) ,XIC(Inp_HornInh) CLR(Wrk_StartHornT.PRE) ] XIC(Wrk_StartHornT.PRE.31) CLR(Wrk_StartHornT.PRE) ,CPT(Wrk_JogT.PRE,Cfg_MaxJogT*1000.0+Wrk_StartHornT.PRE) XIC(Wrk_JogT.PRE.31) CLR(Wrk_JogT.PRE) ] OTE(Err_Timer) ,MOV(Wrk_StartT.PRE,Wrk_StartInhT.PRE) MOV(Wrk_StopT.PRE,Wrk_StopInhT.PRE) MOV(Wrk_ResetT.PRE,Wrk_StartRetrigT.PRE) MOV(Wrk_ResetT.PRE,Wrk_StopRetrigT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad Raw Scaling configs
Bad Engineering Units Scaling configs
Bad Min or Max Speed Reference clamp limit
Bad simulation speed ramp time
Bad timer config from (rung above)
Bad Alarm config (from P_Alarm)
Bad Cfg_OperKeep / Cfg_ProgKeep config

Then a summary Bad Config status is provided, simply an OR of the individual bits.

#####  V4.00.00  2018-07-13:  Modified to allow the special case where min and max clamping  #####
#####  limits (speed or output datalink) can be EQUAL (clamp at a specific value).  #####
#####  Changed delay / time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_HasSpeedFdbk) [EQU(Cfg_SpeedFdbkRawMax,Cfg_SpeedFdbkRawMin) OTE(Err_FdbkRaw) ,EQU(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) OTE(Err_FdbkEU) ] ,EQU(Cfg_SpeedRefEUMax,Cfg_SpeedRefEUMin) OTE(Err_RefEU) ,EQU(Cfg_SpeedRefRawMax,Cfg_SpeedRefRawMin) OTE(Err_RefRaw) ,XIC(Cfg_HasInpDatalink) [EQU(Cfg_InpDatalinkRawMax,Cfg_InpDatalinkRawMin) OTE(Err_InpDLRaw) ,EQU(Cfg_InpDatalinkEUMax,Cfg_InpDatalinkEUMin) OTE(Err_InpDLEU) ] ,XIC(Cfg_HasOutDatalink) [LES(Cfg_OutDatalinkMax,Cfg_OutDatalinkMin) OTE(Err_OutDLLim) ,EQU(Cfg_OutDatalinkEUMax,Cfg_OutDatalinkEUMin) OTE(Err_OutDLEU) ,EQU(Cfg_OutDatalinkRawMax,Cfg_OutDatalinkRawMin) OTE(Err_OutDLRaw) ] ,[LES(Cfg_MaxSpdRef,Cfg_MinSpdRef) ,LES(Cfg_MinSpdRef,0.0) ] OTE(Err_RefLim) ,LES(Cfg_SimRampT,0.0) OTE(Err_Sim) ,XIC(Err_Timer) ]OTE(Nrdy_CfgErr);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[This rung publishes the Values for the scaled speed reference range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of another block so the VSD's range
 and other block's range are in lockstep.

#####  V4.00.00  2018-07-13:  Added configurable decimal places for display on HMI.  #####
#####  Added checks to ensure Datalink clamp limits are within scaled (EU) range.  #####]]>
</Comment>
<Text>
<![CDATA[[GEQ(Cfg_SpeedRefEUMax,Cfg_SpeedRefEUMin) MOV(Cfg_SpeedRefEUMin,Val_SpeedRefEUMin) MOV(Cfg_SpeedRefEUMax,Val_SpeedRefEUMax) ,LES(Cfg_SpeedRefEUMax,Cfg_SpeedRefEUMin) MOV(Cfg_SpeedRefEUMin,Val_SpeedRefEUMax) MOV(Cfg_SpeedRefEUMax,Val_SpeedRefEUMin) ,LES(Cfg_OutDatalinkMin,Cfg_OutDatalinkEUMin) MOV(Cfg_OutDatalinkEUMin,Cfg_OutDatalinkMin) ,GRT(Cfg_OutDatalinkMin,Cfg_OutDatalinkEUMax) MOV(Cfg_OutDatalinkEUMax,Cfg_OutDatalinkMin) ,LES(Cfg_OutDatalinkMax,Cfg_OutDatalinkEUMin) MOV(Cfg_OutDatalinkEUMin,Cfg_OutDatalinkMax) ,GRT(Cfg_OutDatalinkMax,Cfg_OutDatalinkEUMax) MOV(Cfg_OutDatalinkEUMax,Cfg_OutDatalinkMax) ,LIM(7,Cfg_DecPlcs,-1) MOV(2,Cfg_DecPlcs) ,LIM(7,Cfg_InpDLDecPlcs,-1) MOV(2,Cfg_InpDLDecPlcs) ,LIM(7,Cfg_OutDLDecPlcs,-1) MOV(2,Cfg_OutDLDecPlcs) ];]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[This rung publishes the Values for the scaled speed feedback range.
If this instruction is reverse scaled by reversing the scaled (EU) min and max configurations,
the values are swapped so the the EUMax Value is always greater than the EUMin Value.
This makes the HMI bargraph and trend coding easier, and provides values
that can be pinned to the configuration of a PID, so the VSD and PID ranges are in lockstep.]]>
</Comment>
<Text>
<![CDATA[[GEQ(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMin,Val_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMax,Val_SpeedFdbkEUMax) ,LES(Cfg_SpeedFdbkEUMax,Cfg_SpeedFdbkEUMin) MOV(Cfg_SpeedFdbkEUMin,Val_SpeedFdbkEUMax) MOV(Cfg_SpeedFdbkEUMax,Val_SpeedFdbkEUMin) ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[============================================================
SETTINGS PROCESSING
============================================================
This rung handles received Program Settings:

First, handle clamping of the Program Output Datalink Setting.
(Clamping of the Speed Reference is handled below.)

Then, if the command source is Program and the Operator and External do not retain the Output Datalink,
or if the command source is Operator or External but the Program retains the Output Datalink,
use the Program Setting for the Output Datalink.

The Program Setting for the Speed Reference is handled similarly.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(PSet_OutDatalink,Cfg_OutDatalinkMax) MOV(Cfg_OutDatalinkMax,PSet_OutDatalink) ,LES(PSet_OutDatalink,Cfg_OutDatalinkMin) MOV(Cfg_OutDatalinkMin,PSet_OutDatalink) ,XIC(Wrk_ProgHas3) MOV(PSet_OutDatalink,Wrk_OutDatalink) ,XIC(Wrk_ProgHas0) MOV(PSet_SpeedRef,Wrk_SpeedRef) ];]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[This rung handles received Operator Settings:

First, handle clamping of the Operator Output Datalink Setting.
(Clamping of the Speed Reference is handled below.)

Then, if the command source is Operator and the Program and External do not retain the Output Datalink,
or if the command source is Maintenance,
or if the command source is Program or External but the Operator retains the Output Datalink,
use the Operator Setting for the Output Datalink.

The Operator Setting for the Speed Reference is handled similarly.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(OSet_OutDatalink,Cfg_OutDatalinkMax) MOV(Cfg_OutDatalinkMax,OSet_OutDatalink) ,LES(OSet_OutDatalink,Cfg_OutDatalinkMin) MOV(Cfg_OutDatalinkMin,OSet_OutDatalink) ,XIC(Wrk_OperHas3) MOV(OSet_OutDatalink,Wrk_OutDatalink) ,XIC(Wrk_OperHas0) MOV(OSet_SpeedRef,Wrk_SpeedRef) ];]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[This rung handles received External Settings:

First, handle clamping of the External Output Datalink Setting.
(Clamping of the Speed Reference is handled below.)

Then, if the command source is External and the Program and Operator do not retain the Output Datalink,
or if the command source is Program or Operator but External retains the Output Datalink,
use the External Setting for the Output Datalink.

The External Setting for the Speed Reference is handled similarly.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(XSet_OutDatalink,Cfg_OutDatalinkMax) MOV(Cfg_OutDatalinkMax,XSet_OutDatalink) ,LES(XSet_OutDatalink,Cfg_OutDatalinkMin) MOV(Cfg_OutDatalinkMin,XSet_OutDatalink) ,XIC(Wrk_ExtHas3) MOV(XSet_OutDatalink,Wrk_OutDatalink) ,XIC(Wrk_ExtHas0) MOV(XSet_SpeedRef,Wrk_SpeedRef) ];]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[This rung handles Override command source for Output Datalink and Speed Reference.

First, handle clamping of the Override Output Datalink Input.
(Clamping of the Speed Reference is handled below.)
Then, if the command source is Override, use the Override Output Datalink Input
and the Override Speed Reference Input.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[GRT(Inp_OvrdOutDatalink,Cfg_OutDatalinkMax) MOV(Cfg_OutDatalinkMax,Inp_OvrdOutDatalink) ,LES(Inp_OvrdOutDatalink,Cfg_OutDatalinkMin) MOV(Cfg_OutDatalinkMin,Inp_OvrdOutDatalink) ,XIC(Sts_Ovrd) MOV(Inp_OvrdSpeed,Wrk_SpeedRef) MOV(Inp_OvrdOutDatalink,Wrk_OutDatalink) ];]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[Ready to receive a new OSet_SpeedRef if tracking is NOT enabled,
or we're in Operator or Maintenance, or,
if we're in Hand or Ovrd, tracking is NOT configured for Ovrd and Hand.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Cfg_SetTrack) ,XIC(Wrk_OperHas0) ,[XIC(Sts_Hand) ,XIC(Sts_Ovrd) ] XIO(Cfg_SetTrackOvrdHand) ]OTE(ORdy_SpeedRef);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Comment>
<![CDATA[Ready to receive other Operator Settings (OSet_xxx) if tracking is NOT enabled,
or we're in Operator or Maintenance.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Cfg_SetTrack) ,XIC(Wrk_OperHas3) ]OTE(ORdy_OSet);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE FEEDBACK PROCESSING
============================================================
In preparation for ramping the simulated speed feedback, this rung
determines the time since the previous scan, using a non-stop TON timer.
When we get here, we read the accumulator (in milliseconds, so
divide by 1000.0 to get seconds), then clear the accumulator.  Next scan the accumulator will have
incremented up to the number of milliseconds since last scan.  (Works for scan times up to 2 million seconds.....)]]>
</Comment>
<Text>
<![CDATA[MOV(2147483647,Wrk_ScanT.PRE)TON(Wrk_ScanT,?,?)DIV(Wrk_ScanT.ACC,1000.0,Wrk_ScanTime)CLR(Wrk_ScanT.ACC);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[If the device is in Hand Mode, or if the device was switched from
simulated to real THIS SCAN (ONS), we need to align the object
state with the actual state of the drive.]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Hand) ,XIO(Inp_Sim) ONS(Wrk_NoLongerSim) ]OTE(Wrk_Hand);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[============================================================
SPEED FEEDBACK PROCESSING
============================================================
If not in simulation and scaling config is valid, the speed feedback is scaled from the raw Input.

If the drive provides no speed feedback:
1. If the drive is running, copy the working Speed Reference to the Speed Feedback
for display on the Graphic Symbol.  (Speed Feedback will be HIDDEN on the Faceplate!)
2.  If the drive is stopped, cllear the Speed Feedback to zero for display.]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)XIO(Err_FdbkRaw)[XIC(Cfg_HasSpeedFdbk) [XIC(Cfg_SimScaleEU) ONS(Wrk_SimScaleEUONS) OTU(Cfg_SimScaleRaw) ,XIC(Cfg_SimScaleRaw) ONS(Wrk_SimScaleRawONS) OTU(Cfg_SimScaleEU) ,CPT(Val_SpeedFdbk,(Inp_SpeedFdbk-Cfg_SpeedFdbkRawMin)/(Cfg_SpeedFdbkRawMax-Cfg_SpeedFdbkRawMin)*(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)+Cfg_SpeedFdbkEUMin) ,XIC(Wrk_Hand) [XIO(Cfg_SimScaleEU) XIO(Cfg_SimScaleRaw) MOV(Val_SpeedFdbk,Wrk_SpeedRef) ,XIC(Cfg_SimScaleEU) XIO(Cfg_SimScaleRaw) CPT(Wrk_SpeedRef,(Val_SpeedFdbk-Cfg_SpeedFdbkEUMin)/(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)*(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)+Cfg_SpeedRefEUMin) ,XIC(Cfg_SimScaleRaw) XIO(Cfg_SimScaleEU) CPT(Wrk_SpeedRef,(Inp_SpeedFdbk-Cfg_SpeedRefRawMin)/(Cfg_SpeedRefRawMax-Cfg_SpeedRefRawMin)*(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)+Cfg_SpeedRefEUMin) ] ] ,XIO(Cfg_HasSpeedFdbk) [XIC(Wrk_RunFdbk) MOV(Wrk_SpeedRef,Val_SpeedFdbk) ,XIO(Wrk_RunFdbk) CLR(Val_SpeedFdbk) ] ]JMP(SkipSpeedSim);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Comment>
<![CDATA[If the Speed Feedback scaling config values are invalid, just clear
Val_SpeedFdbk and skip the actual speed feedback processing.]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIC(Err_FdbkRaw) ,XIC(Err_FdbkEU) ,XIC(Inp_Sim) [XIC(Cfg_SimScaleEU) XIC(Err_RefEU) ,XIC(Cfg_SimScaleRaw) [XIC(Err_FdbkRaw) ,XIC(Err_RefEU) ] ] ]CLR(Val_SpeedFdbk)JMP(SkipSpeedSim);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[If in simulation, simulate accel/decel.

#####  V4.00.00  2018-07-13:  Changed delay / time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_Sim)[[XIC(Wrk_Run) ,XIC(Wrk_Jog) ] [XIO(Cfg_SimScaleEU) XIO(Cfg_SimScaleRaw) MOV(Wrk_SpeedRef,Wrk_SimFdbkTgt) ,[XIC(Cfg_SimScaleEU) XIO(Cfg_SimScaleRaw) CPT(Wrk_SimFdbkTgt,(Wrk_SpeedRef-Cfg_SpeedRefEUMin)/(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)*(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)+Cfg_SpeedFdbkEUMin) ,XIC(Cfg_SimScaleRaw) [CPT(Wrk_SimFdbkTgt,(Wrk_SpeedRef-Cfg_SpeedRefEUMin)/(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)*(Cfg_SpeedRefRawMax-Cfg_SpeedRefRawMin)+Cfg_SpeedRefRawMin) ,CPT(Wrk_SimFdbkTgt,(Wrk_SimFdbkTgt-Cfg_SpeedFdbkRawMin)/(Cfg_SpeedFdbkRawMax-Cfg_SpeedFdbkRawMin)*(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)+Cfg_SpeedFdbkEUMin) ] ] ] ,[XIO(Wrk_Run) XIO(Wrk_Jog) ,XIO(Wrk_Rev) XIO(Sts_ActualDir) ,XIC(Wrk_Rev) XIC(Sts_ActualDir) ] CLR(Wrk_SimFdbkTgt) ,GRT(Cfg_SimRampT,0.0) [CPT(Wrk_Step,Cfg_MaxSpdRef/Cfg_SimRampT*Wrk_ScanTime) ,XIC(Cfg_SimScaleEU) XIO(Cfg_SimScaleRaw) CPT(Wrk_Step,(Wrk_Step-Cfg_SpeedRefEUMin)/(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)*(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)+Cfg_SpeedFdbkEUMin) ,XIC(Cfg_SimScaleRaw) [CPT(Wrk_Step,(Wrk_Step-Cfg_SpeedRefEUMin)/(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)*(Cfg_SpeedRefRawMax-Cfg_SpeedRefRawMin)+Cfg_SpeedRefRawMin) ,CPT(Wrk_Step,(Wrk_Step-Cfg_SpeedFdbkRawMin)/(Cfg_SpeedFdbkRawMax-Cfg_SpeedFdbkRawMin)*(Cfg_SpeedFdbkEUMax-Cfg_SpeedFdbkEUMin)+Cfg_SpeedFdbkEUMin) ] ] ,LEQ(Cfg_SimRampT,0.0) MOV(1.50000000e+038,Wrk_Step) ,CMP(ABS(Val_SpeedFdbk-Wrk_SimFdbkTgt)<=Wrk_Step) MOV(Wrk_SimFdbkTgt,Val_SpeedFdbk) ,CMP((Val_SpeedFdbk-Wrk_SimFdbkTgt)>Wrk_Step) SUB(Val_SpeedFdbk,Wrk_Step,Val_SpeedFdbk) ,CMP((Wrk_SimFdbkTgt-Val_SpeedFdbk)>Wrk_Step) ADD(Val_SpeedFdbk,Wrk_Step,Val_SpeedFdbk) ];]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[============================================================
INPUT DATALINK PROCESSING
============================================================
Scale the Input Datalink (if we have one) to its engineering units.]]>
</Comment>
<Text>
<![CDATA[LBL(SkipSpeedSim)[XIO(Err_InpDLEU) XIC(Cfg_HasInpDatalink) CPT(Val_InpDatalink,Cfg_InpDatalinkEUMin+(Cfg_InpDatalinkEUMax-Cfg_InpDatalinkEUMin)/(Cfg_InpDatalinkRawMax-Cfg_InpDatalinkRawMin)*(Inp_Datalink-Cfg_InpDatalinkRawMin)) ,[XIO(Cfg_HasInpDatalink) ,XIC(Err_InpDLEU) ] CLR(Val_InpDatalink) ];]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Comment>
<![CDATA[============================================================
RUN FEEDBACK PROCESSING
============================================================
If the drive is NOT being simulated and it HAS and IS USING a run feedback,
use the state of the run feedback input as the drive run state.

If the device is being simulated or has no feedback,
use the (real or simulated) speed feedback to provide "fake" run feedback.

#####  V4.10.00  2019-03-25:  Modified simulated run feedback to handle run at zero speed ref.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIC(Cfg_UseRunFdbk) XIC(Inp_Running) ,[XIC(Inp_Sim) ,XIO(Cfg_UseRunFdbk) ] [XIC(Cfg_UseSpeedFdbk) [CMP(ABS(Val_SpeedFdbk)>(0.001*Cfg_SpeedFdbkEUMax)) ,XIC(Wrk_Run) ,XIC(Wrk_Jog) ] ,XIO(Cfg_UseSpeedFdbk) [XIC(Wrk_StartRetrigT.DN) ,XIC(Wrk_StopRetrigT.TT) ] ] ]OTE(Wrk_RunFdbk);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Comment>
<![CDATA[This rung copies the drive Status Word bits to external Status parameters of the instruction.
When this instruction is in simulation, simulated status is generated to "act like" a drive.]]>
</Comment>
<Text>
<![CDATA[[[XIO(Inp_Sim) XIC(Inp_CommandDir) ,XIC(Inp_Sim) XIO(Wrk_Rev) ] OTE(Sts_CommandDir) ,[XIO(Inp_Sim) [XIC(Inp_ActualDir) OTL(Sts_ActualDir) ,XIO(Inp_ActualDir) OTU(Sts_ActualDir) ] ,XIC(Inp_Sim) EQU(Val_SpeedFdbk,0.0) [XIO(Wrk_Rev) OTL(Sts_ActualDir) ,XIC(Wrk_Rev) OTU(Sts_ActualDir) ] ] ,[XIO(Inp_Sim) XIC(Inp_Accelerating) ,XIC(Inp_Sim) LES(Val_SpeedFdbk,Wrk_SimFdbkTgt) ] OTE(Sts_Accel) ,[XIO(Inp_Sim) XIC(Inp_Decelerating) ,XIC(Inp_Sim) GRT(Val_SpeedFdbk,Wrk_SimFdbkTgt) ] OTE(Sts_Decel) ,XIO(Inp_Sim) XIC(Inp_Alarm) OTE(Sts_Alarm) ,XIO(Inp_Sim) XIO(Inp_Ready) OTE(Sts_NotReady) ,[XIO(Inp_Sim) XIC(Inp_AtSpeed) ,XIC(Inp_Sim) EQU(Wrk_SimFdbkTgt,Val_SpeedFdbk) NEQ(Wrk_SimFdbkTgt,0.0) ] OTE(Sts_AtSpeed) ];]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[Val_Fdbk is the current state of the device feedback, as seen on the AOI's Inputs:
0 = Stopped
1 = Running Forward
2 = Running Reverse
3 = Accelerating
4 = Decelerating]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_RunFdbk) XIO(Sts_Accel) XIO(Sts_Decel) CLR(Val_Fdbk) ,XIC(Wrk_RunFdbk) XIC(Sts_ActualDir) MOV(1,Val_Fdbk) ,XIC(Wrk_RunFdbk) XIO(Sts_ActualDir) MOV(2,Val_Fdbk) ,XIC(Sts_Accel) MOV(3,Val_Fdbk) ,XIC(Sts_Decel) MOV(4,Val_Fdbk) ];]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[============================================================
INTERLOCK / PERMISSIVE BYPASS / CHECK COMMAND HANDLING
============================================================
The Bypass Command bypasses the Bypassable Permissives and Interlocks.]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Bypass)OTU(MCmd_Bypass)OTL(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[The Check Command enables checking of ALL
Permissives and Interlocks (cancels the bypass).]]>
</Comment>
<Text>
<![CDATA[XIC(MCmd_Check)OTU(MCmd_Check)OTU(Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[If the internal Bypass flag is set, Bypassable Interlocks and Permissives ARE BYPASSED.
Bypassing is ACTIVE if Bypass selected OR in Maintenance Mode,
or in Override Mode if Override Bypassing is configured.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Bypass) OTE(Sts_Bypass) ,XIC(Sts_Maint) ,XIC(Sts_Ovrd) XIC(Cfg_OvrdPermIntlk) ]OTE(Sts_BypActive);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[If a Maintenance Bypass function is active, display the Maintenance Bypass
Indicator (triangle symbol) on the graphic symbol.  Bypass functions are:
*  Interlock / Permissive Bypass function is enabled
*  Motor HAS run feedback designated by engineer, but
maintenance has selected to NOT USE run feedback]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_Bypass) ,XIC(Cfg_HasRunFdbk) XIO(Cfg_UseRunFdbk) ]OTE(Sts_MaintByp);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[Ready for Interlock / Permissive Bypass if not bypassed.
Ready to cancel Bypass (resume checking) if bypassed.]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_Bypass) OTE(MRdy_Bypass) ,XIC(Wrk_Bypass) OTE(MRdy_Check) ];]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[============================================================
ALARM RESET COMMAND HANDLING
============================================================
This rung handles the Alarm Reset Input and Commands
and the "Reset and Ack All" Operator Command.

This rung processes received Reset Commands from:

1.  The Operator via HMI Operator Command, or
2.  Higher-level strategies via Program Command
3.  Pushbuttons or other block via Input
4.  Resets initiated by other device Operator Commands (if configured to do so)
and forwards the Reset to ALL Alarms and latched Shed conditions.

The reset starts the Reset Timer (One-Shot Off-Delay)
to ensure the output is held on for at least the minimum time.

#####  V4.00.00  2018-07-13:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(XCmd_Reset) OTU(XCmd_Reset) ,XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(Inp_Reset) ONS(Wrk_ResetONS) ,[XIC(OCmd_StartFwd) ,XIC(OCmd_StartRev) ,XIC(OCmd_Stop) ,[XIC(OCmd_JogFwd) ,XIC(OCmd_JogRev) ] XIC(Cfg_HasJog) ] XIC(Cfg_OCmdResets) XIC(Wrk_OperHas1) ,[XIC(XCmd_StartFwd) ,XIC(XCmd_StartRev) ,XIC(XCmd_Stop) ,[XIC(XCmd_JogFwd) ,XIC(XCmd_JogRev) ] XIC(Cfg_HasJog) ] XIC(Cfg_XCmdResets) XIC(Wrk_ExtHas1) ,XIC(OCmd_ResetAckAll) OTU(OCmd_ResetAckAll) [OTL(PCmd_FailToStartAck) ,OTL(PCmd_FailToStopAck) ,OTL(PCmd_DriveFaultAck) ,OTL(PCmd_IntlkTripAck) ,OTL(PCmd_IOFaultAck) ] ][OTL(FailToStart.PCmd_Reset) OTL(FailToStop.PCmd_Reset) OTL(IntlkTrip.PCmd_Reset) OTL(IOFault.PCmd_Reset) ,XIC(Sts_FailToStart) RES(Wrk_StartT) ,XIC(Sts_FailToStop) RES(Wrk_StopT) ,OTU(Nrdy_PrioStop) OTU(Nrdy_Fail) ,[XIO(Inp_IOFault) ,XIC(Inp_Sim) ] OTU(Nrdy_IOFault) ,TOF(Wrk_ResetT,?,?) ];]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[The Hold Timer "done" bit comes on immediately and stays on
for the hold time.  If it, or any held-on reset initiator, is TRUE, set the Output.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_ResetT.DN)[XIC(Inp_Faulted) XIO(Inp_Sim) OTE(Out_ClearFault) ,OTL(DriveFault.PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[============================================================
DRIVE START / STOP COMMAND HANDLING
============================================================
In preparation for the Start / Stop logic that follows, this rung
stashes away the Permissive status in reusable bits.
#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd / StartRev / Stop / JogFwd / JogRev  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Inp_FwdPermOK) ,XIC(Sts_BypActive) ] XIC(Inp_FwdNBPermOK) OTE(Wrk_FwdPermOK) ,[XIC(Inp_RevPermOK) ,XIC(Sts_BypActive) ] XIC(Inp_RevNBPermOK) OTE(Wrk_RevPermOK) ];]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[The drive is NOT READY TO RUN if:
* Interlocks are not OK and not bypassed;
* Non-bypassable Interlocks are not OK;
* Permissives are not OK and not bypassed,
or Non-Bypassable Permissives are not OK, 
and the motor is not already starting or running;
* The drive (not simulated) reports that it is faulted;
* There's an I/O failure and the motor is NOT being simulated;
* The motor has a Fail to Start that has not been reset;
* The drive is disabled (by Maintenance);
* This instruction instance has a configuration error.

#####  V4.00.00  2018-07-13:  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  V4.00.00  2018-07-13:  Replaced start / stop / fwd / rev with start fwd / start rev / stop  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Sts_OoS) OTE(Nrdy_OoS) ,XIC(Nrdy_CfgErr) ,[XIO(Inp_IntlkOK) XIO(Sts_BypActive) ,XIO(Inp_NBIntlkOK) ] [[XIC(Wrk_Run) ,XIC(Wrk_Jog) ] XIO(Sts_Hand) OTE(Sts_IntlkTrip) ,OTE(Nrdy_Intlk) ] ,XIO(Wrk_FwdPermOK) XIO(Sts_StartingFwd) XIO(Sts_RunningFwd) [XIO(Wrk_RevPermOK) XIO(Sts_StartingRev) XIO(Sts_RunningRev) ,XIO(Cfg_HasReverse) ] OTE(Nrdy_Perm) ,XIO(Inp_Sim) [XIC(Inp_Faulted) OTE(Sts_DriveFault) OTE(Nrdy_Trip) ,XIO(Inp_Ready) OTE(Nrdy_DriveNR) ] ,XIC(Inp_IOFault) XIO(Inp_Sim) OTE(Sts_IOFault) XIC(Cfg_ShedOnIOFault) OTL(Nrdy_IOFault) ]OTE(Wrk_NotRdy);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[The drive is NOT READY TO RUN if:
* Interlocks are not OK and not bypassed;
* Non-bypassable Interlocks are not OK;
* Permissives are not OK and not bypassed,
or Non-Bypassable Permissives are not OK, 
and the motor is not already starting or running;
* The drive (not simulated) reports that it is faulted;
* There's an I/O failure and the motor is NOT being simulated;
* The motor has a Fail to Start that has not been reset;
* The drive is disabled (by Maintenance);
* This instruction instance has a configuration error.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_NotRdy) ,XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ]OTE(Sts_NotRdy);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[The motor is AVAILABLE to be run by automation if it is in PROGRAM
Mode and the "Not Ready" status is cleared.
#####  V4.10.00  2019-03-25:  Changed availability to use input availability from interlocks.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_Prog)XIO(Nrdy_PrioStop)XIO(Nrdy_Fail)XIO(Nrdy_CfgErr)XIO(Nrdy_DriveNR)XIO(Nrdy_Trip)XIO(Nrdy_OoS)XIO(Nrdy_Perm)XIO(Nrdy_IOFault)[[XIC(Inp_IntlkOK) ,XIC(Sts_BypActive) ] XIC(Inp_NBIntlkOK) ,XIC(Inp_IntlkAvail) ]OTE(Sts_Available);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[If we're not timing an HMI or programmed Start or Stop,
and there's no sealed-in fail-to-start or fail-to-stop,
and if Local Start/Stop Control is permitted,
and if we are using run feedback (not in simulation),
detect a local start or stop transition and track state with it.
(Don't track the Start if conditions do not allow the motor to run
or a Jog operation is active.)

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
##### V4.00.02  2018-10-30:  Corrected handling Allow Local when horn is enabled.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Cfg_AllowLocal)XIO(Wrk_StartInhT.TT)XIO(Wrk_StartHornT.TT)XIO(Wrk_StopInhT.TT)XIO(Sts_FailToStart)XIO(Sts_FailToStop)XIC(Cfg_UseRunFdbk)XIO(Inp_Sim)XIO(Wrk_Jog)[XIC(Inp_Running) XIO(Sts_NotRdy) OTL(Wrk_Run) ,XIO(Inp_Running) OTU(Wrk_Run) ,[XIC(Inp_CommandDir) ,XIO(Cfg_HasReverse) ] OTU(Wrk_Rev) ,XIO(Inp_CommandDir) XIC(Cfg_HasReverse) OTL(Wrk_Rev) ];]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[These next several rungs, in priority order, determine whether
the drive should be running, jogging or stopped.

If a Drive START FORWARD command is received in Operator, Program or Maintenance,
or if in Override and the Override State is RUN, mark the Drive to RUN FORWARD.
Permissives must be OK or bypassed to start the Drive (Interlocks are checked below...).
The drive must be READY (or in simulation), and the drive can't already be jogging.
(Command Sources are mutually exclusive, thus handling the priority.)

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
#####  Added audible alert prior to commanded start.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_StartFwd) OTU(OCmd_StartFwd) [XIC(Wrk_OperHas1) ,XIC(Sts_Maint) OTL(Wrk_Retrigger) RES(Wrk_StartRetrigT) ] ,XIC(XCmd_StartFwd) OTU(XCmd_StartFwd) XIC(Wrk_ExtHas1) ,XIC(PCmd_StartFwd) OTU(PCmd_StartFwd) XIC(Wrk_ProgHas1) ,EQU(Inp_OvrdCmd,2) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]XIO(Sts_NotRdy)XIC(Wrk_FwdPermOK)XIO(Wrk_Jog)[[XIO(Wrk_Run) OTL(Wrk_StartHorn) ,XIC(CmdSrc.Sts_Maint) ] OTL(Wrk_Retrigger) RES(Wrk_StartRetrigT) ,OTL(Wrk_Run) OTU(Wrk_Rev) ];]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[These next several rungs, in priority order, determine whether
the drive should be running, jogging or stopped.

If a Drive START REVERSE command is received in Operator, Program or Maintenance,
or if in Override and the Override State is RUN, mark the Drive to RUN REVERSE.
Permissives must be OK or bypassed to start the Drive (Interlocks are checked below...).
The drive must be READY (or in simulation), and the drive can't already be jogging.
(Command Sources are mutually exclusive, thus handling the priority.)

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
#####  Added audible alert prior to commanded start.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_StartRev) OTU(OCmd_StartRev) [XIC(Wrk_OperHas1) ,XIC(Sts_Maint) OTL(Wrk_Retrigger) RES(Wrk_StartRetrigT) ] ,XIC(XCmd_StartRev) OTU(XCmd_StartRev) XIC(Wrk_ExtHas1) ,XIC(PCmd_StartRev) OTU(PCmd_StartRev) XIC(Wrk_ProgHas1) ,EQU(Inp_OvrdCmd,3) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ]XIC(Cfg_HasReverse)XIO(Sts_NotRdy)XIC(Wrk_RevPermOK)XIO(Wrk_Jog)[[XIO(Wrk_Run) OTL(Wrk_StartHorn) ,XIC(CmdSrc.Sts_Maint) ] OTL(Wrk_Retrigger) RES(Wrk_StartRetrigT) ,OTL(Wrk_Run) OTL(Wrk_Rev) ];]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[This rung determines if the Drive SHOULD BE JOGGING FORWARD.  This is when:

* The Operator is requesting to Jog
* The Drive is in OPER or MAINT
* Permissives and Interlocks are OK or bypassed if in OPER
* Non-Bypassable Interlocks and Permissives are OK,
* The drive is Ready (or in simulation), AND
* The drive is not otherwise requested to RUN

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_JogFwd) XIC(Wrk_OperHas1) ,XIC(XCmd_JogFwd) XIC(Wrk_ExtHas1) ]XIO(Sts_NotRdy)XIC(Wrk_FwdPermOK)XIO(Wrk_Run)OTL(Wrk_Jog)OTU(Wrk_Rev)OTL(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Comment>
<![CDATA[This rung determines if the Drive SHOULD BE JOGGING REVERSE.  This is when:

* The Operator is requesting to Jog
* The Drive is in OPER or MAINT
* Permissives and Interlocks are OK or bypassed if in OPER
* Non-Bypassable Interlocks and Permissives are OK,
* The drive is Ready (or in simulation), AND
* The drive is not otherwise requested to RUN

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_JogRev) XIC(Wrk_OperHas1) ,XIC(XCmd_JogRev) XIC(Wrk_ExtHas1) ]XIC(Cfg_HasReverse)XIO(Sts_NotRdy)XIC(Wrk_RevPermOK)XIO(Wrk_Run)OTL(Wrk_Jog)OTL(Wrk_Rev)OTL(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Comment>
<![CDATA[If the drive is being jogged, run the Jog Timer.]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_Jog)TON(Wrk_JogT,?,?);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Comment>
<![CDATA[If we are sounding the audible start alert (start command accepte) and we lose
the permissive before actually starting the motor, cancel the start

#####  V4.00.00  2018-07-13:  Added audible alert on commanded start.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StartHorn)[XIO(Wrk_FwdPermOK) XIO(Wrk_Rev) ,XIO(Wrk_RevPermOK) XIC(Wrk_Rev) ]OTU(Wrk_Run)OTU(Wrk_Jog)OTU(OCmd_JogFwd)OTU(OCmd_JogRev)OTU(XCmd_JogFwd)OTU(XCmd_JogFwd)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Comment>
<![CDATA[If the drive is changed to a Command Source other than Ext, Oper or Maint,
or if the Jog command goes away,
or if the Jog command does not clear within the Maximum Jog Time,
stop jogging.

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd /  #####
#####  StartRev / Stop / JogFwd / JogRev.  Deleted Cfg_PCmdClear.  #####
#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(Wrk_OperHas1) XIO(OCmd_JogFwd) XIO(OCmd_JogRev) ,XIC(Wrk_ExtHas1) XIO(XCmd_JogFwd) XIO(XCmd_JogRev) ,XIO(Wrk_OperHas1) XIO(Wrk_ExtHas1) ,XIO(Cfg_HasJog) ] OTU(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ]OTU(OCmd_JogFwd)OTU(OCmd_JogRev)OTU(XCmd_JogFwd)OTU(XCmd_JogRev);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Comment>
<![CDATA[If a Drive STOP command is received in Operator, External,
Program or Maintenance, or if in Override and the Override State
is STOP, mark the Drive TO STOP (jogging or running).

#####  V4.00.00  2018-07-13:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####
#####  Added External Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(OCmd_Stop) OTU(OCmd_Stop) [XIC(Wrk_OperHas1) ,XIC(Cfg_OperStopPrio) XIO(Wrk_OperHas1) OTL(Nrdy_PrioStop) ] ,XIC(XCmd_Stop) OTU(XCmd_Stop) [XIC(Wrk_ExtHas1) ,XIC(Cfg_ExtStopPrio) XIO(Wrk_ExtHas1) OTL(Nrdy_PrioStop) ] ,XIC(PCmd_Stop) OTU(PCmd_Stop) XIC(Wrk_ProgHas1) ,EQU(Inp_OvrdCmd,1) CLR(Inp_OvrdCmd) XIC(Sts_Ovrd) ,XIC(Wrk_NotRdy) ,[XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ] XIO(Sts_Hand) ][[XIC(Wrk_Run) ,XIC(Wrk_Jog) ,[XIC(Sts_Oper) ,XIC(Sts_Maint) ] ONS(Wrk_NotRdyONS) ] OTL(Wrk_Retrigger) RES(Wrk_StopRetrigT) ,OTU(Wrk_Run) OTU(Wrk_Jog) OTU(Wrk_StartHorn) ,OTU(OCmd_JogFwd) OTU(OCmd_JogRev) OTU(XCmd_JogFwd) OTU(XCmd_JogRev) ];]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Comment>
<![CDATA[Higher Priority: HAND wins over other Modes:
If in Hand, have the Drive follow the RunFeedback.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Hand) ,XIC(S:FS) ][XIC(Wrk_RunFdbk) OTL(Wrk_Run) ,XIO(Wrk_RunFdbk) OTU(Wrk_Run) ,[XIC(Inp_CommandDir) ,XIO(Cfg_HasReverse) ] OTU(Wrk_Rev) ,XIO(Inp_CommandDir) XIC(Cfg_HasReverse) OTL(Wrk_Rev) ];]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Comment>
<![CDATA[If anything stops the motor, also stop the pre-start audible.

#####  V4.00.00  2018-07-13:  Added audible alert prior to commanded start.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_Run)XIO(Wrk_Jog)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Comment>
<![CDATA[============================================================
START HORN TIMER
============================================================
If the horn should be sounding, run the start horn timer.

#####  V4.00.00  2018-07-13:  Added audible alert prior to commanded start.  #####
#####  V4.10.01  2019-10-16:  Split to separate rung as part of jog lockout change.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan as enabled if the preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Run) ,XIC(Wrk_Jog) ][XIC(Wrk_StartHorn) TON(Wrk_StartHornT,?,?) TON(Wrk_StartHornT,?,?) ,XIC(Wrk_StartHornT.DN) OTU(Wrk_StartHorn) ];]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Comment>
<![CDATA[============================================================
DRIVE START RETRIGGER AND FAIL TO START DETECTION
============================================================
If the drive SHOULD BE RUNNING, run a Start Timer to check for Fail to Start,
 and run a Retrigger timer to pulse the Start output if needed.

#####  V4.00.00  2018-07-13:  Added audible alert prior to commanded start.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan as enabled if the preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Run) ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] ]XIO(Wrk_StartHorn)[TON(Wrk_StartT,?,?) ,TON(Wrk_StartRetrigT,?,?) TON(Wrk_StartRetrigT,?,?) ,XIO(Wrk_RunFdbk) TON(Wrk_StartInhT,?,?) ,XIC(Wrk_StartRetrigT.DN) OTU(Wrk_Retrigger) ];]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Comment>
<![CDATA[If the Start Timer times out and the motor run feedback (or simulated feedback) never showed up,
show the motor as "FAILED TO START"]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StartT.DN)XIO(Wrk_RunFdbk)XIO(Sts_Maint)OTE(Sts_FailToStart);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[============================================================
DRIVE STOP RETRIGGER AND FAIL TO STOP DETECTION
============================================================
If the drive SHOULD BE STOPPED, run a Stop Timer to check for Fail to Stop,
 and run a Retrigger timer to pulse the Stop output if needed.

#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####

@@@@@  The TON is doubled to ensure it goes done  @@@@@
@@@@@  the same scan it is enabled if its preset is zero.  @@@@@]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_Run)[XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ][TON(Wrk_StopT,?,?) ,TON(Wrk_StopRetrigT,?,?) TON(Wrk_StopRetrigT,?,?) ,XIC(Wrk_RunFdbk) TON(Wrk_StopInhT,?,?) ,XIC(Wrk_StopRetrigT.DN) OTU(Wrk_Retrigger) ];]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Comment>
<![CDATA[If the Stop Timer times out and the motor run feedback (or simulated feedback)
never showed "stopped", show the motor as "FAILED TO STOP"]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_StopT.DN)XIC(Wrk_RunFdbk)XIO(Sts_Maint)OTE(Sts_FailToStop);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Comment>
<![CDATA[============================================================
SHED ON FAULT LOGIC
============================================================
This rung handles latching in of conditions which are configured to cause
drive to shed (de-energize).]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_FailToStart)XIC(Cfg_ShedOnFailToStart)OTL(Nrdy_Fail);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Comment>
<![CDATA[If a shed condition is latched in above, de-energize the drive.

#####  V4.10.01  2019-10-16:  Corrected handling of Start Horn on shed conditions.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) ]XIO(Sts_Hand)OTU(Wrk_Run)OTU(Wrk_Jog)OTU(Wrk_StartHorn);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Comment>
<![CDATA[============================================================
DEVICE COMMAND ENUMERATED VALUE
============================================================
Val_Cmd is the command currently being processed:
0 = None
1 = Stop
2 = Start Forward
3 = Start Reverse
4 = Jog Forward
5 = Jog Reverse

#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Cmd) ,XIO(Wrk_Run) XIO(Wrk_Jog) [XIC(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] MOV(1,Wrk_Cmd) ,XIC(Wrk_Run) [XIO(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] [XIC(Sts_CommandDir) MOV(2,Wrk_Cmd) ,XIO(Sts_CommandDir) MOV(3,Wrk_Cmd) ] ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] [XIC(Sts_CommandDir) MOV(4,Wrk_Cmd) ,XIO(Sts_CommandDir) MOV(5,Wrk_Cmd) ] ,MOV(Wrk_Cmd,Val_Cmd) ];]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Comment>
<![CDATA[============================================================
OUTPUT GENERATION
============================================================
If the Drive is NOT SIMULATED, generate the appropriate outputs for the Drive.

If the Drive should be running, is not faulted and not in hardwired control, energize Out_Run.
Also, energize Out_Start until we get feedback that the Drive is running.

If the Drive should be stopped and is not in hardwired control and the feedback shows the Drive
is NOT stopped, or if the Stop command to the drive has been retriggered,
energize the Out_Stop output to stop the Drive.

Finally, if the drive is not simulated, energize the appropriate direction output.

#####  V4.00.00  2018-07-13:  Added audible alert prior to commanded start.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Sim)XIO(Sts_Hand)[XIO(Sts_NotRdy) XIO(Wrk_StartHorn) [XIC(Wrk_Run) [OTE(Out_Run) ,[XIO(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] OTE(Out_Start) ] ,XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] OTE(Out_Jog) ] ,XIO(Wrk_Run) [XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ] [XIC(Wrk_RunFdbk) ,XIC(Wrk_Retrigger) ] OTE(Out_Stop) ,XIC(Wrk_StartHorn) OTE(Out_Horn) ,XIO(Wrk_Rev) OTE(Out_Fwd) ,XIC(Wrk_Rev) OTE(Out_Rev) ];]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Comment>
<![CDATA[Check the selected speed reference against the configured Maximum and Minimum
allowed reference limits and ensure the speed is within limits.
Be sure the speed reference is not negative.  This object supports reversing
by command only; negative speed reference is NOT supported!]]>
</Comment>
<Text>
<![CDATA[[GRT(Wrk_SpeedRef,Cfg_MaxSpdRef) MOV(Cfg_MaxSpdRef,Wrk_SpeedRef) ,LES(Wrk_SpeedRef,Cfg_MinSpdRef) MOV(Cfg_MinSpdRef,Wrk_SpeedRef) ,LES(Wrk_SpeedRef,0.0) CLR(Wrk_SpeedRef) ]OTE(Sts_SpeedLimited);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Comment>
<![CDATA[If the drive is NOT simulated and its scaling config is valid, scale the
final speed reference from engineering units to Raw (drive) Units.

If the drive is SIMULATED, set the Speed Reference output to ZERO.]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIO(Err_RefEU) CPT(Out_SpeedRef,(Wrk_SpeedRef-Cfg_SpeedRefEUMin)*(Cfg_SpeedRefRawMax-Cfg_SpeedRefRawMin)/(Cfg_SpeedRefEUMax-Cfg_SpeedRefEUMin)+Cfg_SpeedRefRawMin) ,[XIC(Inp_Sim) ,XIC(Err_RefEU) ] CLR(Out_SpeedRef) ];]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Comment>
<![CDATA[If NOT in simulation, the Output Datalink exists, and its scaling is valid,
the working value is scaled to generate Out_Datalink.
If in simulation, the Output Datalink does not exist, or its scaling is invalid,
Out_Datalink is cleared.]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_Sim) XIC(Cfg_HasOutDatalink) XIO(Err_OutDLEU) CPT(Out_Datalink,(Wrk_OutDatalink-Cfg_OutDatalinkEUMin)*(Cfg_OutDatalinkRawMax-Cfg_OutDatalinkRawMin)/(Cfg_OutDatalinkEUMax-Cfg_OutDatalinkEUMin)+Cfg_OutDatalinkRawMin) ,[XIC(Inp_Sim) ,XIO(Cfg_HasOutDatalink) ,XIC(Err_OutDLEU) ] CLR(Out_Datalink) ];]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Comment>
<![CDATA[If the Output Datalink exists and its scaling is valid, the working value is copied to Val_OutDatalink.
If the Output Datalink does not exist, or its scaling is invalid, Val_OutDatalink is cleared.]]>
</Comment>
<Text>
<![CDATA[[XIC(Cfg_HasOutDatalink) XIO(Err_OutDLEU) MOV(Wrk_OutDatalink,Val_OutDatalink) ,[XIO(Cfg_HasOutDatalink) ,XIC(Err_OutDLEU) ] CLR(Val_OutDatalink) ];]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Comment>
<![CDATA[Val_SpeedRef (commanded speed)

Based on Mode and Tracking settings, copy the Speed
Reference Value back into the Operator and Program Settings.

#####  Changed P_Mode to P_CmdSrc. Added External Command Source and Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[MOV(Wrk_SpeedRef,Val_SpeedRef) ,XIC(Cfg_SetTrack) [[XIO(Sts_Ovrd) XIO(Sts_Hand) ,XIC(Cfg_SetTrackOvrdHand) ] MOV(Val_SpeedRef,PSet_SpeedRef) MOV(Val_SpeedRef,OSet_SpeedRef) MOV(Val_SpeedRef,XSet_SpeedRef) ,MOV(Val_OutDatalink,PSet_OutDatalink) MOV(Val_OutDatalink,OSet_OutDatalink) MOV(Val_OutDatalink,XSet_OutDatalink) ] ];]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Comment>
<![CDATA[This rung generates the Starting, Running, Stopping, Stopped and Jogging Status bits.

If the Drive is commanded to run (Output on) and the feedback doesn't yet show it running,
the Drive is STARTING.

If the Drive is commanded to run (Output on) and the feedback shows it running,
the Drive is RUNNING.

If the Drive is commanded to stoop (Output off) and the feedback still shows it running,
the Drive is STOPPING.

If the Drive is commanded to stop (Output off) and the feedback shows it has stopped,
the Drive is STOPPED.

If the Drive is commanded to jog, show the status as JOGGING.

If the audible alert is active, show the Status as HORN.

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd / StartRev / Stop / JogFwd / JogRev  #####
#####  V4.10.00  2019-03-25:  Added Horn Status.  #####
#####  V4.10.01  2019-10-16:  Modified to lock out jog when jog time expires until jog commands are cleared.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Wrk_StartHorn) XIC(Wrk_Run) XIO(Wrk_Jog) [XIO(Wrk_RunFdbk) [XIC(Sts_CommandDir) OTE(Sts_StartingFwd) ,XIO(Sts_CommandDir) OTE(Sts_StartingRev) ] ,XIC(Wrk_RunFdbk) [XIC(Sts_ActualDir) OTE(Sts_RunningFwd) ,XIO(Sts_ActualDir) OTE(Sts_RunningRev) ] ] ,XIO(Wrk_Run) [XIO(Wrk_Jog) ,XIC(Wrk_JogT.DN) NEQ(Wrk_JogT.PRE,0) ] [XIC(Wrk_RunFdbk) [XIC(Sts_ActualDir) OTE(Sts_StoppingFwd) ,XIO(Sts_ActualDir) OTE(Sts_StoppingRev) ] ,XIO(Wrk_RunFdbk) OTE(Sts_Stopped) ] ,XIO(Wrk_StartHorn) XIC(Wrk_Jog) [XIC(Wrk_JogT.TT) ,EQU(Wrk_JogT.PRE,0) ] [XIC(Sts_CommandDir) OTE(Sts_JoggingFwd) ,XIO(Sts_CommandDir) OTE(Sts_JoggingRev) ] ,XIC(Wrk_StartHorn) OTE(Sts_Horn) ];]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Comment>
<![CDATA[============================================================
OPERATOR COMMAND READIES
============================================================
Ready to Start if in Operator Manual, Stopped, and Permissives and Interlocks are OK.

Ready to Stop if in Operator Manual (or Operator has priority stop) and (Running or Starting).

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd / StartRev / Stop / JogFwd / JogRev  #####
#####  Aligned ready bit naming with command bit names.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Wrk_NotRdy)[XIO(Sts_NotRdy) ,XIC(Cfg_OCmdResets) ][XIC(Wrk_OperHas1) [XIC(Inp_Ready) ,XIC(Inp_Sim) ] [[XIC(Sts_Stopped) ,XIC(Sts_Maint) [XIC(Sts_RunningFwd) ,XIC(Sts_RunningRev) ] ] [XIC(Wrk_FwdPermOK) OTE(ORdy_StartFwd) ,XIC(Wrk_RevPermOK) OTE(ORdy_StartRev) ] ,XIC(Cfg_HasJog) XIO(Wrk_Run) [XIC(Wrk_FwdPermOK) OTE(ORdy_JogFwd) ,XIC(Wrk_RevPermOK) OTE(ORdy_JogRev) ] ] ,[XIC(Wrk_OperHas1) ,XIC(Cfg_OperStopPrio) ] XIO(Sts_StoppingFwd) XIO(Sts_StoppingRev) OTE(ORdy_Stop) ];]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Comment>
<![CDATA[============================================================
REMAINING DRIVE VALUES AND STATUS
============================================================
This rung copies a number of values from the drive directly
to their final Value and Status output parameters.]]>
</Comment>
<Text>
<![CDATA[NEQ(Inp_LastFaultCode,0)MOV(Inp_LastFaultCode,Val_LastFaultCode);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Comment>
<![CDATA[If the drive is Faulted, this rung finds the Fault Description for
the given Fault Code within the Reference Fault Code List 
(In/Out Parameter).  (The same Fault Code List tag
can be referenced by ALL instances of this instruction
that use the fault code -- same drive class!!!)

1.  Find the number of entries in the Fault Code List (Array SIZE).
2.  Search (FSC) the Fault Code List for a matching Code.
3.  If found, copy the corresponding Description to Val_FaultDesc.
4.  If NOT found, copy list entry zero ("No Help Available for this code").]]>
</Comment>
<Text>
<![CDATA[XIC(Sts_DriveFault)[RES(Wrk_FaultDescFSC) SIZE(Ref_FaultCodeList,0,Wrk_FaultDescFSC.LEN) ,FSC(Wrk_FaultDescFSC,?,?,ALL,Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Code=Inp_LastFaultCode) ,XIC(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[Wrk_FaultDescFSC.POS].Desc,Val_FaultDesc,1) ,XIO(Wrk_FaultDescFSC.FD) COP(Ref_FaultCodeList[0].Desc,Val_FaultDesc,1) ];]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Comment>
<![CDATA[============================================================
ALARM PROCESSING
============================================================
The various alarms are ALWAYS allowed to Exist (Cfg_HasXxxAlarm can be 1), EXCEPT:
* If the motor DOES NOT HAVE RUN FEEDBACK, the Fail to Start and Fail to Stop
alarms will never occur and should not exist.  (If feedback exists, 
the Fail alarms must be allowed to exist.)

Note that if Cfg_HasRunFdbk is zero, Run Feedback is simulated using the
Speed Feedback, if the drive has that!

#####  V4.00.00  2018-07-13:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[OTL(IntlkTrip.PCfg_AllowExist) OTL(DriveFault.PCfg_AllowExist) OTL(IOFault.PCfg_AllowExist) ,[XIC(Cfg_HasRunFdbk) ,XIC(Cfg_HasSpeedFdbk) ] OTE(FailToStart.PCfg_AllowExist) OTE(FailToStop.PCfg_AllowExist) ];]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Comment>
<![CDATA[Let the Alarm instance know if this object is taken Out of Service

#####  V4.00.00  2018-07-13:  Now using P_CmdSrc, including Out of Service.  #####]]>
</Comment>
<Text>
<![CDATA[XIC(CmdSrc.Sts_OoS)OTE(FailToStart.Inp_OoS)OTE(FailToStop.Inp_OoS)OTE(IntlkTrip.Inp_OoS)OTE(DriveFault.Inp_OoS)OTE(IOFault.Inp_OoS);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Comment>
<![CDATA[Handle Motor Failed to Start Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(FailToStart);]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Comment>
<![CDATA[Handle Motor Failed to Stop Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(FailToStop);]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Comment>
<![CDATA[Handle Interlock Trip Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IntlkTrip);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Comment>
<![CDATA[Handle Drive Fault Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(DriveFault);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Comment>
<![CDATA[Handle I/O Fault Alarm Processing using the standard P_Alarm AOI.]]>
</Comment>
<Text>
<![CDATA[P_Alarm(IOFault);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Comment>
<![CDATA[If ANY alarm is Disabled, Inhibited or Suppressed, set the Alarm Inhibit
summary status bit (which puts the "I" box on the graphic symbol).]]>
</Comment>
<Text>
<![CDATA[[XIC(FailToStart.Sts_AlmInh) ,XIC(FailToStop.Sts_AlmInh) ,XIC(IntlkTrip.Sts_AlmInh) ,XIC(DriveFault.Sts_AlmInh) ,XIC(IOFault.Sts_AlmInh) ]OTE(Sts_AlmInh);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Comment>
<![CDATA[This rung handles the reports of all Bad Configuration Status.
Individual bits are provided for various status:
Bad Raw Scaling configs
Bad Engineering Units Scaling configs
Bad Min or Max Speed Reference clamp limit
Bad simulation speed ramp time
Bad timer config from (rung above)
Bad Alarm config (from P_Alarm)
Bad Cfg_OperKeep / Cfg_ProgKeep config

Then a summary Bad Config status is provided, simply an OR of the individual bits.

#####  V4.00.00  2018-07-13:  Modified to allow the special case where min and max clamping  #####
#####  limits (speed or output datalink) can be EQUAL (clamp at a specific value).  #####
#####  Changed delay / time configuration items to REAL seconds.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(Nrdy_CfgErr) ,[XIC(FailToStart.Sts_Err) ,XIC(FailToStop.Sts_Err) ,XIC(IntlkTrip.Sts_Err) ,XIC(DriveFault.Sts_Err) ,XIC(IOFault.Sts_Err) ] OTE(Err_Alarm) ]OTE(Sts_Err);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Comment>
<![CDATA[Val_Sts is the current device status, as determined by this AOI,
based on its knowledge of commands executed and feedback.
(This is the status that should be monitored by, for example, FT Historian.)
0 = Powerup / Unknown (in Hand but having no feedback, for example)
0 = Powerup / Unknown
1 = Stopped
2 = Running Forward
3 = Running Reverse
4 = Running Slow
5 = Starting Forward
6 = Starting Reverse
7 = Starting Slow
8 = Jogging Forward
9 = Jogging Reverse
10 = Stopping
14 = Horn

Val_Fault is the current device fault status, as determined by this AOI,
based on its knowledge of commands executed and feedback.
(This is the fault status that should be monitored by, for example, FT Historian.)
0 = None
16 = Fail to Start
17 = Fail to Stop
18 = Drive Fault
32 = I/O Fault (from Input)
34 = Configuration Error

#####  V4.00.00 2018-07-13:  Changed Start / Stop / Jog / Fwd / Rev to StartFwd / StartRev / Stop / JogFwd / JogRev  #####
#####  Disable/Enable replaced by P_CmdSrc Out of Service (OoS).  #####
#####  V4.10.00  2019-03-25:  Added Horn Status.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Sts) CLR(Wrk_Fault) ,XIC(Sts_Stopped) MOV(1,Wrk_Sts) ,XIC(Sts_RunningFwd) MOV(2,Wrk_Sts) ,XIC(Sts_RunningRev) MOV(3,Wrk_Sts) ,XIC(Sts_StartingFwd) MOV(5,Wrk_Sts) ,XIC(Sts_StartingRev) MOV(6,Wrk_Sts) ,XIC(Sts_JoggingFwd) MOV(8,Wrk_Sts) ,XIC(Sts_JoggingRev) MOV(9,Wrk_Sts) ,[XIC(Sts_StoppingFwd) ,XIC(Sts_StoppingRev) ] MOV(10,Wrk_Sts) ,XIC(Sts_Horn) MOV(14,Wrk_Sts) ,XIC(Nrdy_Fail) MOV(16,Wrk_Fault) ,XIC(Sts_FailToStop) MOV(17,Wrk_Fault) ,XIC(Sts_DriveFault) MOV(18,Wrk_Fault) ,[XIC(Sts_IOFault) ,XIC(Nrdy_IOFault) ] MOV(32,Wrk_Fault) ,XIC(Sts_Err) MOV(34,Wrk_Fault) ,MOV(Wrk_Sts,Val_Sts) MOV(Wrk_Fault,Val_Fault) ];]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Comment>
<![CDATA[============================================================
ENUMERATED SOURCE / QUALITY VALUES
============================================================
Source and Quality for Input / Output values / status (SrcQ_IO)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_SrcQ) ,XIC(Cfg_UseSpeedFdbk) MOV(1,Wrk_SrcQ) ,[XIO(Cfg_HasRunFdbk) ,XIO(Cfg_HasSpeedFdbk) ] MOV(2,Wrk_SrcQ) ,XIC(Inp_IOFault) MOV(34,Wrk_SrcQ) ,XIC(Inp_Sim) MOV(9,Wrk_SrcQ) ,[XIC(Err_FdbkRaw) ,XIC(Err_FdbkEU) ] MOV(35,Wrk_SrcQ) ,MOV(Wrk_SrcQ,SrcQ_IO) ];]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Comment>
<![CDATA[Source and Quality for primary values / status (SrcQ)

0 = Good: live, confirmed good;   1 = Good: live, assumed good;
2 = Good: no feedback, assumed good;   8 = Test: Simulated;   9 = Test: Loopback;
10 = Test: Manually Entered;   16 = Uncertain: Live, off-spec;
17 = Uncertain, Substituted at Device / Bus;   18 = Uncertain, Substituted at AOI;
19 = Uncertain, using last known good;    20 = Uncertain, using replacement value;
32 = Bad, Signal Failure;   33 = Bad, Channel Fault;
34 = Bad, Module / Comms Fault;   35 = Bad, Invalid Configuration

If the drive is using run feedback (for state) and has speed feedback, all is live and good.
If the drive is using speed feedback to determine run state, state is assumed good.
If the drive does not have speed feedback, speed is no-feedback assumed good.]]>
</Comment>
<Text>
<![CDATA[MOV(SrcQ_IO,SrcQ);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Comment>
<![CDATA[============================================================
NOTIFICATION VALUE
============================================================
Indicate the current alarm notification level as the max of any of the alarms,
and set the low-order bit for reset or ack required:
0 = Not in alarm, acknowledged
1 = Not in alarm, unacknowledged or reset required
2 = Low severity alarm, acknowledged
3 = Low severity alarm, unacknowledged
4 = Medium severity alarm, acknowledged
5 = Medium severity alarm, unacknowledged
6 = High severity alarm, acknowledged
7 = High severity alarm, unacknowledged
8 = Urgent severity alarm, acknowledged
9 = Urgent severity alarm, unacknowledged

#####  V4.00.00  2018-07-13:  Added Val_NotifyAll and Val_UnackAlmC to roll up alarm  #####
#####  priority / ack status and unack. alarm count.  #####]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Notify) CLR(Wrk_UnackAlmC) ,GRT(FailToStart.Val_Notify,Wrk_Notify) MOV(FailToStart.Val_Notify,Wrk_Notify) ,GRT(FailToStop.Val_Notify,Wrk_Notify) MOV(FailToStop.Val_Notify,Wrk_Notify) ,GRT(IntlkTrip.Val_Notify,Wrk_Notify) MOV(IntlkTrip.Val_Notify,Wrk_Notify) ,GRT(DriveFault.Val_Notify,Wrk_Notify) MOV(DriveFault.Val_Notify,Wrk_Notify) ,GRT(IOFault.Val_Notify,Wrk_Notify) MOV(IOFault.Val_Notify,Wrk_Notify) ,[XIC(FailToStart.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(FailToStop.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IntlkTrip.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(DriveFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ,XIC(IOFault.Val_Notify.0) ADD(Wrk_UnackAlmC,1,Wrk_UnackAlmC) ] OTE(Wrk_Notify.0) ,MOV(Wrk_Notify,Val_Notify) MOV(Wrk_Notify,Val_NotifyAll) MOV(Wrk_UnackAlmC,Val_UnackAlmC) ];]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Comment>
<![CDATA[This rung identifies:
* if a latched Shed condition requires a reset in order to run the motor;
* if that reset or any alarm reset or other reset is required; and
* if any reset or acknowledge from the operator is required.

#####  V4.00.00  2018-07-13:  Aligned ready bit naming with command bit names.  #####
#####  All OCmds/MCmds and ORdys/MRdys are now Local Tags.  #####
#####  Added Sts_RdyAck and Sts_ResetReqd for use by external objects.  #####]]>
</Comment>
<Text>
<![CDATA[[[XIC(FailToStart.Sts_RdyAck) ,XIC(FailToStop.Sts_RdyAck) ,XIC(IntlkTrip.Sts_RdyAck) ,XIC(IOFault.Sts_RdyAck) ,XIC(DriveFault.Sts_RdyAck) ] OTE(Sts_RdyAck) ,[XIC(FailToStart.Sts_RdyReset) ,XIC(FailToStop.Sts_RdyReset) ,XIC(IntlkTrip.Sts_RdyReset) ,XIC(DriveFault.Sts_RdyReset) ,XIC(IOFault.Sts_RdyReset) ,XIC(Nrdy_Trip) ,XIC(Nrdy_PrioStop) ,XIC(Nrdy_Fail) ,XIC(Nrdy_IOFault) XIO(Sts_IOFault) ] OTE(ORdy_Reset) ]OTE(ORdy_ResetAckAll);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear Ownership, set drive to STOP, clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, set the Ownership to NO OWNER (0).]]>
</Comment>
<Text>
<![CDATA[CLR(PSet_Owner)CLR(Val_Owner);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
"ASPECT" OWNERSHIP
============================================================
Using the Command Source determined above, and the Cfg_OperKeep, Cfg_ProgKeep and
Cfg_ExtKeep bits, determine who (Prog, Oper or Ext) "owns"
each of the Device's "aspects":
Speed Reference (.0), Commands (.1), Output Datalink (.3).

The bits within Cfg_xxxxKeep determine which "aspects"
(sub-functions of this AOI) are retained by the Oper, Prog or Ext
when one of the other command sources is selected.

All aspects (functions) may be "kept" (basically locking the command source
slection, rendering it moot --  you get to explain how it works to your operators!!!),
but it is NOT allowed to have any given function retained by more than one
source.  This rung ensures that no function is "kept" by more than one source.

ON PRESCAN:  If any two of Oper Keep, Prog Keep and Ext Keep get set on download or during
controller PROG mode, they are ALL CLEARED on powerup!!!]]>
</Comment>
<Text>
<![CDATA[[[XIC(Cfg_OperKeep.0) XIC(Cfg_ProgKeep.0) ,XIC(Cfg_OperKeep.0) XIC(Cfg_ExtKeep.0) ,XIC(Cfg_ExtKeep.0) XIC(Cfg_ProgKeep.0) ] OTU(Cfg_OperKeep.0) OTU(Cfg_ProgKeep.0) OTU(Cfg_ExtKeep.0) ,[XIC(Cfg_OperKeep.1) XIC(Cfg_ProgKeep.1) ,XIC(Cfg_OperKeep.1) XIC(Cfg_ExtKeep.1) ,XIC(Cfg_ExtKeep.1) XIC(Cfg_ProgKeep.1) ] OTU(Cfg_OperKeep.1) OTU(Cfg_ProgKeep.1) OTU(Cfg_ExtKeep.1) ,[XIC(Cfg_OperKeep.3) XIC(Cfg_ProgKeep.3) ,XIC(Cfg_OperKeep.3) XIC(Cfg_ExtKeep.3) ,XIC(Cfg_ExtKeep.3) XIC(Cfg_ProgKeep.3) ] OTU(Cfg_OperKeep.3) OTU(Cfg_ProgKeep.3) OTU(Cfg_ExtKeep.3) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA["Lurking" Commands not handled elsewhere are cleared.

#####  V4.00.00  2018-07-13:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####
#####  Added External Commands.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(OCmd_StartFwd) OTU(OCmd_StartRev) OTU(OCmd_Stop) ,OTU(OCmd_JogFwd) OTU(OCmd_JogRev) ,OTU(XCmd_StartFwd) OTU(XCmd_StartRev) OTU(XCmd_Stop) ,OTU(XCmd_JogFwd) OTU(XCmd_JogRev) ,OTU(PCmd_StartFwd) OTU(PCmd_StartRev) OTU(PCmd_Stop) ,OTU(MCmd_Bypass) OTU(MCmd_Check) ,CLR(Inp_OvrdCmd) ,OTU(OCmd_Reset) OTU(OCmd_ResetAckAll) OTU(XCmd_Reset) OTU(PCmd_Reset) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Since we're not processing Operator Commands or Settings, we're not READY for any of them either!

#####  V4.00.00  2018-07-13:  Removed Disable, Enable; now handled by P_CmdSrc as OoS, IS.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(ORdy_StartFwd) OTU(ORdy_StartRev) OTU(ORdy_Stop) ,OTU(ORdy_JogFwd) OTU(ORdy_JogRev) ,OTU(MRdy_Bypass) OTU(MRdy_Check) ,OTU(ORdy_Reset) OTU(ORdy_ResetAckAll) OTU(Sts_RdyAck) OTU(ORdy_SpeedRef) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[On powerup (prescan), set drive to stop.]]>
</Comment>
<Text>
<![CDATA[OTU(Wrk_Run)OTU(Wrk_Jog);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Reset the fault condition Shed latches.]]>
</Comment>
<Text>
<![CDATA[OTU(Nrdy_PrioStop)OTU(Nrdy_Fail)OTU(Nrdy_IOFault);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Outputs are cleared on Prescan.

#####  V4.00.00  2018-07-13:  Added Autible Alert on start.  #####]]>
</Comment>
<Text>
<![CDATA[[OTU(Out_Start) OTU(Out_Stop) OTU(Out_Run) OTU(Out_Jog) ,OTU(Out_Fwd) OTU(Out_Rev) OTU(Out_ClearFault) OTU(Out_Horn) ,CLR(Out_SpeedRef) CLR(Out_Datalink) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Show the enumerated drive command as NONE.
Show the enumerated drive feedback as NONE.
Show the enumerated drive status as POWERUP / UNKNOWN.]]>
</Comment>
<Text>
<![CDATA[CLR(Val_Cmd)CLR(Val_Fdbk)CLR(Val_Sts);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_Intlk" Revision="4.10" RevisionExtension=".01 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-04-02T16:58:50.551Z" CreatedBy="Not Available" EditedDate="2019-10-16T20:50:58.588Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Interlocks]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors up to 16 Interlock conditions.  It provides these features:

*  The "OK" state of each Interlock Input is configurable.  By default,
    each Input is 1 to trip, 0 when OK to run.
*  Interlocks may be configured as Latched.  Latched Interlocks
    require a Reset Command to clear.  The latching function can be
    inhibited via a Latch Defeat input, for example, to avoid latching
    Interlocks for a stopped motor.
*  Interlocks may be configured as Bypassable; Non-Bypassable
    Interlocks are reported separately so the destination object can
    decide whether to bypass (ignore) bypassable interlocks, such
    as in Maintenance Mode.
*  First-Out reporting indicates the first condition that caused the
    running equipment to be tripped.
*  For each Interlock condition, a Tag may be defined for navigation.
    Clicking the Interlock description will call up the associated Tag's
    Faceplate.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.10.00)
See 4.10 Release Notes for details.
* Modified conditions for clearing first-out status and text.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Changed type of Val_FirstOutTxt to STRING_Cond.
* Corrected Scan Mode selection to execute Prescan logic.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-05)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Added Val_FirstOutTxt string (Local, read-only) for use in
   IntlkTrip alarm message  (ref: KnowledgeBase answer ID 672568).
* Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
* All OCmds/MCmds and ORdys/MRdys are now Local Tags.
* Added Sts_RdyReset for use by external objects.]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk00" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.0" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 00, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk01" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.1" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 01, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk02" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.2" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 02, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk03" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.3" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 03, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk04" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.4" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 04, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk05" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.5" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 05, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk06" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.6" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 06, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk07" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.7" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 07, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk08" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.8" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 08, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk09" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.9" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 09, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk10" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.10" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 10, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk11" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.11" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 11, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk12" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.12" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 12, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk13" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.13" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 13, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk14" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.14" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 14, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Intlk15" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.15" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Interlock Cond. 15, Stop if not in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_BypActive" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Interlock Bypassing is currently active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_LatchDefeat" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Latch Defeat 1=Do
not latch inputs even if configured for latching]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Reset Latched Interlocks and First-Out]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OKState" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bits indicate which state (0 or 1) of each input is OK to run]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_Latched" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Set bits indicate which conditions are latched (sealed in)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_Bypassable" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Set bits indicate which conditions can be bypassed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasNav" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Set bits indicate which Navigation buttons are enabled]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_Reset" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Reset Latched Interlocks]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_IntlkOK" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Overall Interlock Status (1=OK to run, 0=Stop)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NBIntlkOK" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Non-Bypassable Interlock Status (1=All NB Interlocks OK to run)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_BypActive" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Interlock Bypassing is Active (ignore bypassable interlocks)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_RdyReset" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ORdy_Reset" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=A latched interlock (returned to OK) is ready to be reset]]>
</Description>
</Parameter>
<Parameter Name="Sts_Intlk" TagType="Base" DataType="INT" Usage="Output" Radix="Binary" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Individual Interlock Status (1=Stop, 0=OK)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_FirstOut" TagType="Base" DataType="INT" Usage="Output" Radix="Binary" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Interlock First Out Status (bit 1 is First Not-OK condition)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="P_Intlk" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Cfg_CondTxt" DataType="STRING_Cond" Dimensions="16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Short HMI description of Interlock Conditions]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[[20,'Enter Description
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="STRING_Cond" Dimensions="16">
<Element Index="[0]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="20"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA['Enter Description #0']]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Inp" DataType="INT" Radix="Binary" ExternalAccess="Read/Write">
<Description>
<![CDATA[Collection copy of Inp_IntlkXXs]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NB" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Working register for Non-Bypassable Interlock ogic]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Intlk" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Working register for Interlock logic]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FirstOut" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Working register for First Out logic]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Sts" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Working register for generating Interlock status]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_PrevSts" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Interlock Status previous scan]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_LatchEnable" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[1=Latch interlock if configured to latch, 0=don't latch]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpInv" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Input states after inversion based on Cfg_OKState]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Type identifier for HMI navigation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Intlk$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Intlk']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[10,'Interlocks$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="10">
<![CDATA['Interlocks']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[7,'P_Intlk$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="7">
<![CDATA['P_Intlk']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[25,'Interlocks with First Out$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="25">
<![CDATA['Interlocks with First Out']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_NavTag" DataType="STRING_NavTag" Dimensions="16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagnames for destinations of Navigation buttons]]>
</Description>
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="STRING_NavTag" Dimensions="16">
<Element Index="[0]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MSet_Bypass" DataType="INT" Radix="Binary" ExternalAccess="Read/Write">
<Description>
<![CDATA[Individual condition Maintenance Bypass toggles]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Val_FirstOutTxt" DataType="STRING_Cond" ExternalAccess="Read Only">
<Description>
<![CDATA[Text Description of First-Out Condition]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_NonIntlkStop" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[One-Shot store: Stop OTHER than Interlock Stop occurred.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SetFirstOut" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[One-Shot store: First Out update triggered]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ORdy_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Ready for OCmd_Reset (enables HMI button)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="OCmd_Reset" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Operator Command to Reset Latched Interlocks]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Set summary "OK" Status bits to FALSE (0)]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
 Clear "Lurking" Commands (received while on false rung).

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Reset)OTU(PCmd_Reset);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[ 
Since we're not processing Operator Commands, we're not READY for them either!]]>
</Comment>
<Text>
<![CDATA[OTU(ORdy_Reset);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[If this Interlocks instruction is OFF-SCAN (rung is false or EnableIn is false in FBD),
then set the summary Interlock OK Status bits to FALSE (0).]]>
</Comment>
<Text>
<![CDATA[OTU(Sts_IntlkOK)OTU(Sts_NBIntlkOK);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Individual Interlock Bypasses can only be set for conditions that are
configured as Bypassable.  This AND clears all the MSets for inputs
that are NOT Bypassable.]]>
</Comment>
<Text>
<![CDATA[AND(MSet_Bypass,Cfg_Bypassable,MSet_Bypass);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Check Interlock Conditions]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_Intlk:  PROCESS -- INTERLOCKS
============================================================
Revision 4.10.01 Release  2019-10-16:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x Revision History archived.
V4.00.00  2018-07-16:  Changed Inf_ items to HMI_, and added Cfg_Area for security.
Added Val_FirstOutTxt string (Local, read-only) for use in
IntlkTrip alarm message  (ref: KnowledgeBase answer ID 672568).
Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.
All OCmds/MCmds and ORdys/MRdys are now Local Tags.
Added Sts_RdyReset for use by external objects.
V4.10.00  2019-03-08:  Changed type of Val_FirstOutTxt to STRING_Cond.
Corrected Scan Mode selection to execute Prescan logic. Added Cfg_HasMoreObj.\
V4.10.01  2019-10-16:  Modified conditions for clearing first-out status and text.
============================================================
This Instruction monitors up to 16 Interlock conditions.  It provides these features:

*  The "OK" state of each Interlock Input is configurable.
By default, each Input is 1 to trip, 0 when OK to run.
*  Interlocks may be configured as Latched.  Latched Interlocks
require a Reset Command to clear.  The latching function can be inhibited
via a Latch Defeat input, for example, to avoid latching Interlocks for a stopped motor.
*  Interlocks may be configured as Bypassable.  Bypassable Interlocks are reported
separately; the destination object can use this information to bypass these
Interlocks in Maintenance Mode or upon command.
*  First-Out reporting indicates the first condition that
caused the running equipment to be tripped.
* For each Interlock condition, a Tag may be defined for navigation. Clicking
the Interlock description will call up the associated Tag's Faceplate.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-16:  Added string for Cfg_Area, Val_FirstOutTxt; renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)[LOWER(Cfg_Desc,Cfg_Label) LOWER(Cfg_Tag,Cfg_Area) CONCAT(HMI_Lib,HMI_Type,Val_FirstOutTxt) ,LOWER(Cfg_CondTxt[0],Cfg_CondTxt[1]) LOWER(Cfg_CondTxt[2],Cfg_CondTxt[3]) LOWER(Cfg_CondTxt[4],Cfg_CondTxt[5]) LOWER(Cfg_CondTxt[6],Cfg_CondTxt[7]) ,LOWER(Cfg_CondTxt[8],Cfg_CondTxt[9]) LOWER(Cfg_CondTxt[10],Cfg_CondTxt[11]) LOWER(Cfg_CondTxt[12],Cfg_CondTxt[13]) LOWER(Cfg_CondTxt[14],Cfg_CondTxt[15]) ,LOWER(Cfg_NavTag[0],Cfg_NavTag[1]) LOWER(Cfg_NavTag[2],Cfg_NavTag[3]) LOWER(Cfg_NavTag[4],Cfg_NavTag[5]) LOWER(Cfg_NavTag[6],Cfg_NavTag[7]) ,LOWER(Cfg_NavTag[8],Cfg_NavTag[9]) LOWER(Cfg_NavTag[10],Cfg_NavTag[11]) LOWER(Cfg_NavTag[12],Cfg_NavTag[13]) LOWER(Cfg_NavTag[14],Cfg_NavTag[15]) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
INPUT GATHERING
============================================================
This object uses word-wise logic.  The 16 interlock inputs are aliased
to the Wrk_Inp word, so no logic is needed to collect the individual
conditions.  We can immediately start processing the interlock logic.
============================================================
HANDLE "OK STATE" INVERSIONS
============================================================
This rung inverts the Input bits whose "OK State" is 1 (0 to Stop).
The resulting Wrk_Inp word is ZERO if all interlock inputs are "OK".]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)XOR(Wrk_Inp,Cfg_OKState,Wrk_InpInv);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND PROCESSING
============================================================
On receipt of a Reset Command, the output
Interlock Status (internal copy, actually) is cleared.
(Later logic may fill this in again if some Interlock conditions are true...)

NOTE:  This object is "Modeless" -- Operator and Program Commands
are accepted at any time.

#####  V4.00.00  2018-07-16:  Deleted Cfg_PCmdClear; all Program Commands are now self-clearing.  #####]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_Reset) OTU(PCmd_Reset) ,XIC(OCmd_Reset) OTU(OCmd_Reset) ,XIC(Inp_Reset) ]CLR(Wrk_Sts);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[If the Latch Defeat Input is ON (say, motor not running) and the stored interlock
status is clear (typically, after we get a reset in the rung above),
switch to "not latching" for all interlock inputs (regardless of Cfg_Latched).

This has the effect of keeping the Latch Enable work bit ON until a Reset is received.
Hence this is part of the "reset command processing" logic....]]>
</Comment>
<Text>
<![CDATA[EQU(Wrk_Sts,0)XIC(Inp_LatchDefeat)OTU(Wrk_LatchEnable);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[============================================================
INTERLOCK PROCESSING
============================================================
This rung clears any bits in the stored Interlock status for which the
Input bit is OFF and the bit is NOT configured as Latched.

If the LatchDefeat input in OFF, set the internal Latch Enable work bit.
If this bit is ON, don't clear any latched bits with this rung (keep them latched).
If this bit is OFF, clear any bits that are NOT on in the input, whether
configured for latching or not!]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_LatchDefeat) OTL(Wrk_LatchEnable) ,XIC(Wrk_LatchEnable) OR(Cfg_Latched,Wrk_InpInv,Wrk_Intlk) ,XIO(Wrk_LatchEnable) MOV(Wrk_InpInv,Wrk_Intlk) ]AND(Wrk_Sts,Wrk_Intlk,Wrk_Sts);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[This rung SETS Interlock status bits for any Interlock condition Input that is true.]]>
</Comment>
<Text>
<![CDATA[OR(Wrk_Sts,Wrk_InpInv,Wrk_Sts);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Individual Interlock Bypasses can only be set for conditions that are
configured as Bypassable.  This AND clears all the MSets for inputs
that are NOT Bypassable.

The internal Non-Bypassable Interlocks word has bits set only if the Input is TRUE
AND the bit is configured as a NON-bypassable Interlock OR NOT bypassed..]]>
</Comment>
<Text>
<![CDATA[AND(MSet_Bypass,Cfg_Bypassable,MSet_Bypass)NOT(MSet_Bypass,Wrk_NB)AND(Wrk_Sts,Wrk_NB,Wrk_NB);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[Clear the First Out status and text when the Latch Defeat input turns off (One-Shot).
This generally occurs when the downstream device STARTS.

#####  V4.00.00  2018-07-16:  Added Val_FirstOutTxt string (Local, read-only) for use in IntlkTrip alarm message.  #####
#####  V4.10.01  2019-10-16:  Modified conditions for clearing first-out status and text.  #####]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_LatchDefeat)ONS(Wrk_NonIntlkStop)CLR(Wrk_FirstOut)FLL(0,Val_FirstOutTxt,1);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[If an interlock condition occurs (which interlocks depends on the
bypass status!) and the Latch Defeat input is NOT set,
the equipment is running and will be shut down.
If this happens, record the First Out status.

#####  V4.00.00  2018-07-16:  Added Val_FirstOutTxt string (Local, read-only) for use in IntlkTrip alarm message.  #####
#####  V4.10.00  2019-03-08:  Changed type of Val_FirstOutTxt to STRING_Cond.  #####]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_BypActive) NEQ(Wrk_Sts,0) ,XIC(Inp_BypActive) NEQ(Wrk_NB,0) ]XIO(Inp_LatchDefeat)ONS(Wrk_SetFirstOut)[XIO(Inp_BypActive) CPT(Wrk_FirstOut,(Wrk_Sts)AND(NOT(Wrk_PrevSts))) ,XIC(Inp_BypActive) CPT(Wrk_FirstOut,(Wrk_NB)AND(NOT(Wrk_PrevSts))) ,NEQ(Wrk_FirstOut,0) [XIC(Wrk_FirstOut.15) COP(Cfg_CondTxt[15],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.14) COP(Cfg_CondTxt[14],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.13) COP(Cfg_CondTxt[13],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.12) COP(Cfg_CondTxt[12],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.11) COP(Cfg_CondTxt[11],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.10) COP(Cfg_CondTxt[10],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.9) COP(Cfg_CondTxt[9],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.8) COP(Cfg_CondTxt[8],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.7) COP(Cfg_CondTxt[7],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.6) COP(Cfg_CondTxt[6],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.5) COP(Cfg_CondTxt[5],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.4) COP(Cfg_CondTxt[4],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.3) COP(Cfg_CondTxt[3],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.2) COP(Cfg_CondTxt[2],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.1) COP(Cfg_CondTxt[1],Val_FirstOutTxt,1) ,XIC(Wrk_FirstOut.0) COP(Cfg_CondTxt[0],Val_FirstOutTxt,1) ] ];]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The value used for "First Out" generation this scan is stored
as the "previous" value for use in the above logic next scan.]]>
</Comment>
<Text>
<![CDATA[[XIO(Inp_BypActive) MOV(Wrk_Sts,Wrk_PrevSts) ,XIC(Inp_BypActive) MOV(Wrk_NB,Wrk_PrevSts) ];]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[============================================================
STATUS GENERATION
============================================================
This rung generates the public Status for this object.
If all the Interlock Status bits are zero, there is no condition to
shut down the affected equipment.  In that case, show the Interlock Status as "OK"

Similar logic applies for the Non-Bypassable Interlocks OK Status.

Also show the individual Interlock Status bits and the First Out Status bits.

NOTE:  Working registers are used to prevent outside writes to the Sts_xxx
parameters from affecting the state of this object!]]>
</Comment>
<Text>
<![CDATA[[[EQU(Wrk_Sts,0) OTE(Sts_IntlkOK) ,EQU(Wrk_NB,0) OTE(Sts_NBIntlkOK) ] ,XIC(Inp_BypActive) OTE(Sts_BypActive) ,MOV(Wrk_Sts,Sts_Intlk) ,MOV(Wrk_FirstOut,Sts_FirstOut) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND READIES
============================================================
This Interlock ojbect is ready for (needs) a RESET Command
if any Latched Interlocks are SET.]]>
</Comment>
<Text>
<![CDATA[CMP((NOT(Wrk_InpInv))AND(Wrk_Sts)AND(Cfg_Latched))OTE(ORdy_Reset);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear "lurking" Commands]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN (POWERUP) HANDLING
============================================================
On Prescan, clear any "lurking" Commands.]]>
</Comment>
<Text>
<![CDATA[OTU(OCmd_Reset)OTU(PCmd_Reset);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_Perm" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-04-03T19:38:05.264Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:14:53.887Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Permissives]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors up to 16 Permissive conditions.  It provides these features:

*  The "OK" state of each Permissive Input is configurable.  By default,
    each Input is 1 when OK to start, 0 when not OK to start.
*  Permissives may be configured as Bypassable.  A separate Sts_NBPermOK 
    (Non-Bypassable Permissives OK) status is provided, which the destination
    object can use for Bypass, Maintenance and other functions,
    where Bypassable Permissives can be ignored.

All Permissive Inputs must be in their configured "OK" states
for the P_Perm instruction to provide a "PermOK" status.

All non-bypassable Permissive inputs must be in their configured "OK" states
for the P_Perm instruction to provide a "NBPermOK" status.

For each Permissive condition, a Tag may be defined for navigation. Clicking
the Permissive description will call up the associated Tag's Faceplate.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-05)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* OSets / OCmds and MSets / MCmds are now LOCAL TAGS.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm00" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.0" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 00, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm01" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.1" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 01, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm02" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.2" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 02, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm03" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.3" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 03, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm04" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.4" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 04, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm05" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.5" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 05, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm06" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.6" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 06, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm07" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.7" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 07, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm08" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.8" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 08, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm09" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.9" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 09, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm10" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.10" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 10, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm11" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.11" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 11, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm12" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.12" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 12, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm13" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.13" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 13, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm14" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.14" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 14, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_Perm15" TagType="Alias" Usage="Input" Radix="Decimal" AliasFor="Wrk_Inp.15" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Permissive Cond 15, OK to start if in configured OK state]]>
</Description>
</Parameter>
<Parameter Name="Inp_BypActive" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Permissive Bypassing is currently active]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_OKState" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bits indicate which state (0 or 1) of each input is OK to start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#1111_1111_1111_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_Bypassable" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Set bits indicate which conditions can be bypassed]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasNav" TagType="Base" DataType="INT" Usage="Input" Radix="Binary" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Set bits indicate which Navigation buttons are enabled]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_PermOK" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Overall Permissive Status (1=OK to start)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_NBPermOK" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Non-Bypassable Permissive Status (1 =all non- bypassable Permissives OK to start)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_BypActive" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Permissive Bypassing is Active (ignore bypassable permissives)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Perm" TagType="Base" DataType="INT" Usage="Output" Radix="Binary" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Individual Permissive Status (1=OK, 0=don't start)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#1111_1111_1111_1111"/>
</DefaultData>
</Parameter>
<Parameter Name="P_Perm" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Cfg_CondTxt" DataType="STRING_Cond" Dimensions="16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Short HMI description of Permissive Conditions]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[[20,'Enter Description
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="STRING_Cond" Dimensions="16">
<Element Index="[0]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="20"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA['Enter Description #0']]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="STRING_Cond">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_Cond" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Inp" DataType="INT" Radix="Binary" ExternalAccess="Read/Write">
<Description>
<![CDATA[Collection copy of Inp_PermXXs]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[-1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#1111_1111_1111_1111"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Bypass" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Working Register for Bypassable Permissives]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_InpInv" DataType="INT" Radix="Binary" ExternalAccess="None">
<Description>
<![CDATA[Input states after inverting based on Cfg_OKState]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Type identifier for HMI navigation]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'P_Perm$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['P_Perm']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[11,'Permissives$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="11">
<![CDATA['Permissives']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'P_Perm$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['P_Perm']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[11,'Permissives$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="11">
<![CDATA['Permissives']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_NavTag" DataType="STRING_NavTag" Dimensions="16" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagnames for destinations of Navigation buttons]]>
</Description>
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="STRING_NavTag" Dimensions="16">
<Element Index="[0]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="STRING_NavTag">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STRING_NavTag" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</Structure>
</Element>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MSet_Bypass" DataType="INT" Radix="Binary" ExternalAccess="Read/Write">
<Description>
<![CDATA[Individual condition Maintenance Bypass toggles]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Set summary "OK" Status bits to FALSE (0)]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
OFF-SCAN (EnableIn is False) STATUS
============================================================
If this Permissives instruction is OFF-SCAN (rung is false or EnableIn is false in FBD),
then set the summary Permissive OK Status bits to FALSE (0).]]>
</Comment>
<Text>
<![CDATA[OTU(Sts_PermOK)OTU(Sts_NBPermOK);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Individual Permissive Bypasses can only be set for conditions that are
configured as Bypassable.  This AND clears all the MSets for inputs
that are NOT Bypassable.

#####  V4.00.00  2018-07-16:  OSets / OCmds and MSets / MCmds are now LOCAL TAGS.  #####]]>
</Comment>
<Text>
<![CDATA[AND(MSet_Bypass,Cfg_Bypassable,MSet_Bypass);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Check Permissive Conditions]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_Perm:  PROCESS -- PERMISSIVES
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x and V3.x Revision History archived.
V4.00.00  2018-07-16:  Changed Inf_ items to HMI_, and added Cfg_Area for security.
OSets / OCmds and MSets / MCmds are now LOCAL TAGS.
V4.10.00  2019-03-08:  Added Cfg_HasMoreObj.
============================================================
This Instruction monitors up to 16 Permissive conditions.  It provides these features:

*  The "OK" state of each Permissive Input is configurable.  By default,
each Input is 1 when OK to start, 0 when not OK to start.
*  Permissives may be configured as Bypassable.  A separate Sts_NBPermOK 
(Non-Bypassable Permissives OK) status is provided, which the destination
object can use forBypass, Maintenance and other functions,
where Bypassable Permissives can be ignored.

All Permissive Inputs must be in their configured "OK" states
for the P_Perm instruction to provide a "PermOK" status.

All non-bypassable Permissive inputs must be in their configured "OK" states
for the P_Perm instruction to provide a "NBPermOK" status.

For each Permissive condition, a Tag may be defined for navigation. Clicking
the Permissive description will call up the associated Tag's Faceplate.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-16:  Added string for Cfg_Area, renamed Inf_* to HMI_*.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)[LOWER(Cfg_Desc,Cfg_Label) LOWER(Cfg_Tag,Cfg_Area) LOWER(HMI_Lib,HMI_Type) ,LOWER(Cfg_CondTxt[0],Cfg_CondTxt[1]) LOWER(Cfg_CondTxt[2],Cfg_CondTxt[3]) LOWER(Cfg_CondTxt[4],Cfg_CondTxt[5]) LOWER(Cfg_CondTxt[6],Cfg_CondTxt[7]) ,LOWER(Cfg_CondTxt[8],Cfg_CondTxt[9]) LOWER(Cfg_CondTxt[10],Cfg_CondTxt[11]) LOWER(Cfg_CondTxt[12],Cfg_CondTxt[13]) LOWER(Cfg_CondTxt[14],Cfg_CondTxt[15]) ,LOWER(Cfg_NavTag[0],Cfg_NavTag[1]) LOWER(Cfg_NavTag[2],Cfg_NavTag[3]) LOWER(Cfg_NavTag[4],Cfg_NavTag[5]) LOWER(Cfg_NavTag[6],Cfg_NavTag[7]) ,LOWER(Cfg_NavTag[8],Cfg_NavTag[9]) LOWER(Cfg_NavTag[10],Cfg_NavTag[11]) LOWER(Cfg_NavTag[12],Cfg_NavTag[13]) LOWER(Cfg_NavTag[14],Cfg_NavTag[15]) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
INPUT GATHERING
============================================================
This object uses word-wise logic.  The 16 permissive inputs are aliased
to the Wrk_Inp word, so no logic is needed to collect the individual
conditions.  We can immediately start processing the permissive logic.
============================================================
HANDLE "OK STATE" INVERSIONS
============================================================
This rung inverts the Input bits whose "OK State" is 1 (0 to Run).
The resulting Wrk_Inp word is ALL ONES if all permissive inputs are "OK".]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)CPT(Wrk_InpInv,Wrk_Inp XOR(NOT(Cfg_OKState)));]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[============================================================
PERMISSIVE PROCESSING
============================================================
Individual Permissive Bypasses can only be set for conditions that are
configured as Bypassable.  The AND clears all the MSets for inputs
that are NOT Bypassable.

If an input is Bypassed, or the input is ON, that bit is OK as far as
Bypassable Permissives are concerned.

#####  V4.00.00  2018-07-16:  OSets / OCmds and MSets / MCmds are now LOCAL TAGS.  #####]]>
</Comment>
<Text>
<![CDATA[AND(MSet_Bypass,Cfg_Bypassable,MSet_Bypass)OR(MSet_Bypass,Wrk_InpInv,Wrk_Bypass);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
STATUS GENERATION
============================================================
These rungs generate the public Status for this object.

The Input Permissive conditions are passed through (wordwise)
directly to the final Permissive Status]]>
</Comment>
<Text>
<![CDATA[MOV(Wrk_InpInv,Sts_Perm);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[If all the Permissive Status bits are ONE, there is no condition to
prevent starting the affected equipment: show the Permissive Status as "OK"

If all the Non-Bypassable permissives are true, set the NBPermOK Status as "OK"

If Permissive Bypassing is active (this input usually comes from a downstream
device block: motor, valve, etc.), then make this Status known to the HMI.]]>
</Comment>
<Text>
<![CDATA[[EQU(Sts_Perm,-1) OTE(Sts_PermOK) ,EQU(Wrk_Bypass,-1) OTE(Sts_NBPermOK) ,XIC(Inp_BypActive) OTE(Sts_BypActive) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_ResInh" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2004-09-26T00:54:12.942Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:17:23.663Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Restart Inhibit]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors starts, running and stops of a motor and decides, based
on rules for winding heating, when the motor can be started again.

This Instruction uses a state model, which is documented in the User
Documentation for the instruction.  It has the following states:

*  S01:  Cold Motor Ready to Start  
*  S02:  Cold Motor Starting
*  S03:  Cold Motor Running
*  S04:  Cold Motor First Failure to Start
*  S05:  Cold Motor Subsequent Failure to Start
*  S06:  Hot Motor Starting
*  S07:  Hot Motor Running
*  S08:  Hot Motor Short Run Then Stopped
*  S09:  Hot Motor First Failure to Start
*  S10:  Hot Motor Subsequent Failure to Start
*  S11:  Hot Motor Ready to Start

NOTE:  This is a very basic state model for motor heating and is not intended
as a close physical model of any given motor.  It cannot replace more
extensive or sensor-based motor monitoring and modelling systems.

NOTE:  EnableInFalse (false rung) is treated the same a motor stopped
(Inp_Starting = 0, Inp_Running = 0, Inp_Stopped = 1).

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-03)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Modified state diagram to remove a redundant "running cooled"
    state (was S09).
* Changed time configurations to REAL Hours.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Stopped" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Equipment is confirmed Stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Starting" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Equipment is Starting, indicating a start attempt]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Running" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[Equipment is confirmed Running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_ThreeColdStarts" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time within which three starts are allowed if cold (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[5.00000000e-001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.5"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FirstFailCold" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for cold motor to wait after 1st start failure before ready to start (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[5.00000000e-001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.5"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SubseqFailCold" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for cold motor to wait after 2nd and subsequent start failure before ready (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_FirstFailHot" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for hot motor to wait after 1st start failure before ready to start (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[5.00000000e-001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.5"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_SubseqFailHot" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for hot motor to wait after 2nd and subsequent start failure before ready (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[4.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="4.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HotRestartOK" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for hot motor to run so it can immediately restart after stop (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_RestartHot" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for hot motor to wait after stop if stopped before Hot Restart OK time (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="1.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HotToCold" TagType="Base" DataType="REAL" Usage="Input" Radix="Float" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time for a stopped hot motor to become cold (hr)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1.60000000e+001]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="16.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_MinToReady" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Minutes yet inhibited before ready to start (mmm:ss)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SecToReady" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Seconds yet inhibited before ready to start
(mmm:ss)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Fdbk" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Device Feedback 0=None/Multiple, 1=Stopped, 2=Starting, 3=Running]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_State" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[State Number (see State Diagram in docs) for HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Ready" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Permissive for unit to start 1=ready, 0=not ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Err" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[1=Error in Config: Invalid Time (use 0.0 to 2147483)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="P_ResInh" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_FirstColdStartT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time since first cold start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,1800000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="1800000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FirstFailColdT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for cold motor to wait after 1st start failure before ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,1800000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="1800000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SubsFailColdT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for cold motor to wait after 2nd and subs. failures before ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,14400000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="14400000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FirstFailHotT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for hot motor to wait after 1st start failure before ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,1800000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="1800000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SubsFailHotT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for hot motor to wait after 2nd and subs. failures before ready]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,14400000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="14400000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HotRestartOKT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for hot motor to run so it can restart immediately when stopped]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,14400000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="14400000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_RestartHotT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for hot motor to wait after stop after running less than Hot Restart OK time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,3600000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="3600000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_HotToColdT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time for a stopped hot motor to become cold]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,57600000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="57600000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_FailCount" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Number of failed start attempts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_mSecUntilReady" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Milliseconds until the inhibit time is done and the unit is ready to start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SecUntilReady" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Seconds until inhibit time is done and the unit is ready to start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_State" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Instruction State (see state diagram in design docs)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Ready" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Internal storage of Sts_Ready:
1 = OK to start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_SecondColdStartT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Time since second cold start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,1800000,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="1800000"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Fdbk" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Buffer for building Val_Fdbk]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'P_ResInh$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['P_ResInh']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[15,'Restart Inhibit$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="15">
<![CDATA['Restart Inhibit']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'P_ResInh$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['P_ResInh']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[15,'Restart Inhibit$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="15">
<![CDATA['Restart Inhibit']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[Process state model for Motor as Not Running]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
P_ResInh:  RESTART INHIBIT EnableIn False Handling
============================================================
Treat EnableIn False (False Rung) as if
 Inp_Starting = 0, Inp_Running = 0 and Inp_Stopped = 1,
('motor stopped')

This logic is identical to the main Logic Routine except that actions with the Motor
Running or Starting have been removed, and all actions with the Motor
Stopped have been made unconditional.  Adjacent unconditional rungs
have been combined to save memory.

============================================================
INVALID STATE
============================================================
If the State number is not valid (valid states are 1..11),
 the various timers are reset (all are retentive), and the State Machine is set to:

*  State S01  ( Cold Motor Ready to Start )  if the pump is NOT Running, or
*  State S03  ( Cold Motor Running )  if the pump is Running.
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LIM(12,Wrk_State,0)[RES(Wrk_FirstColdStartT) RES(Wrk_SecondColdStartT) RES(Wrk_FirstFailColdT) ,RES(Wrk_SubsFailColdT) RES(Wrk_FirstFailHotT) RES(Wrk_SubsFailHotT) ,RES(Wrk_HotRestartOKT) RES(Wrk_RestartHotT) RES(Wrk_HotToColdT) ,MOV(1,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[===========================================================================
CONFIGURATION
===========================================================================
This rung gets Configuration data.  Timer Configurations are scaled from seconds to
milliseconds and stored in the appropriate timer presets.
If a calculated timer preset is negative, it will fault the controller;
overwrite it and flag the configuration as bad.

#####  V4.00.00  2018-07-17:  Changed time configurations to REAL Hours.  #####]]>
</Comment>
<Text>
<![CDATA[[[MUL(Cfg_ThreeColdStarts,3600000.0,Wrk_FirstColdStartT.PRE) XIC(Wrk_FirstColdStartT.PRE.31) CLR(Wrk_FirstColdStartT.PRE) ,MUL(Cfg_FirstFailCold,3600000.0,Wrk_FirstFailColdT.PRE) XIC(Wrk_FirstFailColdT.PRE.31) CLR(Wrk_FirstFailColdT.PRE) ,MUL(Cfg_SubseqFailCold,3600000.0,Wrk_SubsFailColdT.PRE) XIC(Wrk_SubsFailColdT.PRE.31) CLR(Wrk_SubsFailColdT.PRE) ,MUL(Cfg_FirstFailHot,3600000.0,Wrk_FirstFailHotT.PRE) XIC(Wrk_FirstFailHotT.PRE.31) CLR(Wrk_FirstFailHotT.PRE) ,MUL(Cfg_SubseqFailHot,3600000.0,Wrk_SubsFailHotT.PRE) XIC(Wrk_SubsFailHotT.PRE.31) CLR(Wrk_SubsFailHotT.PRE) ,MUL(Cfg_HotRestartOK,3600000.0,Wrk_HotRestartOKT.PRE) XIC(Wrk_HotRestartOKT.PRE.31) CLR(Wrk_HotRestartOKT.PRE) ,MUL(Cfg_RestartHot,3600000.0,Wrk_RestartHotT.PRE) XIC(Wrk_RestartHotT.PRE.31) CLR(Wrk_RestartHotT.PRE) ,MUL(Cfg_HotToCold,3600000.0,Wrk_HotToColdT.PRE) XIC(Wrk_HotToColdT.PRE.31) CLR(Wrk_HotToColdT.PRE) ] OTE(Sts_Err) ,MOV(Wrk_FirstColdStartT.PRE,Wrk_SecondColdStartT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[====================================================================================
RESTART INHIBIT STATE MACHINE
====================================================================================

The following code implements the State Machine logic shown in the Design Document.

This rung dispatches execution to the code for the current state.  This is to keep from scanning
the code for all the states every scan, and so that certain timers can be shared by multiple states.
(For State = 1, execution just falls through into the State 1 code.)]]>
</Comment>
<Text>
<![CDATA[[EQU(Wrk_State,2) JMP(S02) ,EQU(Wrk_State,3) JMP(S03) ,EQU(Wrk_State,4) JMP(S04) ,EQU(Wrk_State,5) JMP(S05) ,EQU(Wrk_State,6) JMP(S06) ,EQU(Wrk_State,7) JMP(S07) ,EQU(Wrk_State,8) JMP(S08) ,EQU(Wrk_State,9) JMP(S09) ,EQU(Wrk_State,10) JMP(S10) ,EQU(Wrk_State,11) JMP(S11) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S01:  COLD MOTOR READY TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the motor is cold, but ready to start.  
The time since the last cold start attempt is accumulated.

When the motor is started:
If it has been at least LastColdStart minutes since the last attempt was made to start the motor, 
the motor is still considered cold, it has had enough time to cool off.  
If it has been less than LastColdStart minutes since the last attempt was made to start the motor, 
the motor is considered hot due to multiple re-starts in too short a time period.  ]]>
</Comment>
<Text>
<![CDATA[LBL(S01)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S02:  COLD MOTOR STARTING  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, a Cold motor start attempt has been made.
The time since the last Cold start attempt is accumulated.   
The motor must confirm that it is running within RestartInhibit.Wrk_StartCheckTime minutes.  
If it does, the state will change to S03: Cold Motor Running
If it does not start properly within the allowable time, the state will change to either
 S04: 1st Failed Cold Restart, or S05: Subsequent Cold Failed Restart.]]>
</Comment>
<Text>
<![CDATA[LBL(S02)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[[EQU(Wrk_FailCount,1) RES(Wrk_FirstFailColdT) MOV(4,Wrk_State) ,GRT(Wrk_FailCount,1) RES(Wrk_SubsFailColdT) MOV(2,Wrk_FailCount) MOV(5,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S03:  COLD MOTOR RUNNING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, 
The time since the last cold start attempt is accumulated.  
If the cold motor is turned off, the state will change back to S01: Ready to Start, Cold.]]>
</Comment>
<Text>
<![CDATA[LBL(S03)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[MOV(1,Wrk_State)JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S04:  COLD MOTOR FIRST FAILURE TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Cold motor has failed to start for the first time since it was last running properly.
The time since the last cold start attempt is accumulated.   
The state is changed back to S01: Ready to Start, Cold when RestartInhibit.Wrk_FirstFailCold timer elapses.]]>
</Comment>
<Text>
<![CDATA[LBL(S04)OTU(Wrk_Ready)RTO(Wrk_FirstFailColdT,?,?)SUB(Wrk_FirstFailColdT.PRE,Wrk_FirstFailColdT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(Wrk_FirstFailColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S05:  COLD MOTOR SUBSEQUENT FAILURE TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Cold motor has failed to start at least twice in a row since it was last running properly.
The time since the last cold start attempt is accumulated.   
The state is changed back to S01: Ready to Start, Cold when RestartInhibit.Wrk_SubsFailCold timer elapses.]]>
</Comment>
<Text>
<![CDATA[LBL(S05)OTU(Wrk_Ready)RTO(Wrk_SubsFailColdT,?,?)SUB(Wrk_SubsFailColdT.PRE,Wrk_SubsFailColdT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(Wrk_SubsFailColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S06:  COLD MOTOR STARTING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, a Hot motor start attempt has been made.
The motor must confirm that it is running within RestartInhibit.Wrk_StartCheckTime minutes.  
If it does, the state will change to S07: Hot Motor Running < 4 Hours.
If it does not start properly within the allowable time, the state will change to
either S09: 1st Failed Hot Restart, or S10: Subsequent Hot Failed Restart.
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S06)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[[EQU(Wrk_FailCount,1) RES(Wrk_FirstFailHotT) RES(Wrk_HotToColdT) MOV(9,Wrk_State) ,GRT(Wrk_FailCount,1) RES(Wrk_SubsFailHotT) RES(Wrk_HotToColdT) MOV(2,Wrk_FailCount) MOV(10,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S07:  HOT MOTOR RUNNING  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has been started. 
If it is stopped before RestartInhibit.Wrk_HotRestartOk elapses,
it must wait RestartInhibit.Wrk_RestartHot minutes before it can be restarted  (S08).
If it is stopped after RestartInhibit.Wrk_HotRestartOk elapses, it can be restarted immediately (S03).]]>
</Comment>
<Text>
<![CDATA[LBL(S07)OTL(Wrk_Ready)RTO(Wrk_HotRestartOKT,?,?);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[RES(Wrk_RestartHotT)RES(Wrk_HotToColdT)MOV(8,Wrk_State)JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S08:  HOT MOTOR SHORT RUN THEN STOPPED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has been stopped before RestartInhibit.Wrk_HotRestartOk elapsed.
It must wait RestartInhibit.Wrk_RestartHot minutes before it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S08)OTU(Wrk_Ready)RTO(Wrk_RestartHotT,?,?)RTO(Wrk_HotToColdT,?,?)SUB(Wrk_RestartHotT.PRE,Wrk_RestartHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(Wrk_RestartHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S09:  HOT MOTOR FIRST FAILURE TO START 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has failed to start for the first time since it was last running properly.
The time since the Hot motor stopped is accumulated.   Once it reaches the First Hot Fail time,
it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S09)OTU(Wrk_Ready)RTO(Wrk_HotToColdT,?,?)RTO(Wrk_FirstFailHotT,?,?)SUB(Wrk_FirstFailHotT.PRE,Wrk_FirstFailHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(Wrk_FirstFailHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S10:  HOT MOTOR SUBSEQUENT FAILURE TO START
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has failed to start at least twice in a row since it was last running properly.
The time since the Hot motor stopped is accumulated.   Once it reaches the Subsequent Hot Fail Time,
it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S10)OTU(Wrk_Ready)RTO(Wrk_HotToColdT,?,?)RTO(Wrk_SubsFailHotT,?,?)SUB(Wrk_SubsFailHotT.PRE,Wrk_SubsFailHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(Wrk_SubsFailHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S11:  HOT MOTOR READY TO START
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the motor is Hot, but ready to start.  
The time since the Hot motor stopped is accumulated.   
RestartInhibit.Wrk_LastColdStart is run so it is properly timed out when changing to S01: Ready to Start, Cold.  
If 16 hours have elapsed since the Hot motor was running, the state will be changed to S01: Ready to Start, Cold.  
This reflects the fact that the motor has had time to cool off.  
Otherwise, the logic waits for a Start attempt to change the state to S06: Start Check, Hot.
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S11)OTL(Wrk_Ready)RTO(Wrk_HotToColdT,?,?);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(Wrk_HotToColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Comment>
<![CDATA[This is common return point for ALL states when EnableIn is FALSE.

====================================================================================
START TIMERS
====================================================================================

These two rungs run the cold start timers used in the "Three Starts" logic when NOT in State 1.]]>
</Comment>
<Text>
<![CDATA[LBL(StartTimers)XIC(Wrk_SecondColdStartT.TT)TON(Wrk_SecondColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(Wrk_FirstColdStartT.TT)TON(Wrk_FirstColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[====================================================================================
VALUES
====================================================================================

This rung makes sure that the RestartInhibit.Wrk_mSecsUntilReady value is greater than or equal to zero.
If it is not, the register value will be cleared.]]>
</Comment>
<Text>
<![CDATA[[XIC(Wrk_Ready) OTE(Sts_Ready) ,LES(Wrk_mSecUntilReady,0) ]CLR(Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[This rung takes the time remaining until the motor is ready to start (in milliseconds), converts it
to seconds, then reports it in  minutes : seconds format for display on the HMI.]]>
</Comment>
<Text>
<![CDATA[DIV(Wrk_mSecUntilReady,1000,Wrk_SecUntilReady)DIV(Wrk_SecUntilReady,60,Val_MinToReady)MOD(Wrk_SecUntilReady,60,Val_SecToReady);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[Val_Fdbk is the current state of the device feedback, as seen on the AOI's Inputs:
0 = Unknown / Invalid
1 = Stopped
2 = Starting
3 = Running

In the EnableInFalse Routine, the feedback is ALWAYS taken as "STOPPED".
(See Instruction Help.)]]>
</Comment>
<Text>
<![CDATA[MOV(1,Val_Fdbk);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[Finally, copy out the internal State number so the HMI can display an animated state diagram.]]>
</Comment>
<Text>
<![CDATA[MOV(Wrk_State,Val_State);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Determine motor readiness based on restart rules]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_ResInh:  PROCESS -- RESTART INHIBIT
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x Revision History archived.
V4.00.00  2018-07-17:  Changed Inf_ items to HMI_, and added Cfg_Area for security.
Modified state diagram to remove a redundant "running cooled" state
(was S09). Changed time configurations to REAL Hours.
V4.10.00  2019-03-08:  Added Cfg_HasMoreObj.
============================================================
This Instruction monitors starts, running and stops of a motor and decides, based on
simple criteria for winding heating, when the motor can be started again.

This Instruction is largely State Machine-based.  It has the following states:
*  S01:  Cold Motor Ready to Start  
*  S02:  Cold Motor Starting
*  S03:  Cold Motor Running
*  S04:  Cold Motor First Failure to Start
*  S05:  Cold Motor Subsequent Failure to Start
*  S06:  Hot Motor Starting
*  S07:  Hot Motor Running
*  S08:  Hot Motor Short Run Then Stopped
*  S09:  Hot Motor First Failure to Start
*  S10:  Hot Motor Subsequent Failure to Start
*  S11:  Hot Motor Ready to Start

Refer to the state diagram in the End User Documentation for details.
NOTE: The state is stored in a Local Tag and not available outside to other
instructions, but can be shown on an HMI.
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)CONCAT(Cfg_Desc,Cfg_Label,Cfg_Tag)CONCAT(Cfg_Area,HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
INVALID STATE
============================================================
If the State number is not valid (valid states are 1..11),
 the various timers are reset (all are retentive), and the State Machine is set to:

*  State S01  ( Cold Motor Ready to Start )  if the pump is NOT Running, or
*  State S03  ( Cold Motor Running )  if the pump is Running.]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)LIM(12,Wrk_State,0)[RES(Wrk_FirstColdStartT) RES(Wrk_SecondColdStartT) RES(Wrk_FirstFailColdT) ,RES(Wrk_SubsFailColdT) RES(Wrk_FirstFailHotT) RES(Wrk_SubsFailHotT) ,RES(Wrk_HotRestartOKT) RES(Wrk_RestartHotT) RES(Wrk_HotToColdT) ,XIO(Inp_Running) MOV(1,Wrk_State) ,XIC(Inp_Running) MOV(3,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[===========================================================================
CONFIGURATION
===========================================================================

This rung gets Configuration data.  Timer Configurations are scaled from seconds to
milliseconds and stored in the appropriate timer presets.
If a calculated timer preset is negative, it will fault the controller;
overwrite it and flag the configuration as bad.

#####  V4.00.00  2018-07-17:  Changed time configurations to REAL Hours.  #####]]>
</Comment>
<Text>
<![CDATA[[[MUL(Cfg_ThreeColdStarts,3600000.0,Wrk_FirstColdStartT.PRE) XIC(Wrk_FirstColdStartT.PRE.31) CLR(Wrk_FirstColdStartT.PRE) ,MUL(Cfg_FirstFailCold,3600000.0,Wrk_FirstFailColdT.PRE) XIC(Wrk_FirstFailColdT.PRE.31) CLR(Wrk_FirstFailColdT.PRE) ,MUL(Cfg_SubseqFailCold,3600000.0,Wrk_SubsFailColdT.PRE) XIC(Wrk_SubsFailColdT.PRE.31) CLR(Wrk_SubsFailColdT.PRE) ,MUL(Cfg_FirstFailHot,3600000.0,Wrk_FirstFailHotT.PRE) XIC(Wrk_FirstFailHotT.PRE.31) CLR(Wrk_FirstFailHotT.PRE) ,MUL(Cfg_SubseqFailHot,3600000.0,Wrk_SubsFailHotT.PRE) XIC(Wrk_SubsFailHotT.PRE.31) CLR(Wrk_SubsFailHotT.PRE) ,MUL(Cfg_HotRestartOK,3600000.0,Wrk_HotRestartOKT.PRE) XIC(Wrk_HotRestartOKT.PRE.31) CLR(Wrk_HotRestartOKT.PRE) ,MUL(Cfg_RestartHot,3600000.0,Wrk_RestartHotT.PRE) XIC(Wrk_RestartHotT.PRE.31) CLR(Wrk_RestartHotT.PRE) ,MUL(Cfg_HotToCold,3600000.0,Wrk_HotToColdT.PRE) XIC(Wrk_HotToColdT.PRE.31) CLR(Wrk_HotToColdT.PRE) ] OTE(Sts_Err) ,MOV(Wrk_FirstColdStartT.PRE,Wrk_SecondColdStartT.PRE) ];]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[====================================================================================
RESTART INHIBIT STATE MACHINE
====================================================================================

The following code implements the State Machine logic shown in the Design Document.

This rung dispatches execution to the code for the current state.  This is to keep from scanning
the code for all the states every scan, and so that certain timers can be shared by multiple states.
(For State = 1, execution just falls through into the State 1 code.)]]>
</Comment>
<Text>
<![CDATA[[EQU(Wrk_State,2) JMP(S02) ,EQU(Wrk_State,3) JMP(S03) ,EQU(Wrk_State,4) JMP(S04) ,EQU(Wrk_State,5) JMP(S05) ,EQU(Wrk_State,6) JMP(S06) ,EQU(Wrk_State,7) JMP(S07) ,EQU(Wrk_State,8) JMP(S08) ,EQU(Wrk_State,9) JMP(S09) ,EQU(Wrk_State,10) JMP(S10) ,EQU(Wrk_State,11) JMP(S11) ];]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S01:  COLD MOTOR READY TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the motor is cold, but ready to start.  
The time since the last cold start attempt is accumulated.

When the motor is started:
If it has been at least LastColdStart minutes since the last attempt was made to start the motor, 
the motor is still considered cold, it has had enough time to cool off.  
If it has been less than LastColdStart minutes since the last attempt was made to start the motor, 
the motor is considered hot due to multiple re-starts in too short a time period.  ]]>
</Comment>
<Text>
<![CDATA[LBL(S01)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[[XIC(Inp_Starting) ,XIC(Inp_Running) ]XIC(Wrk_FirstColdStartT.TT)XIC(Wrk_SecondColdStartT.TT)ADD(Wrk_FailCount,1,Wrk_FailCount)MOV(6,Wrk_State)JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[[[XIC(Inp_Starting) ,XIC(Inp_Running) ] XIC(Wrk_FirstColdStartT.TT) ,XIC(Wrk_SecondColdStartT.TT) ]TON(Wrk_SecondColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[[[XIC(Inp_Starting) ,XIC(Inp_Running) ] ,XIC(Wrk_FirstColdStartT.TT) ]TON(Wrk_FirstColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[[XIC(Inp_Starting) ,XIC(Inp_Running) ]ADD(Wrk_FailCount,1,Wrk_FailCount)MOV(2,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[JMP(Values);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S02:  COLD MOTOR STARTING  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, a Cold motor start attempt has been made.
The time since the last Cold start attempt is accumulated.   
The motor must confirm that it is running within RestartInhibit.Wrk_StartCheckTime minutes.  
If it does, the state will change to S03: Cold Motor Running
If it does not start properly within the allowable time, the state will change to
either S04: 1st Failed Cold Restart, or S05: Subsequent Cold Failed Restart.]]>
</Comment>
<Text>
<![CDATA[LBL(S02)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(Inp_Running)CLR(Wrk_FailCount)MOV(3,Wrk_State)JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(Inp_Starting)[EQU(Wrk_FailCount,1) RES(Wrk_FirstFailColdT) MOV(4,Wrk_State) ,GRT(Wrk_FailCount,1) RES(Wrk_SubsFailColdT) MOV(2,Wrk_FailCount) MOV(5,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S03:  COLD MOTOR RUNNING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, 
The time since the last cold start attempt is accumulated.  
If the cold motor is turned off, the state will change back to S01: Ready to Start, Cold.]]>
</Comment>
<Text>
<![CDATA[LBL(S03)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(Inp_Stopped)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S04:  COLD MOTOR FIRST FAILURE TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Cold motor has failed to start for the first time since it was last running properly.
The time since the last cold start attempt is accumulated.   
The state is changed back to S01: Ready to Start, Cold
when RestartInhibit.Wrk_FirstFailCold timer elapses.]]>
</Comment>
<Text>
<![CDATA[LBL(S04)OTU(Wrk_Ready)RTO(Wrk_FirstFailColdT,?,?)SUB(Wrk_FirstFailColdT.PRE,Wrk_FirstFailColdT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(Wrk_FirstFailColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S05:  COLD MOTOR SUBSEQUENT FAILURE TO START  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Cold motor has failed to start at least twice in a row since it was
last running properly. The time since the last cold start attempt is accumulated.   
The state is changed back to S01: Ready to Start, Cold when RestartInhibit.Wrk_SubsFailCold timer elapses.]]>
</Comment>
<Text>
<![CDATA[LBL(S05)OTU(Wrk_Ready)RTO(Wrk_SubsFailColdT,?,?)SUB(Wrk_SubsFailColdT.PRE,Wrk_SubsFailColdT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(Wrk_SubsFailColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S06:  HOT MOTOR STARTING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, a Hot motor start attempt has been made.  The motor must
confirm that it is running within RestartInhibit.Wrk_StartCheckTime minutes.  
If it does, the state will change to S07: Hot Motor Running < 4 Hours.
If it does not start properly within the allowable time, the state will change to
either S09: 1st Failed Hot Restart, or S10: Subsequent Hot Failed Restart.
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S06)OTL(Wrk_Ready);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(Inp_Running)RES(Wrk_HotRestartOKT)CLR(Wrk_FailCount)MOV(7,Wrk_State)JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(Inp_Starting)[EQU(Wrk_FailCount,1) RES(Wrk_FirstFailHotT) RES(Wrk_HotToColdT) MOV(9,Wrk_State) ,GRT(Wrk_FailCount,1) RES(Wrk_SubsFailHotT) RES(Wrk_HotToColdT) MOV(2,Wrk_FailCount) MOV(10,Wrk_State) ];]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S07:  HOT MOTOR RUNNING  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has been started. 
If it is stopped before RestartInhibit.Wrk_HotRestartOk elapses,
it must wait RestartInhibit.Wrk_RestartHot minutes before it can be restarted  (S08).
If it is stopped after RestartInhibit.Wrk_HotRestartOk elapses, it can be restarted immediately (S03).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S07)OTL(Wrk_Ready)RTO(Wrk_HotRestartOKT,?,?);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(Inp_Stopped)RES(Wrk_RestartHotT)RES(Wrk_HotToColdT)MOV(8,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_HotRestartOKT.DN)MOV(3,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S08:  HOT MOTOR SHORT RUN THEN STOPPED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has been stopped before RestartInhibit.Wrk_HotRestartOk elapsed.
It must wait RestartInhibit.Wrk_RestartHot minutes before it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S08)OTU(Wrk_Ready)RTO(Wrk_RestartHotT,?,?)RTO(Wrk_HotToColdT,?,?)SUB(Wrk_RestartHotT.PRE,Wrk_RestartHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Comment>
<![CDATA[#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_RestartHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S09:  HOT MOTOR FIRST FAILURE TO START 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has failed to start for the first time since it was last running properly.
The time since the Hot motor stopped is accumulated.   Once it reaches the First Hot Fail time,
it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S09)OTU(Wrk_Ready)RTO(Wrk_HotToColdT,?,?)RTO(Wrk_FirstFailHotT,?,?)SUB(Wrk_FirstFailHotT.PRE,Wrk_FirstFailHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Comment>
<![CDATA[#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_FirstFailHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S10:  HOT MOTOR SUBSEQUENT FAILURE TO START
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the Hot motor has failed to start at least twice in a row since it was last running properly.
The time since the Hot motor stopped is accumulated.   Once it reaches the Subsequent Hot Fail Time,
it can be restarted  (S11).
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S10)OTU(Wrk_Ready)RTO(Wrk_HotToColdT,?,?)RTO(Wrk_SubsFailHotT,?,?)SUB(Wrk_SubsFailHotT.PRE,Wrk_SubsFailHotT.ACC,Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Comment>
<![CDATA[#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[XIC(Wrk_SubsFailHotT.DN)MOV(11,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
State S11:  HOT MOTOR READY TO START
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this state, the motor is Hot, but ready to start.  
The time since the Hot motor stopped is accumulated.   
RestartInhibit.Wrk_LastColdStart is run so it is properly timed out when changing to S01: Ready to Start, Cold.  
If 16 hours have elapsed since the Hot motor was running, the state will be changed to S01: Ready to Start, Cold.  
This reflects the fact that the motor has had time to cool off.  
Otherwise, the logic waits for a Start attempt to change the state to S06: Start Check, Hot.
#####  V4.0-00  2018-07-17:  Modified state diagram to remove a redundant "running cooled" state (was S09).  #####]]>
</Comment>
<Text>
<![CDATA[LBL(S11)OTL(Wrk_Ready)RTO(Wrk_HotToColdT,?,?);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(Wrk_HotToColdT.DN)MOV(1,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[[XIC(Inp_Starting) ,XIC(Inp_Running) ]ADD(Wrk_FailCount,1,Wrk_FailCount)MOV(6,Wrk_State);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[JMP(StartTimers);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Comment>
<![CDATA[This is common return point for all states except State 1.

====================================================================================
START TIMERS
====================================================================================

These two rungs run the cold start timers used in the "Three Starts" logic when NOT in State 1.]]>
</Comment>
<Text>
<![CDATA[LBL(StartTimers)XIC(Wrk_SecondColdStartT.TT)TON(Wrk_SecondColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(Wrk_FirstColdStartT.TT)TON(Wrk_FirstColdStartT,?,?);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Comment>
<![CDATA[This code is common for ALL states.

====================================================================================
VALUES
====================================================================================

This rung makes sure that the RestartInhibit.Wrk_mSecsUntilReady value is greater than or equal to zero.
If it is not, the register value will be cleared.]]>
</Comment>
<Text>
<![CDATA[LBL(Values)[XIC(Wrk_Ready) OTE(Sts_Ready) ,LES(Wrk_mSecUntilReady,0) ]CLR(Wrk_mSecUntilReady);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Comment>
<![CDATA[This rung takes the time remaining until the motor is ready to start (in milliseconds), converts it
to seconds, then reports it in  minutes : seconds format for display on the HMI.]]>
</Comment>
<Text>
<![CDATA[DIV(Wrk_mSecUntilReady,1000,Wrk_SecUntilReady)DIV(Wrk_SecUntilReady,60,Val_MinToReady)MOD(Wrk_SecUntilReady,60,Val_SecToReady);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Comment>
<![CDATA[Val_Fdbk is the current state of the device feedback, as seen on the AOI's Inputs:
0 = Unknown / Invalid
1 = Stopped
2 = Starting
3 = Running]]>
</Comment>
<Text>
<![CDATA[[CLR(Wrk_Fdbk) ,XIC(Inp_Stopped) XIO(Inp_Starting) XIO(Inp_Running) MOV(1,Wrk_Fdbk) ,XIO(Inp_Stopped) XIC(Inp_Starting) XIO(Inp_Running) MOV(2,Wrk_Fdbk) ,XIO(Inp_Stopped) XIO(Inp_Starting) XIC(Inp_Running) MOV(3,Wrk_Fdbk) ,MOV(Wrk_Fdbk,Val_Fdbk) ];]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Comment>
<![CDATA[Finally, copy out the internal State number so the HMI can display an animated state diagram.]]>
</Comment>
<Text>
<![CDATA[MOV(Wrk_State,Val_State);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Clear timers and set to known state]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
PRESCAN / POWERUP
============================================================
On Prescan, the various timers are reset (all are retentive), and the State
Machine is set to:
*  State S01  ( Cold Motor Ready to Start )  if the pump is NOT Running, or
*  State S03  ( Cold Motor Running )  if the pump is Running.]]>
</Comment>
<Text>
<![CDATA[[RES(Wrk_FirstColdStartT) RES(Wrk_SecondColdStartT) RES(Wrk_FirstFailColdT) ,RES(Wrk_SubsFailColdT) RES(Wrk_FirstFailHotT) RES(Wrk_SubsFailHotT) ,RES(Wrk_HotRestartOKT) RES(Wrk_RestartHotT) RES(Wrk_HotToColdT) ,XIO(Inp_Running) MOV(1,Wrk_State) ,XIC(Inp_Running) MOV(3,Wrk_State) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="P_RunTime" Revision="4.10" RevisionExtension=".00 Release" Vendor="Rockwell Automation" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2008-04-01T18:56:21.678Z" CreatedBy="Not Available" EditedDate="2019-03-08T17:17:48.264Z" EditedBy="PROCESS\Library"
 SoftwareRevision="v18.02">
<Description>
<![CDATA[Run Time and Starts]]>
</Description>
<RevisionNote>
<![CDATA[See Instruction Help for a summary of changes, and see 4.10 Release Notes for details.]]>
</RevisionNote>
<AdditionalHelpText>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.

This Instruction monitors the "Running" and "Starting" Status of a motor or other device and  provides:

*  Total accumulated run time, in 1/10 hour increments (hour meter)
*  Total number of starts or start attemptes (count)
*  Maximum continuous run time for any start (hours)
*  Program and Maintenance Commands to allow clearing of the totals/maximum

SUMMARY OF CHANGES FROM PREVIOUS VERSION (4.00.00)
See 4.10 Release Notes for details.
* Added Cfg_HasMoreObj.

SUMMARY OF CHANGES FROM PREVIOUS VERSION (3.5-03)
See 4.00 Release Notes for details.
* Changed Inf_ items to HMI_, and added Cfg_Area for security.
* Removed Cfg_PCmdClear; all PCmds are now self-clearing always.
* Operator and Maintenance Commands and Settings are now Local Tags.
]]>
</AdditionalHelpText>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Starting" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor is Starting (from motor instruction)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Running" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Motor is Running (from motor instruction)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="1"/>
</DefaultData>
</Parameter>
<Parameter Name="Cfg_HasMoreObj" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1=Tells HMI an object with more info is available]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_ClearStarts" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Clear Count of Starts (attempts)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_ClearMaxHrs" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Clear Maximum (continuous) Run Time for any start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="PCmd_ClearTotHrs" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Program Command to Clear Total Running Time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_Starts" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Total number of motor starts or attempts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_CurRunHrs" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Current running time this start (hours)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_MaxRunHrs" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Maximum continuous running time for a given start (hours)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_TotRunHrs" TagType="Base" DataType="REAL" Usage="Output" Radix="Float" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Total accumulated running time (hours)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</Parameter>
<Parameter Name="P_RunTime" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unique Parameter Name for auto - discovery]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Wrk_CurHours" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Whole hours of current run time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_CurRunT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Timer for timing current run time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,2147483647,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2147483647"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_TotTenths" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Tenths of hours of total run time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_Starts" DataType="COUNTER" ExternalAccess="None">
<Description>
<![CDATA[Counter for counting motor starts]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,2147483647,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="COUNTER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2147483647"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="CU" DataType="BOOL" Value="0"/>
<DataValueMember Name="CD" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
<DataValueMember Name="OV" DataType="BOOL" Value="0"/>
<DataValueMember Name="UN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_TotRunT" DataType="TIMER" ExternalAccess="None">
<Description>
<![CDATA[Retentive timer for timing 0.1 hour total run time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[0,2147483647,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="TIMER">
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="2147483647"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Wrk_MaxHours" DataType="REAL" Radix="Float" ExternalAccess="None">
<Description>
<![CDATA[Internal Maximum Run Hours]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0.00000000e+000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="REAL" Radix="Float" Value="0.0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Tab" DataType="SINT" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tab to display (FTView ME)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="SINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Type" DataType="STRING_16" ExternalAccess="Read Only">
<Description>
<![CDATA[Must contain AOI name, used for HMI and Information S/W]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,'P_RunTime$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="9">
<![CDATA['P_RunTime']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Label" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Label for graphic symbol displayed on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[8,'Run Time$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="8">
<![CDATA['Run Time']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Tag" DataType="STRING_20" ExternalAccess="Read/Write">
<Description>
<![CDATA[Tagname for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[9,'P_RunTime$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="9">
<![CDATA['P_RunTime']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Desc" DataType="STRING_40" ExternalAccess="Read/Write">
<Description>
<![CDATA[Description for display on HMI]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[28,'Accumulated Run Time (Hours)$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="28">
<![CDATA['Accumulated Run Time (Hours)']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Cfg_Area" DataType="STRING_Area" ExternalAccess="Read/Write">
<Description>
<![CDATA[Process Area for security]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'area01$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['area01']]>
</DefaultData>
</LocalTag>
<LocalTag Name="HMI_Lib" DataType="STRING_12" ExternalAccess="Read Only">
<Description>
<![CDATA[Display Library for Faceplate call-up]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[[6,'RA-BAS$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['RA-BAS']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_ClearTotHrs" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Clear Total Running Time]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_ClearMaxHrs" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Clear Maximum (continuous) Run Time for any start]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MCmd_ClearStarts" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<Description>
<![CDATA[Maintenance Command to Clear Count of Starts (attempts)]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<Description>
<![CDATA[False Rung or Enable In False: as if motor is Stopped]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
ENABLE-IN FALSE HANDLING
============================================================
EnableIn False is treated the same as "Motor Stopped" --
Commands are still processed, 
total run time is held (RTO), the Starts counter is prepared for
the next start (.CU clears on CTU with AFI), and the
Current Run Time is cleared (TON false).
============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands.  This object has no Modes and
Commands are accepted regardless of Mode.  Commands should be
restriceted to authorized personnel (typically at a maintenance level).

PCmd_ClearTotHrs: Program Command to Clear Total Runtime Hours
MCmd_ClearTotHrs: Maintenance Command to Clear Total Runtime Hours]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_ClearTotHrs) OTU(PCmd_ClearTotHrs) ,XIC(MCmd_ClearTotHrs) OTU(MCmd_ClearTotHrs) ]RES(Wrk_TotRunT)CLR(Wrk_TotTenths);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[PCmd_ClearStarts: Program Command to Clear Count of Starts
MCmd_ClearStarts: Maintenance Command to Clear Count of Starts]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_ClearStarts) OTU(PCmd_ClearStarts) ,XIC(MCmd_ClearStarts) OTU(MCmd_ClearStarts) ]RES(Wrk_Starts);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[PCmd_ClearMaxHrs: Program Command to Clear Maximum Single Run Hours
MCmd_ClearMaxHrs: Maintenance Command to Clear Maximum Single Run Hours]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_ClearMaxHrs) OTU(PCmd_ClearMaxHrs) ,XIC(MCmd_ClearMaxHrs) OTU(MCmd_ClearMaxHrs) ]CLR(Wrk_MaxHours)CLR(Val_MaxRunHrs);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[============================================================
ENABLE-IN FALSE HANDLING
============================================================
EnableIn False is treated the same as "Motor Stopped" --
Total run time is held (RTO), the Starts counter is prepared for
the next start (.CU clears on CTU with AFI), and the
Current Run Time is cleared (TON false).

NOTE: IN ORDER TO AVOID USING AN AFI (resulting in routine verification warnings in V17),
THIS RUNG USES AN XIC AND XIO OF THE SAME BIT TO ENSURE THE
TIMERS AND COUNTER ARE SCANNED FALSE.

THIS IS NOT DEAD CODE.  IT IS INTENTIONALLY CODED THIS WAY FOR PROPER OPERATION.]]>
</Comment>
<Text>
<![CDATA[XIC(Inp_Running)XIO(Inp_Running)RTO(Wrk_TotRunT,?,?)CTU(Wrk_Starts,?,?)TON(Wrk_CurRunT,?,?);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[============================================================
REPORT VALUES
============================================================

The number of starts is directly reported as an integer Value.]]>
</Comment>
<Text>
<![CDATA[MOV(Wrk_Starts.ACC,Val_Starts);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[The current hours working register is cleared, but the Value is left
in place for display until the next run begins.

NOTE: The Maximum Run Hours (high-water of Current Run Hours)
is also left in place.]]>
</Comment>
<Text>
<![CDATA[CLR(Wrk_CurHours);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[The Total Running Time is reported as a REAL number of Hours.
(This will always be in "completed tenths" of an hour, like a mechanical hours counter.)]]>
</Comment>
<Text>
<![CDATA[MUL(Wrk_TotTenths,0.1,Val_TotRunHrs);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<Description>
<![CDATA[Accumulate Run Time (if runnings) and Count Starts]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Copyright Â© Rockwell Automation, Inc.  All Rights Reserved.
============================================================
P_RunTime:  PROCESS -- RUN TIME AND STARTS
============================================================
Revision 4.10.00 Release  2019-03-08:  See V4.10.xx Release Notes for details.
V1.x, V2.x, and V3.x Revision History archived.
V4.00.00  2018-07-16:  Changed Inf_ items to HMI_, and added Cfg_Area for security.
Removed Cfg_PCmdClear; all PCmds are now self-clearing always.
Operator and Maintenance Commands and Settings are now Local Tags.
V4.10.00  2019-03-08:  Added Cfg_HasMoreObj.
============================================================
This Instruction monitors the "Running" and "Starting" Status of a motor or other device and  provides:

*  Total accumulated run time, in 1/10 hour increments (hour meter)
*  Total number of starts or start attemptes (count)
*  Maximum continuous run time for any start (hours)
* Commands to allow clearing of the totals/maximum
============================================================
SHOW LOCAL STRINGS
============================================================
The STRINGs containing the text associated with each instance of this
instruction cannot be Input or Output Parameters, because STRINGs are not
 'atomic' types. (Inputs and Outputs must be SINT, INT, DINT, REAL, or BOOL.)

In order to make it easier to find and configure these STRINGs, this rung
was added.  THE JMP (and the LBL on the following rung)
MUST NOT BE REMOVED!!!

To view the STRINGs, go to the instruction instance (in LD or FBD), RIGHT-click
to bring up the context menu and select "Open Instruction Logic".
This rung will appear with the STRING values for the selected instance.
You may double-click the STRING values here to modify them as well.

#####  V4.00.00  2018-07-16:  Changed Inf_ items to HMI_, and added Cfg_Area for security.  #####]]>
</Comment>
<Text>
<![CDATA[JMP(SkipText)LOWER(Cfg_Desc,Cfg_Label)LOWER(Cfg_Tag,Cfg_Area)LOWER(HMI_Lib,HMI_Type);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[============================================================
COMMAND PROCESSING
============================================================
These rungs handle received Commands.  This object has no Modes and
Commands are accepted regardless of Mode.  Commands should be
restriceted to authorized personnel (typically at a maintenance level).

PCmd_ClearTotHrs: Program Command to Clear Total Runtime Hours
MCmd_ClearTotHrs: Maintenance Command to Clear Total Runtime Hours]]>
</Comment>
<Text>
<![CDATA[LBL(SkipText)[XIC(PCmd_ClearTotHrs) OTU(PCmd_ClearTotHrs) ,XIC(MCmd_ClearTotHrs) OTU(MCmd_ClearTotHrs) ]RES(Wrk_TotRunT)CLR(Wrk_TotTenths);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[PCmd_ClearStarts: Program Command to Clear Count of Starts
MCmd_ClearStarts: Maintenance Command to Clear Count of Starts]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_ClearStarts) OTU(PCmd_ClearStarts) ,XIC(MCmd_ClearStarts) OTU(MCmd_ClearStarts) ]RES(Wrk_Starts);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[PCmd_ClearMaxHrs: Program Command to Clear Maximum Single Run Hours
MCmd_ClearMaxHrs: Maintenance Command to Clear Maximum Single Run Hours]]>
</Comment>
<Text>
<![CDATA[[XIC(PCmd_ClearMaxHrs) OTU(PCmd_ClearMaxHrs) ,XIC(MCmd_ClearMaxHrs) OTU(MCmd_ClearMaxHrs) ]CLR(Wrk_MaxHours);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Clear current run hours if stopped.
NOTE: Val_CurHours is maintained for display!]]>
</Comment>
<Text>
<![CDATA[XIO(Inp_Starting)XIO(Inp_Running)RES(Wrk_CurRunT)CLR(Wrk_CurHours);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[============================================================
ACCUMULATE TIMES / STARTS
============================================================
This rung runs the Total (retentive) and Maximum (non-retentive) Run Time
timers and increments the Number of Starts counter  whenever
 the motor/device is Starting or Running (contactor energized...).

NOTE:  The counter only counts on the rising edge of the rung.  As long as
there's no delay between Starting going OFF and Running coming ON, this will work fine.]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Starting) ,XIC(Inp_Running) ][RTO(Wrk_TotRunT,?,?) ,CTU(Wrk_Starts,?,?) ,TON(Wrk_CurRunT,?,?) ];]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[Note that an RTO timer can only time up to 2G milliseconds, about 28 days.
A pump will accumulate much more run time.  So the RTO is used to time 1/10 hour,
which is then added to a count of "Tenths of Hours".  Then the RTO accumulator is reduced by 1/10 hour.
(The timer doesn't lose time because it is not reset and keeps running.)]]>
</Comment>
<Text>
<![CDATA[GEQ(Wrk_TotRunT.ACC,360000)ADD(Wrk_TotTenths,1,Wrk_TotTenths)SUB(Wrk_TotRunT.ACC,360000,Wrk_TotRunT.ACC);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[The Maximum Run Time TON is treated the same way.  A motor/device
could potentially run continuously for more than 28 days, so an integer count
of (up to 2 billion) hours (almost 245,000 years!) is used.  Should be enough...]]>
</Comment>
<Text>
<![CDATA[GEQ(Wrk_CurRunT.ACC,3600000)ADD(Wrk_CurHours,1,Wrk_CurHours)SUB(Wrk_CurRunT.ACC,3600000,Wrk_CurRunT.ACC);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Comment>
<![CDATA[============================================================
REPORT VALUES
============================================================

The number of starts is directly reported as an integer Value.]]>
</Comment>
<Text>
<![CDATA[MOV(Wrk_Starts.ACC,Val_Starts);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Comment>
<![CDATA[The Current (continuous) Run Time is reported as a REAL number of Hours.
This number includes all fractional hours (timer accumulator / 3,600,000 ms/hr),
not just completed tenths like the total run time below.]]>
</Comment>
<Text>
<![CDATA[[XIC(Inp_Starting) ,XIC(Inp_Running) ]CPT(Val_CurRunHrs,Wrk_CurHours+(Wrk_CurRunT.ACC/3600000.0));]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[If the Current Run Time exceeds the stored Maximum Run Time,
update the Maximum.
Regardless, report the Maximum Run Time.

NOTE:  The Wrk_MaxHours register is required to prevent writes to Val_MaxHours
from improperly overwriting this object's state.
]]>
</Comment>
<Text>
<![CDATA[[GRT(Val_CurRunHrs,Wrk_MaxHours) MOV(Val_CurRunHrs,Wrk_MaxHours) ,MOV(Wrk_MaxHours,Val_MaxRunHrs) ];]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[The Total Running Time is reported as a REAL number of Hours.
(This will always be in "completed tenths" of an hour, like a mechanical hours counter.)]]>
</Comment>
<Text>
<![CDATA[MUL(Wrk_TotTenths,0.1,Val_TotRunHrs);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<Description>
<![CDATA[Set Current Run time internally to 0.  Display value is left in place.]]>
</Description>
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[============================================================
POWERUP / PRESCAN HANDLING
============================================================
Total run time, Maximum run time and starts count are retained through
a power cycle.  Current run time is reset (internally only,
Val_CurHours is maintained for display!).]]>
</Comment>
<Text>
<![CDATA[RES(Wrk_CurRunT)CLR(Wrk_CurHours);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[On Prescan, clear any "lurking" Commands.]]>
</Comment>
<Text>
<![CDATA[[OTU(MCmd_ClearMaxHrs) OTU(MCmd_ClearTotHrs) OTU(MCmd_ClearStarts) ,OTU(PCmd_ClearMaxHrs) OTU(PCmd_ClearTotHrs) OTU(PCmd_ClearStarts) ];]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
<Tags>
<Tag Name="_BC101_M01" TagType="Base" DataType="P_Motor" Constant="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[TagDescript]]>
</Description>
<Data Format="L5K">
<![CDATA[[403660923,0,0,0.00000000e+000,2.00000000e+000,1.00000000e+001,1.00000000e+001,0.00000000e+000
,0,16896,1,1,0,0,1,0,0,0,0,0,[40417,512,0,1,0,[8,'P_CmdSrc$00$00$00$00'],[6,'RA-BAS$00$00']],[835,751,480,5,0,0,0,[0,5000
,0],[0,5000,0],[0,28800000,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'I/O Fault$00$00$00$00$00$00$00$00$00$00$00'
],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0],[963,251,480,5,0,0,0,[0,5000
,0],[0,5000,0],[0,28800000,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'Interlock$00$00$00$00$00$00$00$00$00$00$00'
],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0],[963,501,480,5,0,0,0,[0,5000
,0],[0,5000,0],[0,28800000,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[14,'Failed to Stop$00$00$00$00$00$00'
],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0],[835,501,480,5,0,0,0,[0,5000
,0],[0,5000,0],[0,28800000,0],0,2,[7,'P_Alarm$00$00$00$00$00$00$00$00$00$00$00$00$00'],[15,'Failed to Start$00$00$00$00$00'
],0,[6,'RA-BAS$00$00$00$00$00$00'],[7,'P_Alarm$00$00$00$00$00$00$00$00$00'],0],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[9,'Motor 100$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,2000,0],[-1607407173,10000,10000],[0,10000,0],[-1607415176,2000,2000],0,0,0,1,0,[7,'P_Motor$00$00$00$00$00$00$00$00$00'
],[6,'RA-BAS$00$00$00$00$00$00'],1,0,[0,10000,0],[0,10000,0],[6,'area01$00$00'],0,[0,0,0],[0,0,0]]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="P_Motor">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_RunFdbk" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_PermOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_NBPermOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_IntlkOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_NBIntlkOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_IntlkAvail" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OvldNotify" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Inp_IOFault" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Sim" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_OvrdCmd" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Inp_ExtInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_HornInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasJog" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasRunFdbk" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_UseRunFdbk" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_AllowLocal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasPermObj" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasIntlkObj" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasResInhObj" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasRunTimeObj" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasOvldObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMoreObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_OperStopPrio" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ExtStopPrio" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_OCmdResets" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_XCmdResets" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_OvrdPermIntlk" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ShedOnFailToStart" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_ShedOnIOFault" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_HasFailToStartAlm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasFailToStopAlm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasIntlkTripAlm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasIOFaultAlm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_FailToStartResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_FailToStopResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_IntlkTripResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_IOFaultResetReqd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_FailToStartAckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_FailToStopAckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_IntlkTripAckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_IOFaultAckReqd" DataType="BOOL" Value="1"/>
<DataValueMember Name="Cfg_FailToStartSeverity" DataType="DINT" Radix="Decimal" Value="501"/>
<DataValueMember Name="Cfg_FailToStopSeverity" DataType="DINT" Radix="Decimal" Value="501"/>
<DataValueMember Name="Cfg_IntlkTripSeverity" DataType="DINT" Radix="Decimal" Value="251"/>
<DataValueMember Name="Cfg_IOFaultSeverity" DataType="DINT" Radix="Decimal" Value="751"/>
<DataValueMember Name="Cfg_StartHornT" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Cfg_SimFdbkT" DataType="REAL" Radix="Float" Value="2.0"/>
<DataValueMember Name="Cfg_FailToStartT" DataType="REAL" Radix="Float" Value="10.0"/>
<DataValueMember Name="Cfg_FailToStopT" DataType="REAL" Radix="Float" Value="10.0"/>
<DataValueMember Name="Cfg_MaxJogT" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="PSet_Owner" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="PCmd_Start" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Stop" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Prog" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Lock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStartAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStartSuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStartUnsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStartUnshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStopAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStopSuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStopUnsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_FailToStopUnshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IntlkTripAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IntlkTripSuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IntlkTripUnsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IntlkTripUnshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IOFaultAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IOFaultSuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IOFaultUnsuppress" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_IOFaultUnshelve" DataType="BOOL" Value="0"/>
<DataValueMember Name="MCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="OCmd_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Start" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Stop" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Jog" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Acq" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="XCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Out_Run" DataType="BOOL" Value="0"/>
<DataValueMember Name="Out_Start" DataType="BOOL" Value="0"/>
<DataValueMember Name="Out_Stop" DataType="BOOL" Value="0"/>
<DataValueMember Name="Out_Horn" DataType="BOOL" Value="0"/>
<DataValueMember Name="SrcQ_IO" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="SrcQ" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Val_Cmd" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_Fdbk" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_Sts" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Val_Fault" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_NotifyAll" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_UnackAlmC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_Owner" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Sts_Horn" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Stopped" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_Starting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Running" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Stopping" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Jogging" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Available" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_Bypass" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_BypActive" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_NotRdy" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_CfgErr" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_Fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_Intlk" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_IOFault" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_Perm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Nrdy_PrioStop" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_MaintByp" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_AlmInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Timer" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Sim" DataType="BOOL" Value="0"/>
<DataValueMember Name="Err_Alarm" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Hand" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OoS" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Maint" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ovrd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Ext" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Prog" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_ProgLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Oper" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_OperLocked" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Normal" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ExtReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ProgReqInh" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_MAcqRcvd" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyAck" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStart" DataType="BOOL" Value="0"/>
<DataValueMember Name="Alm_FailToStart" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack_FailToStart" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_FailToStartDisabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStartShelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStartSuppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStop" DataType="BOOL" Value="0"/>
<DataValueMember Name="Alm_FailToStop" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack_FailToStop" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_FailToStopDisabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStopShelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FailToStopSuppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IntlkTrip" DataType="BOOL" Value="0"/>
<DataValueMember Name="Alm_IntlkTrip" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack_IntlkTrip" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_IntlkTripDisabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IntlkTripShelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IntlkTripSuppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IOFault" DataType="BOOL" Value="0"/>
<DataValueMember Name="Alm_IOFault" DataType="BOOL" Value="0"/>
<DataValueMember Name="Ack_IOFault" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_IOFaultDisabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IOFaultShelved" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IOFaultSuppressed" DataType="BOOL" Value="0"/>
<DataValueMember Name="MRdy_Rel" DataType="BOOL" Value="0"/>
<DataValueMember Name="ORdy_Unlock" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_Motor" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="_BC101_M01_Intlk" TagType="Base" DataType="P_Intlk" Constant="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[TagDescript - Interlocks]]>
</Description>
<Data Format="L5K">
<![CDATA[[395,0,0,0,0,0,0,[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
]],0,0,0,0,0,0,0,0,[7,'P_Intlk$00$00$00$00$00$00$00$00$00'],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[11,'_BC101_M01_Intlk$00$00$00$00$00$00$00$00$00'],[25,'Interlocks with First Out$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
]],[6,'RA-BAS$00$00$00$00$00$00'],0,[6,'area01$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
]]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="P_Intlk">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Intlk00" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk01" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk02" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk03" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk04" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk05" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk06" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk07" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk08" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk09" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk10" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk11" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk12" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk13" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk14" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Intlk15" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_BypActive" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_LatchDefeat" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_OKState" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_Latched" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_Bypassable" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_HasNav" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_HasMoreObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_IntlkOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_NBIntlkOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_BypActive" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_RdyReset" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Intlk" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Sts_FirstOut" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="P_Intlk" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="_BC101_M01_Perm" TagType="Base" DataType="P_Perm" Constant="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[TagDescript - Permissive]]>
</Description>
<Data Format="L5K">
<![CDATA[[51,-1,0,0,-1,[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
]],-1,-1,0,-1,[6,'P_Perm$00$00$00$00$00$00$00$00$00$00'],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[10,'_BC101_M01_Perm$00$00$00$00$00$00$00$00$00$00'],[10,'Permissive$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
]],[6,'RA-BAS$00$00$00$00$00$00'],0,[6,'area01$00$00']]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="P_Perm">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm00" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm01" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm02" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm03" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm04" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm05" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm06" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm07" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm08" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm09" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm10" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm11" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm12" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm13" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm14" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Perm15" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_BypActive" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_OKState" DataType="INT" Radix="Binary" Value="2#1111_1111_1111_1111"/>
<DataValueMember Name="Cfg_Bypassable" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_HasNav" DataType="INT" Radix="Binary" Value="2#0000_0000_0000_0000"/>
<DataValueMember Name="Cfg_HasMoreObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_PermOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_NBPermOK" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_BypActive" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Perm" DataType="INT" Radix="Binary" Value="2#1111_1111_1111_1111"/>
<DataValueMember Name="P_Perm" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="_BC101_M01_ResInh" TagType="Base" DataType="P_ResInh" Constant="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[TagDescript - Restart Inhibit]]>
</Description>
<Data Format="L5K">
<![CDATA[[583,5.00000000e-001,5.00000000e-001,4.00000000e+000,5.00000000e-001,4.00000000e+000,1.00000000e+000
,1.00000000e+000,1.60000000e+001,0,0,1,1,[0,1800000,0],[0,1800000,0],[0,14400000,0],[0,1800000,0],[0,14400000,0
],[0,3600000,0],[0,3600000,0],[0,57600000,0],0,0,0,1,[0,1800000,0],0,1,[8,'P_ResInh$00$00$00$00$00$00$00$00'],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[12,'_BC101_M01_ResInh$00$00$00$00$00$00$00$00'],[15,'Restart Inhibit$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[6,'area01$00$00'],[6,'RA-BAS$00$00$00$00$00$00']]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="P_ResInh">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Stopped" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Starting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Running" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMoreObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_ThreeColdStarts" DataType="REAL" Radix="Float" Value="0.5"/>
<DataValueMember Name="Cfg_FirstFailCold" DataType="REAL" Radix="Float" Value="0.5"/>
<DataValueMember Name="Cfg_SubseqFailCold" DataType="REAL" Radix="Float" Value="4.0"/>
<DataValueMember Name="Cfg_FirstFailHot" DataType="REAL" Radix="Float" Value="0.5"/>
<DataValueMember Name="Cfg_SubseqFailHot" DataType="REAL" Radix="Float" Value="4.0"/>
<DataValueMember Name="Cfg_HotRestartOK" DataType="REAL" Radix="Float" Value="1.0"/>
<DataValueMember Name="Cfg_RestartHot" DataType="REAL" Radix="Float" Value="1.0"/>
<DataValueMember Name="Cfg_HotToCold" DataType="REAL" Radix="Float" Value="16.0"/>
<DataValueMember Name="Val_MinToReady" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_SecToReady" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_Fdbk" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Val_State" DataType="DINT" Radix="Decimal" Value="1"/>
<DataValueMember Name="Sts_Ready" DataType="BOOL" Value="1"/>
<DataValueMember Name="Sts_Err" DataType="BOOL" Value="0"/>
<DataValueMember Name="P_ResInh" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="_BC101_M01_RunTime" TagType="Base" DataType="P_RunTime" Constant="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[TagDescript - RunTime]]>
</Description>
<Data Format="L5K">
<![CDATA[[3,0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,[0,2147483647,0],0,[0,2147483647,0],[0,2147483647
,0],0.00000000e+000,0,[9,'P_RunTime$00$00$00$00$00$00$00'],[5,'_BC101_M01$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[13,'_BC101_M01_RunTime$00$00$00$00$00$00$00'],[7,'RunTime$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
],[6,'area01$00$00'],[6,'RA-BAS$00$00$00$00$00$00']]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="P_RunTime">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Inp_Starting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Running" DataType="BOOL" Value="0"/>
<DataValueMember Name="Cfg_HasMoreObj" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_ClearStarts" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_ClearMaxHrs" DataType="BOOL" Value="0"/>
<DataValueMember Name="PCmd_ClearTotHrs" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Starts" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_CurRunHrs" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Val_MaxRunHrs" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="Val_TotRunHrs" DataType="REAL" Radix="Float" Value="0.0"/>
<DataValueMember Name="P_RunTime" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Programs>
<Program Name="MainProgram" TestEdits="false" MainRoutineName="MainRoutine" Disabled="false" UseAsFolder="false">
<Tags/>
<Routines>
<Routine Name="MainRoutine" Type="RLL"/>
</Routines>
</Program>
<Program Name="MainProgram_TaskB" TestEdits="false" MainRoutineName="MainRoutine" Disabled="false" UseAsFolder="false">
<Tags>
<Tag Name="_BC101_M01_Inp_RunFdbk" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Input" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Runing Feedback Input]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="_BC101_M01_Inp_RunFdbk_ChanFault" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Input" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Runing Feedback Input Channel Fault]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="_BC101_M01_Inp_RunFdbk_ModFault" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Input" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Runing Feedback Input Module Fault]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="_BC101_M01_IOFault_Bor" TagType="Base" DataType="FBD_BOOLEAN_OR" Constant="false" ExternalAccess="Read Only">
<Data Format="L5K">
<![CDATA[[1,1,5.60519386e-045]]]>
</Data>
<Data Format="Decorated">
<Structure DataType="FBD_BOOLEAN_OR">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="In1" DataType="BOOL" Value="0"/>
<DataValueMember Name="In2" DataType="BOOL" Value="0"/>
<DataValueMember Name="In3" DataType="BOOL" Value="0"/>
<DataValueMember Name="In4" DataType="BOOL" Value="0"/>
<DataValueMember Name="In5" DataType="BOOL" Value="0"/>
<DataValueMember Name="In6" DataType="BOOL" Value="0"/>
<DataValueMember Name="In7" DataType="BOOL" Value="0"/>
<DataValueMember Name="In8" DataType="BOOL" Value="0"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="1"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="_BC101_M01_Out_Run" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Output" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Run Output]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="_BC101_M01_Out_Run_ChanFault" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Input" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Run Output Channel Fault]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="_BC101_M01_Out_Run_ModFault" TagType="Base" DataType="BOOL" Radix="Decimal" Usage="Input" Constant="false" ExternalAccess="Read Only">
<Description>
<![CDATA[TagDescript - Run Output Module Fault]]>
</Description>
<Data Format="L5K">
<![CDATA[0]]>
</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="_BC101_M01" Type="FBD">
<Description>
<![CDATA[TagDescript]]>
</Description>
<FBDContent SheetSize="B - 11 x 17 in" SheetOrientation="Landscape">
<Sheet Number="1">
<Description>
<![CDATA[PS_Motor]]>
</Description>
<IRef ID="0" X="680" Y="260" Operand="_BC101_M01_Inp_RunFdbk" HideDesc="false"/>
<ORef ID="1" X="1050" Y="260" Operand="_BC101_M01_Out_Run" HideDesc="false"/>
<ICon ID="2" X="680" Y="360" Name="IOFault"/>
<ICon ID="3" X="680" Y="320" Name="IntlkOK"/>
<ICon ID="4" X="540" Y="340" Name="NBIntlkOK"/>
<ICon ID="5" X="540" Y="300" Name="NBPermOK"/>
<ICon ID="6" X="680" Y="280" Name="PermOK"/>
<OCon ID="7" X="1050" Y="400" Name="BypActive"/>
<OCon ID="8" X="1410" Y="600" Name="Ready"/>
<OCon ID="9" X="1050" Y="320" Name="Stoppped"/>
<AddOnInstruction Name="P_Motor" ID="10" X="800" Y="200" Operand="_BC101_M01" VisiblePins="Inp_RunFdbk Inp_PermOK Inp_NBPermOK Inp_IntlkOK Inp_NBIntlkOK Inp_IOFault Out_Run Out_Horn Sts_Stopped Sts_Starting Sts_Running Sts_Stopping Sts_Jogging Sts_BypActive Sts_Err Sts_Hand Sts_OoS Sts_Maint Sts_Ovrd Sts_Ext Sts_Prog Sts_Oper"/>
<AddOnInstruction Name="P_ResInh" ID="11" X="1200" Y="500" Operand="_BC101_M01_ResInh" VisiblePins="Inp_Stopped Inp_Starting Inp_Running Val_MinToReady Val_SecToReady Sts_Ready Sts_Err"/>
<AddOnInstruction Name="P_RunTime" ID="12" X="1200" Y="280" Operand="_BC101_M01_RunTime" VisiblePins="Inp_Starting Inp_Running Val_Starts Val_CurRunHrs Val_MaxRunHrs Val_TotRunHrs"/>
<Wire FromID="0" ToID="10" ToParam="Inp_RunFdbk"/>
<Wire FromID="2" ToID="10" ToParam="Inp_IOFault"/>
<Wire FromID="3" ToID="10" ToParam="Inp_IntlkOK"/>
<Wire FromID="4" ToID="10" ToParam="Inp_NBIntlkOK"/>
<Wire FromID="5" ToID="10" ToParam="Inp_NBPermOK"/>
<Wire FromID="6" ToID="10" ToParam="Inp_PermOK"/>
<Wire FromID="10" FromParam="Out_Run" ToID="1"/>
<Wire FromID="10" FromParam="Sts_BypActive" ToID="7"/>
<Wire FromID="10" FromParam="Sts_Stopped" ToID="9"/>
<Wire FromID="10" FromParam="Sts_Running" ToID="11" ToParam="Inp_Running"/>
<Wire FromID="10" FromParam="Sts_Starting" ToID="11" ToParam="Inp_Starting"/>
<Wire FromID="10" FromParam="Sts_Stopped" ToID="11" ToParam="Inp_Stopped"/>
<Wire FromID="10" FromParam="Sts_Running" ToID="12" ToParam="Inp_Running"/>
<Wire FromID="10" FromParam="Sts_Starting" ToID="12" ToParam="Inp_Starting"/>
<Wire FromID="11" FromParam="Sts_Ready" ToID="8"/>
<TextBox ID="13" X="1400" Y="1000" Width="0">
<Text>
<![CDATA[(RA-

LIB)PS_Motor_4_10_01_ROUTINE]]>
</Text>
</TextBox>
</Sheet>
<Sheet Number="2">
<Description>
<![CDATA[Permissives]]>
</Description>
<ICon ID="14" X="1100" Y="580" Name="BypActive"/>
<ICon ID="15" X="1100" Y="260" Name="Ready"/>
<OCon ID="16" X="1500" Y="280" Name="NBPermOK"/>
<OCon ID="17" X="1590" Y="260" Name="PermOK"/>
<AddOnInstruction Name="P_Perm" ID="18" X="1200" Y="200" Operand="_BC101_M01_Perm" VisiblePins="Inp_Perm00 Inp_Perm01 Inp_Perm02 Inp_Perm03 Inp_Perm04 Inp_Perm05 Inp_Perm06 Inp_Perm07 Inp_Perm08 Inp_Perm09 Inp_Perm10 Inp_Perm11 Inp_Perm12 Inp_Perm13 Inp_Perm14 Inp_Perm15 Inp_BypActive Sts_PermOK Sts_NBPermOK"/>
<Wire FromID="18" FromParam="Sts_NBPermOK" ToID="16"/>
<Wire FromID="18" FromParam="Sts_PermOK" ToID="17"/>
<FeedbackWire FromID="14" ToID="18" ToParam="Inp_BypActive"/>
<FeedbackWire FromID="15" ToID="18" ToParam="Inp_Perm00"/>
</Sheet>
<Sheet Number="3">
<Description>
<![CDATA[Interlocks]]>
</Description>
<ICon ID="19" X="1000" Y="580" Name="BypActive"/>
<ICon ID="20" X="1080" Y="600" Name="Stoppped"/>
<OCon ID="21" X="1580" Y="260" Name="IntlkOK"/>
<OCon ID="22" X="1490" Y="280" Name="NBIntlkOK"/>
<AddOnInstruction Name="P_Intlk" ID="23" X="1200" Y="200" Operand="_BC101_M01_Intlk" VisiblePins="Inp_Intlk00 Inp_Intlk01 Inp_Intlk02 Inp_Intlk03 Inp_Intlk04 Inp_Intlk05 Inp_Intlk06 Inp_Intlk07 Inp_Intlk08 Inp_Intlk09 Inp_Intlk10 Inp_Intlk11 Inp_Intlk12 Inp_Intlk13 Inp_Intlk14 Inp_Intlk15 Inp_BypActive Inp_LatchDefeat Inp_Reset Sts_IntlkOK Sts_NBIntlkOK"/>
<Wire FromID="23" FromParam="Sts_IntlkOK" ToID="21"/>
<Wire FromID="23" FromParam="Sts_NBIntlkOK" ToID="22"/>
<FeedbackWire FromID="19" ToID="23" ToParam="Inp_BypActive"/>
<FeedbackWire FromID="20" ToID="23" ToParam="Inp_LatchDefeat"/>
</Sheet>
<Sheet Number="4">
<Description>
<![CDATA[IO Fault]]>
</Description>
<IRef ID="24" X="400" Y="360" Operand="_BC101_M01_Inp_RunFdbk_ChanFault" HideDesc="false"/>
<IRef ID="25" X="400" Y="260" Operand="_BC101_M01_Inp_RunFdbk_ModFault" HideDesc="false"/>
<IRef ID="26" X="400" Y="560" Operand="_BC101_M01_Out_Run_ChanFault" HideDesc="false"/>
<IRef ID="27" X="400" Y="460" Operand="_BC101_M01_Out_Run_ModFault" HideDesc="false"/>
<OCon ID="28" X="800" Y="260" Name="IOFault"/>
<Block Type="BOR" ID="29" X="600" Y="200" Operand="_BC101_M01_IOFault_Bor" VisiblePins="In1 In2 In3 In4 Out" HideDesc="false"/>
<Wire FromID="24" ToID="29" ToParam="In2"/>
<Wire FromID="25" ToID="29" ToParam="In1"/>
<Wire FromID="26" ToID="29" ToParam="In4"/>
<Wire FromID="27" ToID="29" ToParam="In3"/>
<Wire FromID="29" FromParam="Out" ToID="28"/>
</Sheet>
</FBDContent>
</Routine>
<Routine Name="Main_Routine" Type="RLL"/>
</Routines>
</Program>
</Programs>
<Tasks>
<Task Name="MainTask" Type="PERIODIC" Rate="50" Priority="10" Watchdog="500" DisableUpdateOutputs="false" InhibitTask="false">
<ScheduledPrograms>
<ScheduledProgram Name="MainProgram"/>
</ScheduledPrograms>
</Task>
<Task Name="TaskB" Type="PERIODIC" Rate="100" Priority="10" Watchdog="500" DisableUpdateOutputs="false" InhibitTask="false">
<ScheduledPrograms>
<ScheduledProgram Name="MainProgram_TaskB"/>
</ScheduledPrograms>
</Task>
</Tasks>

<CommPorts>
<SerialPort Channel="0" BaudRate="19200" Parity="No Parity" DataBits="8 Bits of Data" StopBits="1 Stop Bit" ComDriverId="DF1" RTSOffDelay="0" RTSSendDelay="0" ControlLine="No Handshake" RemoteModeChangeFlag="false" ModeChangeAttentionChar="27"
 SystemModeCharacter="83" UserModeCharacter="85" DCDWaitDelay="0">
<ASCII XONXOFFEnable="false" DeleteMode="0" EchoMode="0" TerminationChars="65293" AppendChars="2573" BufferSize="82"/>
<DF1 DuplicateDetection="true" ErrorDetection="BCC Error" EmbeddedResponseEnable="Autodetect" DF1Mode="Pt to Pt" ACKTimeout="50" NAKReceiveLimit="3" ENQTransmitLimit="3" TransmitRetries="3" StationAddress="0" ReplyMessageWait="5" PollingMode="Message Based (slave can initiate messages)"
 MasterMessageTransmit="Between station polls" NormalPollNodeFile="&lt;NA>" NormalPollGroupSize="0" PriorityPollNodeFile="&lt;NA>" ActiveStationFile="&lt;NA>" SlavePollTimeout="3000" EOTSuppression="0" MaxStationAddress="31" TokenHoldFactor="1" EnableStoreFwd="false" StoreFwdFile="&lt;NA>"
/>
</SerialPort>
</CommPorts>
<CST MasterID="0"/>
<WallClockTime LocalTimeAdjustment="0" TimeZone="0"/>
<Trends/>
<DataLogs/>
<TimeSynchronize Priority1="128" Priority2="128" PTPEnable="false"/>
</Controller>
</RSLogix5000Content>